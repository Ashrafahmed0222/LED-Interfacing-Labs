
LED_TASKs.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003976  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  00003976  000039ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         0000240c  00000000  00000000  00003a0c  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      00000af0  00000000  00000000  00005e18  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00006908  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00006a48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00006bb8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  00008801  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  000096ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000a49c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000a5fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000a889  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000b057  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	10 e0       	ldi	r17, 0x00	; 0
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e6 e7       	ldi	r30, 0x76	; 118
      68:	f9 e3       	ldi	r31, 0x39	; 57
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a0 38       	cpi	r26, 0x80	; 128
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 32 10 	call	0x2064	; 0x2064 <main>
      7a:	0c 94 b9 1c 	jmp	0x3972	; 0x3972 <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 82 1c 	jmp	0x3904	; 0x3904 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e6       	ldi	r26, 0x60	; 96
     118:	b0 e0       	ldi	r27, 0x00	; 0
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 9e 1c 	jmp	0x393c	; 0x393c <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 8e 1c 	jmp	0x391c	; 0x391c <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 aa 1c 	jmp	0x3954	; 0x3954 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 8e 1c 	jmp	0x391c	; 0x391c <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 aa 1c 	jmp	0x3954	; 0x3954 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 82 1c 	jmp	0x3904	; 0x3904 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e6       	ldi	r24, 0x60	; 96
     486:	90 e0       	ldi	r25, 0x00	; 0
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 9e 1c 	jmp	0x393c	; 0x393c <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 8e 1c 	jmp	0x391c	; 0x391c <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 aa 1c 	jmp	0x3954	; 0x3954 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 8e 1c 	jmp	0x391c	; 0x391c <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 aa 1c 	jmp	0x3954	; 0x3954 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 8e 1c 	jmp	0x391c	; 0x391c <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 aa 1c 	jmp	0x3954	; 0x3954 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 92 1c 	jmp	0x3924	; 0x3924 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 ae 1c 	jmp	0x395c	; 0x395c <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <DIO_enumSetPinDirection>:
#include "DIO_interface.h"
#include "DIO_private.h"
#include "DIO_config.h"


DIO_ErrorStatus DIO_enumSetPinDirection (u8 Copy_u8PORT, u8 Copy_u8PIN, u8 Copy_u8Direction ){
     b36:	df 93       	push	r29
     b38:	cf 93       	push	r28
     b3a:	cd b7       	in	r28, 0x3d	; 61
     b3c:	de b7       	in	r29, 0x3e	; 62
     b3e:	28 97       	sbiw	r28, 0x08	; 8
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	8a 83       	std	Y+2, r24	; 0x02
     b4c:	6b 83       	std	Y+3, r22	; 0x03
     b4e:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumState = DIO_OK;
     b50:	81 e0       	ldi	r24, 0x01	; 1
     b52:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PORT <=  DIO_PORTD && Copy_u8PIN <= DIO_PIN7 )
     b54:	8a 81       	ldd	r24, Y+2	; 0x02
     b56:	84 30       	cpi	r24, 0x04	; 4
     b58:	08 f0       	brcs	.+2      	; 0xb5c <DIO_enumSetPinDirection+0x26>
     b5a:	f1 c0       	rjmp	.+482    	; 0xd3e <DIO_enumSetPinDirection+0x208>
     b5c:	8b 81       	ldd	r24, Y+3	; 0x03
     b5e:	88 30       	cpi	r24, 0x08	; 8
     b60:	08 f0       	brcs	.+2      	; 0xb64 <DIO_enumSetPinDirection+0x2e>
     b62:	ed c0       	rjmp	.+474    	; 0xd3e <DIO_enumSetPinDirection+0x208>
	{


		if(Copy_u8Direction == DIO_PIN_OUTPUT)
     b64:	8c 81       	ldd	r24, Y+4	; 0x04
     b66:	81 30       	cpi	r24, 0x01	; 1
     b68:	09 f0       	breq	.+2      	; 0xb6c <DIO_enumSetPinDirection+0x36>
     b6a:	6f c0       	rjmp	.+222    	; 0xc4a <DIO_enumSetPinDirection+0x114>
		{
			switch(Copy_u8PORT)
     b6c:	8a 81       	ldd	r24, Y+2	; 0x02
     b6e:	28 2f       	mov	r18, r24
     b70:	30 e0       	ldi	r19, 0x00	; 0
     b72:	38 87       	std	Y+8, r19	; 0x08
     b74:	2f 83       	std	Y+7, r18	; 0x07
     b76:	8f 81       	ldd	r24, Y+7	; 0x07
     b78:	98 85       	ldd	r25, Y+8	; 0x08
     b7a:	81 30       	cpi	r24, 0x01	; 1
     b7c:	91 05       	cpc	r25, r1
     b7e:	49 f1       	breq	.+82     	; 0xbd2 <DIO_enumSetPinDirection+0x9c>
     b80:	2f 81       	ldd	r18, Y+7	; 0x07
     b82:	38 85       	ldd	r19, Y+8	; 0x08
     b84:	22 30       	cpi	r18, 0x02	; 2
     b86:	31 05       	cpc	r19, r1
     b88:	2c f4       	brge	.+10     	; 0xb94 <DIO_enumSetPinDirection+0x5e>
     b8a:	8f 81       	ldd	r24, Y+7	; 0x07
     b8c:	98 85       	ldd	r25, Y+8	; 0x08
     b8e:	00 97       	sbiw	r24, 0x00	; 0
     b90:	61 f0       	breq	.+24     	; 0xbaa <DIO_enumSetPinDirection+0x74>
     b92:	d6 c0       	rjmp	.+428    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
     b94:	2f 81       	ldd	r18, Y+7	; 0x07
     b96:	38 85       	ldd	r19, Y+8	; 0x08
     b98:	22 30       	cpi	r18, 0x02	; 2
     b9a:	31 05       	cpc	r19, r1
     b9c:	71 f1       	breq	.+92     	; 0xbfa <DIO_enumSetPinDirection+0xc4>
     b9e:	8f 81       	ldd	r24, Y+7	; 0x07
     ba0:	98 85       	ldd	r25, Y+8	; 0x08
     ba2:	83 30       	cpi	r24, 0x03	; 3
     ba4:	91 05       	cpc	r25, r1
     ba6:	e9 f1       	breq	.+122    	; 0xc22 <DIO_enumSetPinDirection+0xec>
     ba8:	cb c0       	rjmp	.+406    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			{
				case DIO_PORTA: SET_BIT(DDRA, Copy_u8PIN); break;
     baa:	aa e3       	ldi	r26, 0x3A	; 58
     bac:	b0 e0       	ldi	r27, 0x00	; 0
     bae:	ea e3       	ldi	r30, 0x3A	; 58
     bb0:	f0 e0       	ldi	r31, 0x00	; 0
     bb2:	80 81       	ld	r24, Z
     bb4:	48 2f       	mov	r20, r24
     bb6:	8b 81       	ldd	r24, Y+3	; 0x03
     bb8:	28 2f       	mov	r18, r24
     bba:	30 e0       	ldi	r19, 0x00	; 0
     bbc:	81 e0       	ldi	r24, 0x01	; 1
     bbe:	90 e0       	ldi	r25, 0x00	; 0
     bc0:	02 2e       	mov	r0, r18
     bc2:	02 c0       	rjmp	.+4      	; 0xbc8 <DIO_enumSetPinDirection+0x92>
     bc4:	88 0f       	add	r24, r24
     bc6:	99 1f       	adc	r25, r25
     bc8:	0a 94       	dec	r0
     bca:	e2 f7       	brpl	.-8      	; 0xbc4 <DIO_enumSetPinDirection+0x8e>
     bcc:	84 2b       	or	r24, r20
     bce:	8c 93       	st	X, r24
     bd0:	b7 c0       	rjmp	.+366    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
				case DIO_PORTB: SET_BIT(DDRB, Copy_u8PIN); break;
     bd2:	a7 e3       	ldi	r26, 0x37	; 55
     bd4:	b0 e0       	ldi	r27, 0x00	; 0
     bd6:	e7 e3       	ldi	r30, 0x37	; 55
     bd8:	f0 e0       	ldi	r31, 0x00	; 0
     bda:	80 81       	ld	r24, Z
     bdc:	48 2f       	mov	r20, r24
     bde:	8b 81       	ldd	r24, Y+3	; 0x03
     be0:	28 2f       	mov	r18, r24
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	81 e0       	ldi	r24, 0x01	; 1
     be6:	90 e0       	ldi	r25, 0x00	; 0
     be8:	02 2e       	mov	r0, r18
     bea:	02 c0       	rjmp	.+4      	; 0xbf0 <DIO_enumSetPinDirection+0xba>
     bec:	88 0f       	add	r24, r24
     bee:	99 1f       	adc	r25, r25
     bf0:	0a 94       	dec	r0
     bf2:	e2 f7       	brpl	.-8      	; 0xbec <DIO_enumSetPinDirection+0xb6>
     bf4:	84 2b       	or	r24, r20
     bf6:	8c 93       	st	X, r24
     bf8:	a3 c0       	rjmp	.+326    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
				case DIO_PORTC: SET_BIT(DDRC, Copy_u8PIN); break;
     bfa:	a4 e3       	ldi	r26, 0x34	; 52
     bfc:	b0 e0       	ldi	r27, 0x00	; 0
     bfe:	e4 e3       	ldi	r30, 0x34	; 52
     c00:	f0 e0       	ldi	r31, 0x00	; 0
     c02:	80 81       	ld	r24, Z
     c04:	48 2f       	mov	r20, r24
     c06:	8b 81       	ldd	r24, Y+3	; 0x03
     c08:	28 2f       	mov	r18, r24
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	90 e0       	ldi	r25, 0x00	; 0
     c10:	02 2e       	mov	r0, r18
     c12:	02 c0       	rjmp	.+4      	; 0xc18 <DIO_enumSetPinDirection+0xe2>
     c14:	88 0f       	add	r24, r24
     c16:	99 1f       	adc	r25, r25
     c18:	0a 94       	dec	r0
     c1a:	e2 f7       	brpl	.-8      	; 0xc14 <DIO_enumSetPinDirection+0xde>
     c1c:	84 2b       	or	r24, r20
     c1e:	8c 93       	st	X, r24
     c20:	8f c0       	rjmp	.+286    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
				case DIO_PORTD: SET_BIT(DDRD, Copy_u8PIN); break;
     c22:	a1 e3       	ldi	r26, 0x31	; 49
     c24:	b0 e0       	ldi	r27, 0x00	; 0
     c26:	e1 e3       	ldi	r30, 0x31	; 49
     c28:	f0 e0       	ldi	r31, 0x00	; 0
     c2a:	80 81       	ld	r24, Z
     c2c:	48 2f       	mov	r20, r24
     c2e:	8b 81       	ldd	r24, Y+3	; 0x03
     c30:	28 2f       	mov	r18, r24
     c32:	30 e0       	ldi	r19, 0x00	; 0
     c34:	81 e0       	ldi	r24, 0x01	; 1
     c36:	90 e0       	ldi	r25, 0x00	; 0
     c38:	02 2e       	mov	r0, r18
     c3a:	02 c0       	rjmp	.+4      	; 0xc40 <DIO_enumSetPinDirection+0x10a>
     c3c:	88 0f       	add	r24, r24
     c3e:	99 1f       	adc	r25, r25
     c40:	0a 94       	dec	r0
     c42:	e2 f7       	brpl	.-8      	; 0xc3c <DIO_enumSetPinDirection+0x106>
     c44:	84 2b       	or	r24, r20
     c46:	8c 93       	st	X, r24
     c48:	7b c0       	rjmp	.+246    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			}


		}
		else if (Copy_u8Direction == DIO_PIN_INPUT)
     c4a:	8c 81       	ldd	r24, Y+4	; 0x04
     c4c:	88 23       	and	r24, r24
     c4e:	09 f0       	breq	.+2      	; 0xc52 <DIO_enumSetPinDirection+0x11c>
     c50:	74 c0       	rjmp	.+232    	; 0xd3a <DIO_enumSetPinDirection+0x204>
		{
			switch(Copy_u8PORT)
     c52:	8a 81       	ldd	r24, Y+2	; 0x02
     c54:	28 2f       	mov	r18, r24
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	3e 83       	std	Y+6, r19	; 0x06
     c5a:	2d 83       	std	Y+5, r18	; 0x05
     c5c:	8d 81       	ldd	r24, Y+5	; 0x05
     c5e:	9e 81       	ldd	r25, Y+6	; 0x06
     c60:	81 30       	cpi	r24, 0x01	; 1
     c62:	91 05       	cpc	r25, r1
     c64:	59 f1       	breq	.+86     	; 0xcbc <DIO_enumSetPinDirection+0x186>
     c66:	2d 81       	ldd	r18, Y+5	; 0x05
     c68:	3e 81       	ldd	r19, Y+6	; 0x06
     c6a:	22 30       	cpi	r18, 0x02	; 2
     c6c:	31 05       	cpc	r19, r1
     c6e:	2c f4       	brge	.+10     	; 0xc7a <DIO_enumSetPinDirection+0x144>
     c70:	8d 81       	ldd	r24, Y+5	; 0x05
     c72:	9e 81       	ldd	r25, Y+6	; 0x06
     c74:	00 97       	sbiw	r24, 0x00	; 0
     c76:	69 f0       	breq	.+26     	; 0xc92 <DIO_enumSetPinDirection+0x15c>
     c78:	63 c0       	rjmp	.+198    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
     c7a:	2d 81       	ldd	r18, Y+5	; 0x05
     c7c:	3e 81       	ldd	r19, Y+6	; 0x06
     c7e:	22 30       	cpi	r18, 0x02	; 2
     c80:	31 05       	cpc	r19, r1
     c82:	89 f1       	breq	.+98     	; 0xce6 <DIO_enumSetPinDirection+0x1b0>
     c84:	8d 81       	ldd	r24, Y+5	; 0x05
     c86:	9e 81       	ldd	r25, Y+6	; 0x06
     c88:	83 30       	cpi	r24, 0x03	; 3
     c8a:	91 05       	cpc	r25, r1
     c8c:	09 f4       	brne	.+2      	; 0xc90 <DIO_enumSetPinDirection+0x15a>
     c8e:	40 c0       	rjmp	.+128    	; 0xd10 <DIO_enumSetPinDirection+0x1da>
     c90:	57 c0       	rjmp	.+174    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			{
				case DIO_PORTA: CLR_BIT(DDRA, Copy_u8PIN); break;
     c92:	aa e3       	ldi	r26, 0x3A	; 58
     c94:	b0 e0       	ldi	r27, 0x00	; 0
     c96:	ea e3       	ldi	r30, 0x3A	; 58
     c98:	f0 e0       	ldi	r31, 0x00	; 0
     c9a:	80 81       	ld	r24, Z
     c9c:	48 2f       	mov	r20, r24
     c9e:	8b 81       	ldd	r24, Y+3	; 0x03
     ca0:	28 2f       	mov	r18, r24
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	81 e0       	ldi	r24, 0x01	; 1
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	02 2e       	mov	r0, r18
     caa:	02 c0       	rjmp	.+4      	; 0xcb0 <DIO_enumSetPinDirection+0x17a>
     cac:	88 0f       	add	r24, r24
     cae:	99 1f       	adc	r25, r25
     cb0:	0a 94       	dec	r0
     cb2:	e2 f7       	brpl	.-8      	; 0xcac <DIO_enumSetPinDirection+0x176>
     cb4:	80 95       	com	r24
     cb6:	84 23       	and	r24, r20
     cb8:	8c 93       	st	X, r24
     cba:	42 c0       	rjmp	.+132    	; 0xd40 <DIO_enumSetPinDirection+0x20a>
				case DIO_PORTB: CLR_BIT(DDRB, Copy_u8PIN); break;
     cbc:	a7 e3       	ldi	r26, 0x37	; 55
     cbe:	b0 e0       	ldi	r27, 0x00	; 0
     cc0:	e7 e3       	ldi	r30, 0x37	; 55
     cc2:	f0 e0       	ldi	r31, 0x00	; 0
     cc4:	80 81       	ld	r24, Z
     cc6:	48 2f       	mov	r20, r24
     cc8:	8b 81       	ldd	r24, Y+3	; 0x03
     cca:	28 2f       	mov	r18, r24
     ccc:	30 e0       	ldi	r19, 0x00	; 0
     cce:	81 e0       	ldi	r24, 0x01	; 1
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	02 2e       	mov	r0, r18
     cd4:	02 c0       	rjmp	.+4      	; 0xcda <DIO_enumSetPinDirection+0x1a4>
     cd6:	88 0f       	add	r24, r24
     cd8:	99 1f       	adc	r25, r25
     cda:	0a 94       	dec	r0
     cdc:	e2 f7       	brpl	.-8      	; 0xcd6 <DIO_enumSetPinDirection+0x1a0>
     cde:	80 95       	com	r24
     ce0:	84 23       	and	r24, r20
     ce2:	8c 93       	st	X, r24
     ce4:	2d c0       	rjmp	.+90     	; 0xd40 <DIO_enumSetPinDirection+0x20a>
				case DIO_PORTC: CLR_BIT(DDRC, Copy_u8PIN); break;
     ce6:	a4 e3       	ldi	r26, 0x34	; 52
     ce8:	b0 e0       	ldi	r27, 0x00	; 0
     cea:	e4 e3       	ldi	r30, 0x34	; 52
     cec:	f0 e0       	ldi	r31, 0x00	; 0
     cee:	80 81       	ld	r24, Z
     cf0:	48 2f       	mov	r20, r24
     cf2:	8b 81       	ldd	r24, Y+3	; 0x03
     cf4:	28 2f       	mov	r18, r24
     cf6:	30 e0       	ldi	r19, 0x00	; 0
     cf8:	81 e0       	ldi	r24, 0x01	; 1
     cfa:	90 e0       	ldi	r25, 0x00	; 0
     cfc:	02 2e       	mov	r0, r18
     cfe:	02 c0       	rjmp	.+4      	; 0xd04 <DIO_enumSetPinDirection+0x1ce>
     d00:	88 0f       	add	r24, r24
     d02:	99 1f       	adc	r25, r25
     d04:	0a 94       	dec	r0
     d06:	e2 f7       	brpl	.-8      	; 0xd00 <DIO_enumSetPinDirection+0x1ca>
     d08:	80 95       	com	r24
     d0a:	84 23       	and	r24, r20
     d0c:	8c 93       	st	X, r24
     d0e:	18 c0       	rjmp	.+48     	; 0xd40 <DIO_enumSetPinDirection+0x20a>
				case DIO_PORTD: CLR_BIT(DDRD, Copy_u8PIN); break;
     d10:	a1 e3       	ldi	r26, 0x31	; 49
     d12:	b0 e0       	ldi	r27, 0x00	; 0
     d14:	e1 e3       	ldi	r30, 0x31	; 49
     d16:	f0 e0       	ldi	r31, 0x00	; 0
     d18:	80 81       	ld	r24, Z
     d1a:	48 2f       	mov	r20, r24
     d1c:	8b 81       	ldd	r24, Y+3	; 0x03
     d1e:	28 2f       	mov	r18, r24
     d20:	30 e0       	ldi	r19, 0x00	; 0
     d22:	81 e0       	ldi	r24, 0x01	; 1
     d24:	90 e0       	ldi	r25, 0x00	; 0
     d26:	02 2e       	mov	r0, r18
     d28:	02 c0       	rjmp	.+4      	; 0xd2e <DIO_enumSetPinDirection+0x1f8>
     d2a:	88 0f       	add	r24, r24
     d2c:	99 1f       	adc	r25, r25
     d2e:	0a 94       	dec	r0
     d30:	e2 f7       	brpl	.-8      	; 0xd2a <DIO_enumSetPinDirection+0x1f4>
     d32:	80 95       	com	r24
     d34:	84 23       	and	r24, r20
     d36:	8c 93       	st	X, r24
     d38:	03 c0       	rjmp	.+6      	; 0xd40 <DIO_enumSetPinDirection+0x20a>
			}
		}
		else
		{
			LOC_enumState = DIO_NOK;
     d3a:	19 82       	std	Y+1, r1	; 0x01
     d3c:	01 c0       	rjmp	.+2      	; 0xd40 <DIO_enumSetPinDirection+0x20a>
		}
	}
	else
	{
		LOC_enumState = DIO_NOK;
     d3e:	19 82       	std	Y+1, r1	; 0x01
	}


	return LOC_enumState;
     d40:	89 81       	ldd	r24, Y+1	; 0x01
}
     d42:	28 96       	adiw	r28, 0x08	; 8
     d44:	0f b6       	in	r0, 0x3f	; 63
     d46:	f8 94       	cli
     d48:	de bf       	out	0x3e, r29	; 62
     d4a:	0f be       	out	0x3f, r0	; 63
     d4c:	cd bf       	out	0x3d, r28	; 61
     d4e:	cf 91       	pop	r28
     d50:	df 91       	pop	r29
     d52:	08 95       	ret

00000d54 <DIO_enumSetPinValue>:


/*------------------------------------------------------------------------------------------------------------*/
DIO_ErrorStatus DIO_enumSetPinValue (u8 Copy_u8PORT, u8 Copy_u8PIN, u8 Copy_u8Value ){
     d54:	df 93       	push	r29
     d56:	cf 93       	push	r28
     d58:	cd b7       	in	r28, 0x3d	; 61
     d5a:	de b7       	in	r29, 0x3e	; 62
     d5c:	28 97       	sbiw	r28, 0x08	; 8
     d5e:	0f b6       	in	r0, 0x3f	; 63
     d60:	f8 94       	cli
     d62:	de bf       	out	0x3e, r29	; 62
     d64:	0f be       	out	0x3f, r0	; 63
     d66:	cd bf       	out	0x3d, r28	; 61
     d68:	8a 83       	std	Y+2, r24	; 0x02
     d6a:	6b 83       	std	Y+3, r22	; 0x03
     d6c:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumState = DIO_OK;
     d6e:	81 e0       	ldi	r24, 0x01	; 1
     d70:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PORT <= DIO_PORTD && Copy_u8PIN <= DIO_PIN7)
     d72:	8a 81       	ldd	r24, Y+2	; 0x02
     d74:	84 30       	cpi	r24, 0x04	; 4
     d76:	08 f0       	brcs	.+2      	; 0xd7a <DIO_enumSetPinValue+0x26>
     d78:	f1 c0       	rjmp	.+482    	; 0xf5c <DIO_enumSetPinValue+0x208>
     d7a:	8b 81       	ldd	r24, Y+3	; 0x03
     d7c:	88 30       	cpi	r24, 0x08	; 8
     d7e:	08 f0       	brcs	.+2      	; 0xd82 <DIO_enumSetPinValue+0x2e>
     d80:	ed c0       	rjmp	.+474    	; 0xf5c <DIO_enumSetPinValue+0x208>
	{
		if(Copy_u8Value == DIO_PIN_HIGH)
     d82:	8c 81       	ldd	r24, Y+4	; 0x04
     d84:	81 30       	cpi	r24, 0x01	; 1
     d86:	09 f0       	breq	.+2      	; 0xd8a <DIO_enumSetPinValue+0x36>
     d88:	6f c0       	rjmp	.+222    	; 0xe68 <DIO_enumSetPinValue+0x114>
		{
			switch(Copy_u8PORT)
     d8a:	8a 81       	ldd	r24, Y+2	; 0x02
     d8c:	28 2f       	mov	r18, r24
     d8e:	30 e0       	ldi	r19, 0x00	; 0
     d90:	38 87       	std	Y+8, r19	; 0x08
     d92:	2f 83       	std	Y+7, r18	; 0x07
     d94:	8f 81       	ldd	r24, Y+7	; 0x07
     d96:	98 85       	ldd	r25, Y+8	; 0x08
     d98:	81 30       	cpi	r24, 0x01	; 1
     d9a:	91 05       	cpc	r25, r1
     d9c:	49 f1       	breq	.+82     	; 0xdf0 <DIO_enumSetPinValue+0x9c>
     d9e:	2f 81       	ldd	r18, Y+7	; 0x07
     da0:	38 85       	ldd	r19, Y+8	; 0x08
     da2:	22 30       	cpi	r18, 0x02	; 2
     da4:	31 05       	cpc	r19, r1
     da6:	2c f4       	brge	.+10     	; 0xdb2 <DIO_enumSetPinValue+0x5e>
     da8:	8f 81       	ldd	r24, Y+7	; 0x07
     daa:	98 85       	ldd	r25, Y+8	; 0x08
     dac:	00 97       	sbiw	r24, 0x00	; 0
     dae:	61 f0       	breq	.+24     	; 0xdc8 <DIO_enumSetPinValue+0x74>
     db0:	d6 c0       	rjmp	.+428    	; 0xf5e <DIO_enumSetPinValue+0x20a>
     db2:	2f 81       	ldd	r18, Y+7	; 0x07
     db4:	38 85       	ldd	r19, Y+8	; 0x08
     db6:	22 30       	cpi	r18, 0x02	; 2
     db8:	31 05       	cpc	r19, r1
     dba:	71 f1       	breq	.+92     	; 0xe18 <DIO_enumSetPinValue+0xc4>
     dbc:	8f 81       	ldd	r24, Y+7	; 0x07
     dbe:	98 85       	ldd	r25, Y+8	; 0x08
     dc0:	83 30       	cpi	r24, 0x03	; 3
     dc2:	91 05       	cpc	r25, r1
     dc4:	e9 f1       	breq	.+122    	; 0xe40 <DIO_enumSetPinValue+0xec>
     dc6:	cb c0       	rjmp	.+406    	; 0xf5e <DIO_enumSetPinValue+0x20a>
			{
				case DIO_PORTA: SET_BIT(PORTA, Copy_u8PIN); break;
     dc8:	ab e3       	ldi	r26, 0x3B	; 59
     dca:	b0 e0       	ldi	r27, 0x00	; 0
     dcc:	eb e3       	ldi	r30, 0x3B	; 59
     dce:	f0 e0       	ldi	r31, 0x00	; 0
     dd0:	80 81       	ld	r24, Z
     dd2:	48 2f       	mov	r20, r24
     dd4:	8b 81       	ldd	r24, Y+3	; 0x03
     dd6:	28 2f       	mov	r18, r24
     dd8:	30 e0       	ldi	r19, 0x00	; 0
     dda:	81 e0       	ldi	r24, 0x01	; 1
     ddc:	90 e0       	ldi	r25, 0x00	; 0
     dde:	02 2e       	mov	r0, r18
     de0:	02 c0       	rjmp	.+4      	; 0xde6 <DIO_enumSetPinValue+0x92>
     de2:	88 0f       	add	r24, r24
     de4:	99 1f       	adc	r25, r25
     de6:	0a 94       	dec	r0
     de8:	e2 f7       	brpl	.-8      	; 0xde2 <DIO_enumSetPinValue+0x8e>
     dea:	84 2b       	or	r24, r20
     dec:	8c 93       	st	X, r24
     dee:	b7 c0       	rjmp	.+366    	; 0xf5e <DIO_enumSetPinValue+0x20a>
				case DIO_PORTB: SET_BIT(PORTB, Copy_u8PIN); break;
     df0:	a8 e3       	ldi	r26, 0x38	; 56
     df2:	b0 e0       	ldi	r27, 0x00	; 0
     df4:	e8 e3       	ldi	r30, 0x38	; 56
     df6:	f0 e0       	ldi	r31, 0x00	; 0
     df8:	80 81       	ld	r24, Z
     dfa:	48 2f       	mov	r20, r24
     dfc:	8b 81       	ldd	r24, Y+3	; 0x03
     dfe:	28 2f       	mov	r18, r24
     e00:	30 e0       	ldi	r19, 0x00	; 0
     e02:	81 e0       	ldi	r24, 0x01	; 1
     e04:	90 e0       	ldi	r25, 0x00	; 0
     e06:	02 2e       	mov	r0, r18
     e08:	02 c0       	rjmp	.+4      	; 0xe0e <DIO_enumSetPinValue+0xba>
     e0a:	88 0f       	add	r24, r24
     e0c:	99 1f       	adc	r25, r25
     e0e:	0a 94       	dec	r0
     e10:	e2 f7       	brpl	.-8      	; 0xe0a <DIO_enumSetPinValue+0xb6>
     e12:	84 2b       	or	r24, r20
     e14:	8c 93       	st	X, r24
     e16:	a3 c0       	rjmp	.+326    	; 0xf5e <DIO_enumSetPinValue+0x20a>
				case DIO_PORTC: SET_BIT(PORTC, Copy_u8PIN); break;
     e18:	a5 e3       	ldi	r26, 0x35	; 53
     e1a:	b0 e0       	ldi	r27, 0x00	; 0
     e1c:	e5 e3       	ldi	r30, 0x35	; 53
     e1e:	f0 e0       	ldi	r31, 0x00	; 0
     e20:	80 81       	ld	r24, Z
     e22:	48 2f       	mov	r20, r24
     e24:	8b 81       	ldd	r24, Y+3	; 0x03
     e26:	28 2f       	mov	r18, r24
     e28:	30 e0       	ldi	r19, 0x00	; 0
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	02 2e       	mov	r0, r18
     e30:	02 c0       	rjmp	.+4      	; 0xe36 <DIO_enumSetPinValue+0xe2>
     e32:	88 0f       	add	r24, r24
     e34:	99 1f       	adc	r25, r25
     e36:	0a 94       	dec	r0
     e38:	e2 f7       	brpl	.-8      	; 0xe32 <DIO_enumSetPinValue+0xde>
     e3a:	84 2b       	or	r24, r20
     e3c:	8c 93       	st	X, r24
     e3e:	8f c0       	rjmp	.+286    	; 0xf5e <DIO_enumSetPinValue+0x20a>
				case DIO_PORTD: SET_BIT(PORTD, Copy_u8PIN); break;
     e40:	a2 e3       	ldi	r26, 0x32	; 50
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	e2 e3       	ldi	r30, 0x32	; 50
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	80 81       	ld	r24, Z
     e4a:	48 2f       	mov	r20, r24
     e4c:	8b 81       	ldd	r24, Y+3	; 0x03
     e4e:	28 2f       	mov	r18, r24
     e50:	30 e0       	ldi	r19, 0x00	; 0
     e52:	81 e0       	ldi	r24, 0x01	; 1
     e54:	90 e0       	ldi	r25, 0x00	; 0
     e56:	02 2e       	mov	r0, r18
     e58:	02 c0       	rjmp	.+4      	; 0xe5e <DIO_enumSetPinValue+0x10a>
     e5a:	88 0f       	add	r24, r24
     e5c:	99 1f       	adc	r25, r25
     e5e:	0a 94       	dec	r0
     e60:	e2 f7       	brpl	.-8      	; 0xe5a <DIO_enumSetPinValue+0x106>
     e62:	84 2b       	or	r24, r20
     e64:	8c 93       	st	X, r24
     e66:	7b c0       	rjmp	.+246    	; 0xf5e <DIO_enumSetPinValue+0x20a>
			}


		}
		else if (Copy_u8Value == DIO_PIN_LOW)
     e68:	8c 81       	ldd	r24, Y+4	; 0x04
     e6a:	88 23       	and	r24, r24
     e6c:	09 f0       	breq	.+2      	; 0xe70 <DIO_enumSetPinValue+0x11c>
     e6e:	74 c0       	rjmp	.+232    	; 0xf58 <DIO_enumSetPinValue+0x204>
		{
			switch(Copy_u8PORT)
     e70:	8a 81       	ldd	r24, Y+2	; 0x02
     e72:	28 2f       	mov	r18, r24
     e74:	30 e0       	ldi	r19, 0x00	; 0
     e76:	3e 83       	std	Y+6, r19	; 0x06
     e78:	2d 83       	std	Y+5, r18	; 0x05
     e7a:	8d 81       	ldd	r24, Y+5	; 0x05
     e7c:	9e 81       	ldd	r25, Y+6	; 0x06
     e7e:	81 30       	cpi	r24, 0x01	; 1
     e80:	91 05       	cpc	r25, r1
     e82:	59 f1       	breq	.+86     	; 0xeda <DIO_enumSetPinValue+0x186>
     e84:	2d 81       	ldd	r18, Y+5	; 0x05
     e86:	3e 81       	ldd	r19, Y+6	; 0x06
     e88:	22 30       	cpi	r18, 0x02	; 2
     e8a:	31 05       	cpc	r19, r1
     e8c:	2c f4       	brge	.+10     	; 0xe98 <DIO_enumSetPinValue+0x144>
     e8e:	8d 81       	ldd	r24, Y+5	; 0x05
     e90:	9e 81       	ldd	r25, Y+6	; 0x06
     e92:	00 97       	sbiw	r24, 0x00	; 0
     e94:	69 f0       	breq	.+26     	; 0xeb0 <DIO_enumSetPinValue+0x15c>
     e96:	63 c0       	rjmp	.+198    	; 0xf5e <DIO_enumSetPinValue+0x20a>
     e98:	2d 81       	ldd	r18, Y+5	; 0x05
     e9a:	3e 81       	ldd	r19, Y+6	; 0x06
     e9c:	22 30       	cpi	r18, 0x02	; 2
     e9e:	31 05       	cpc	r19, r1
     ea0:	89 f1       	breq	.+98     	; 0xf04 <DIO_enumSetPinValue+0x1b0>
     ea2:	8d 81       	ldd	r24, Y+5	; 0x05
     ea4:	9e 81       	ldd	r25, Y+6	; 0x06
     ea6:	83 30       	cpi	r24, 0x03	; 3
     ea8:	91 05       	cpc	r25, r1
     eaa:	09 f4       	brne	.+2      	; 0xeae <DIO_enumSetPinValue+0x15a>
     eac:	40 c0       	rjmp	.+128    	; 0xf2e <DIO_enumSetPinValue+0x1da>
     eae:	57 c0       	rjmp	.+174    	; 0xf5e <DIO_enumSetPinValue+0x20a>
			{
				case DIO_PORTA: CLR_BIT(PORTA, Copy_u8PIN); break;
     eb0:	ab e3       	ldi	r26, 0x3B	; 59
     eb2:	b0 e0       	ldi	r27, 0x00	; 0
     eb4:	eb e3       	ldi	r30, 0x3B	; 59
     eb6:	f0 e0       	ldi	r31, 0x00	; 0
     eb8:	80 81       	ld	r24, Z
     eba:	48 2f       	mov	r20, r24
     ebc:	8b 81       	ldd	r24, Y+3	; 0x03
     ebe:	28 2f       	mov	r18, r24
     ec0:	30 e0       	ldi	r19, 0x00	; 0
     ec2:	81 e0       	ldi	r24, 0x01	; 1
     ec4:	90 e0       	ldi	r25, 0x00	; 0
     ec6:	02 2e       	mov	r0, r18
     ec8:	02 c0       	rjmp	.+4      	; 0xece <DIO_enumSetPinValue+0x17a>
     eca:	88 0f       	add	r24, r24
     ecc:	99 1f       	adc	r25, r25
     ece:	0a 94       	dec	r0
     ed0:	e2 f7       	brpl	.-8      	; 0xeca <DIO_enumSetPinValue+0x176>
     ed2:	80 95       	com	r24
     ed4:	84 23       	and	r24, r20
     ed6:	8c 93       	st	X, r24
     ed8:	42 c0       	rjmp	.+132    	; 0xf5e <DIO_enumSetPinValue+0x20a>
				case DIO_PORTB: CLR_BIT(PORTB, Copy_u8PIN); break;
     eda:	a8 e3       	ldi	r26, 0x38	; 56
     edc:	b0 e0       	ldi	r27, 0x00	; 0
     ede:	e8 e3       	ldi	r30, 0x38	; 56
     ee0:	f0 e0       	ldi	r31, 0x00	; 0
     ee2:	80 81       	ld	r24, Z
     ee4:	48 2f       	mov	r20, r24
     ee6:	8b 81       	ldd	r24, Y+3	; 0x03
     ee8:	28 2f       	mov	r18, r24
     eea:	30 e0       	ldi	r19, 0x00	; 0
     eec:	81 e0       	ldi	r24, 0x01	; 1
     eee:	90 e0       	ldi	r25, 0x00	; 0
     ef0:	02 2e       	mov	r0, r18
     ef2:	02 c0       	rjmp	.+4      	; 0xef8 <DIO_enumSetPinValue+0x1a4>
     ef4:	88 0f       	add	r24, r24
     ef6:	99 1f       	adc	r25, r25
     ef8:	0a 94       	dec	r0
     efa:	e2 f7       	brpl	.-8      	; 0xef4 <DIO_enumSetPinValue+0x1a0>
     efc:	80 95       	com	r24
     efe:	84 23       	and	r24, r20
     f00:	8c 93       	st	X, r24
     f02:	2d c0       	rjmp	.+90     	; 0xf5e <DIO_enumSetPinValue+0x20a>
				case DIO_PORTC: CLR_BIT(PORTC, Copy_u8PIN); break;
     f04:	a5 e3       	ldi	r26, 0x35	; 53
     f06:	b0 e0       	ldi	r27, 0x00	; 0
     f08:	e5 e3       	ldi	r30, 0x35	; 53
     f0a:	f0 e0       	ldi	r31, 0x00	; 0
     f0c:	80 81       	ld	r24, Z
     f0e:	48 2f       	mov	r20, r24
     f10:	8b 81       	ldd	r24, Y+3	; 0x03
     f12:	28 2f       	mov	r18, r24
     f14:	30 e0       	ldi	r19, 0x00	; 0
     f16:	81 e0       	ldi	r24, 0x01	; 1
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	02 2e       	mov	r0, r18
     f1c:	02 c0       	rjmp	.+4      	; 0xf22 <DIO_enumSetPinValue+0x1ce>
     f1e:	88 0f       	add	r24, r24
     f20:	99 1f       	adc	r25, r25
     f22:	0a 94       	dec	r0
     f24:	e2 f7       	brpl	.-8      	; 0xf1e <DIO_enumSetPinValue+0x1ca>
     f26:	80 95       	com	r24
     f28:	84 23       	and	r24, r20
     f2a:	8c 93       	st	X, r24
     f2c:	18 c0       	rjmp	.+48     	; 0xf5e <DIO_enumSetPinValue+0x20a>
				case DIO_PORTD: CLR_BIT(PORTD, Copy_u8PIN); break;
     f2e:	a2 e3       	ldi	r26, 0x32	; 50
     f30:	b0 e0       	ldi	r27, 0x00	; 0
     f32:	e2 e3       	ldi	r30, 0x32	; 50
     f34:	f0 e0       	ldi	r31, 0x00	; 0
     f36:	80 81       	ld	r24, Z
     f38:	48 2f       	mov	r20, r24
     f3a:	8b 81       	ldd	r24, Y+3	; 0x03
     f3c:	28 2f       	mov	r18, r24
     f3e:	30 e0       	ldi	r19, 0x00	; 0
     f40:	81 e0       	ldi	r24, 0x01	; 1
     f42:	90 e0       	ldi	r25, 0x00	; 0
     f44:	02 2e       	mov	r0, r18
     f46:	02 c0       	rjmp	.+4      	; 0xf4c <DIO_enumSetPinValue+0x1f8>
     f48:	88 0f       	add	r24, r24
     f4a:	99 1f       	adc	r25, r25
     f4c:	0a 94       	dec	r0
     f4e:	e2 f7       	brpl	.-8      	; 0xf48 <DIO_enumSetPinValue+0x1f4>
     f50:	80 95       	com	r24
     f52:	84 23       	and	r24, r20
     f54:	8c 93       	st	X, r24
     f56:	03 c0       	rjmp	.+6      	; 0xf5e <DIO_enumSetPinValue+0x20a>
			}
		}
		else
		{
			LOC_enumState = DIO_NOK;
     f58:	19 82       	std	Y+1, r1	; 0x01
     f5a:	01 c0       	rjmp	.+2      	; 0xf5e <DIO_enumSetPinValue+0x20a>
		}
	}
	else
	{
		LOC_enumState = DIO_NOK;
     f5c:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState;
     f5e:	89 81       	ldd	r24, Y+1	; 0x01
}
     f60:	28 96       	adiw	r28, 0x08	; 8
     f62:	0f b6       	in	r0, 0x3f	; 63
     f64:	f8 94       	cli
     f66:	de bf       	out	0x3e, r29	; 62
     f68:	0f be       	out	0x3f, r0	; 63
     f6a:	cd bf       	out	0x3d, r28	; 61
     f6c:	cf 91       	pop	r28
     f6e:	df 91       	pop	r29
     f70:	08 95       	ret

00000f72 <DIO_enumGetPinValue>:

/*--------------------------------------------------------------------------------------------------------------*/
DIO_ErrorStatus DIO_enumGetPinValue (u8 Copy_u8PORT, u8 Copy_u8PIN, u8 *Copy_PtrData ){
     f72:	df 93       	push	r29
     f74:	cf 93       	push	r28
     f76:	cd b7       	in	r28, 0x3d	; 61
     f78:	de b7       	in	r29, 0x3e	; 62
     f7a:	27 97       	sbiw	r28, 0x07	; 7
     f7c:	0f b6       	in	r0, 0x3f	; 63
     f7e:	f8 94       	cli
     f80:	de bf       	out	0x3e, r29	; 62
     f82:	0f be       	out	0x3f, r0	; 63
     f84:	cd bf       	out	0x3d, r28	; 61
     f86:	8a 83       	std	Y+2, r24	; 0x02
     f88:	6b 83       	std	Y+3, r22	; 0x03
     f8a:	5d 83       	std	Y+5, r21	; 0x05
     f8c:	4c 83       	std	Y+4, r20	; 0x04
	DIO_ErrorStatus LOC_enumState = DIO_OK;
     f8e:	81 e0       	ldi	r24, 0x01	; 1
     f90:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PORT <= DIO_PORTD && Copy_u8PIN <= DIO_PIN7)
     f92:	8a 81       	ldd	r24, Y+2	; 0x02
     f94:	84 30       	cpi	r24, 0x04	; 4
     f96:	08 f0       	brcs	.+2      	; 0xf9a <DIO_enumGetPinValue+0x28>
     f98:	75 c0       	rjmp	.+234    	; 0x1084 <DIO_enumGetPinValue+0x112>
     f9a:	8b 81       	ldd	r24, Y+3	; 0x03
     f9c:	88 30       	cpi	r24, 0x08	; 8
     f9e:	08 f0       	brcs	.+2      	; 0xfa2 <DIO_enumGetPinValue+0x30>
     fa0:	71 c0       	rjmp	.+226    	; 0x1084 <DIO_enumGetPinValue+0x112>
	{

		switch(Copy_u8PORT)
     fa2:	8a 81       	ldd	r24, Y+2	; 0x02
     fa4:	28 2f       	mov	r18, r24
     fa6:	30 e0       	ldi	r19, 0x00	; 0
     fa8:	3f 83       	std	Y+7, r19	; 0x07
     faa:	2e 83       	std	Y+6, r18	; 0x06
     fac:	4e 81       	ldd	r20, Y+6	; 0x06
     fae:	5f 81       	ldd	r21, Y+7	; 0x07
     fb0:	41 30       	cpi	r20, 0x01	; 1
     fb2:	51 05       	cpc	r21, r1
     fb4:	59 f1       	breq	.+86     	; 0x100c <DIO_enumGetPinValue+0x9a>
     fb6:	8e 81       	ldd	r24, Y+6	; 0x06
     fb8:	9f 81       	ldd	r25, Y+7	; 0x07
     fba:	82 30       	cpi	r24, 0x02	; 2
     fbc:	91 05       	cpc	r25, r1
     fbe:	34 f4       	brge	.+12     	; 0xfcc <DIO_enumGetPinValue+0x5a>
     fc0:	2e 81       	ldd	r18, Y+6	; 0x06
     fc2:	3f 81       	ldd	r19, Y+7	; 0x07
     fc4:	21 15       	cp	r18, r1
     fc6:	31 05       	cpc	r19, r1
     fc8:	69 f0       	breq	.+26     	; 0xfe4 <DIO_enumGetPinValue+0x72>
     fca:	5d c0       	rjmp	.+186    	; 0x1086 <DIO_enumGetPinValue+0x114>
     fcc:	4e 81       	ldd	r20, Y+6	; 0x06
     fce:	5f 81       	ldd	r21, Y+7	; 0x07
     fd0:	42 30       	cpi	r20, 0x02	; 2
     fd2:	51 05       	cpc	r21, r1
     fd4:	79 f1       	breq	.+94     	; 0x1034 <DIO_enumGetPinValue+0xc2>
     fd6:	8e 81       	ldd	r24, Y+6	; 0x06
     fd8:	9f 81       	ldd	r25, Y+7	; 0x07
     fda:	83 30       	cpi	r24, 0x03	; 3
     fdc:	91 05       	cpc	r25, r1
     fde:	09 f4       	brne	.+2      	; 0xfe2 <DIO_enumGetPinValue+0x70>
     fe0:	3d c0       	rjmp	.+122    	; 0x105c <DIO_enumGetPinValue+0xea>
     fe2:	51 c0       	rjmp	.+162    	; 0x1086 <DIO_enumGetPinValue+0x114>
			{
				case DIO_PORTA: *Copy_PtrData = GET_BIT(PINA, Copy_u8PIN); break;
     fe4:	e9 e3       	ldi	r30, 0x39	; 57
     fe6:	f0 e0       	ldi	r31, 0x00	; 0
     fe8:	80 81       	ld	r24, Z
     fea:	28 2f       	mov	r18, r24
     fec:	30 e0       	ldi	r19, 0x00	; 0
     fee:	8b 81       	ldd	r24, Y+3	; 0x03
     ff0:	88 2f       	mov	r24, r24
     ff2:	90 e0       	ldi	r25, 0x00	; 0
     ff4:	a9 01       	movw	r20, r18
     ff6:	02 c0       	rjmp	.+4      	; 0xffc <DIO_enumGetPinValue+0x8a>
     ff8:	55 95       	asr	r21
     ffa:	47 95       	ror	r20
     ffc:	8a 95       	dec	r24
     ffe:	e2 f7       	brpl	.-8      	; 0xff8 <DIO_enumGetPinValue+0x86>
    1000:	ca 01       	movw	r24, r20
    1002:	81 70       	andi	r24, 0x01	; 1
    1004:	ec 81       	ldd	r30, Y+4	; 0x04
    1006:	fd 81       	ldd	r31, Y+5	; 0x05
    1008:	80 83       	st	Z, r24
    100a:	3d c0       	rjmp	.+122    	; 0x1086 <DIO_enumGetPinValue+0x114>
				case DIO_PORTB: *Copy_PtrData = GET_BIT(PINB, Copy_u8PIN); break;
    100c:	e6 e3       	ldi	r30, 0x36	; 54
    100e:	f0 e0       	ldi	r31, 0x00	; 0
    1010:	80 81       	ld	r24, Z
    1012:	28 2f       	mov	r18, r24
    1014:	30 e0       	ldi	r19, 0x00	; 0
    1016:	8b 81       	ldd	r24, Y+3	; 0x03
    1018:	88 2f       	mov	r24, r24
    101a:	90 e0       	ldi	r25, 0x00	; 0
    101c:	a9 01       	movw	r20, r18
    101e:	02 c0       	rjmp	.+4      	; 0x1024 <DIO_enumGetPinValue+0xb2>
    1020:	55 95       	asr	r21
    1022:	47 95       	ror	r20
    1024:	8a 95       	dec	r24
    1026:	e2 f7       	brpl	.-8      	; 0x1020 <DIO_enumGetPinValue+0xae>
    1028:	ca 01       	movw	r24, r20
    102a:	81 70       	andi	r24, 0x01	; 1
    102c:	ec 81       	ldd	r30, Y+4	; 0x04
    102e:	fd 81       	ldd	r31, Y+5	; 0x05
    1030:	80 83       	st	Z, r24
    1032:	29 c0       	rjmp	.+82     	; 0x1086 <DIO_enumGetPinValue+0x114>
				case DIO_PORTC: *Copy_PtrData = GET_BIT(PINC, Copy_u8PIN); break;
    1034:	e3 e3       	ldi	r30, 0x33	; 51
    1036:	f0 e0       	ldi	r31, 0x00	; 0
    1038:	80 81       	ld	r24, Z
    103a:	28 2f       	mov	r18, r24
    103c:	30 e0       	ldi	r19, 0x00	; 0
    103e:	8b 81       	ldd	r24, Y+3	; 0x03
    1040:	88 2f       	mov	r24, r24
    1042:	90 e0       	ldi	r25, 0x00	; 0
    1044:	a9 01       	movw	r20, r18
    1046:	02 c0       	rjmp	.+4      	; 0x104c <DIO_enumGetPinValue+0xda>
    1048:	55 95       	asr	r21
    104a:	47 95       	ror	r20
    104c:	8a 95       	dec	r24
    104e:	e2 f7       	brpl	.-8      	; 0x1048 <DIO_enumGetPinValue+0xd6>
    1050:	ca 01       	movw	r24, r20
    1052:	81 70       	andi	r24, 0x01	; 1
    1054:	ec 81       	ldd	r30, Y+4	; 0x04
    1056:	fd 81       	ldd	r31, Y+5	; 0x05
    1058:	80 83       	st	Z, r24
    105a:	15 c0       	rjmp	.+42     	; 0x1086 <DIO_enumGetPinValue+0x114>
				case DIO_PORTD: *Copy_PtrData = GET_BIT(PIND, Copy_u8PIN); break;
    105c:	e0 e3       	ldi	r30, 0x30	; 48
    105e:	f0 e0       	ldi	r31, 0x00	; 0
    1060:	80 81       	ld	r24, Z
    1062:	28 2f       	mov	r18, r24
    1064:	30 e0       	ldi	r19, 0x00	; 0
    1066:	8b 81       	ldd	r24, Y+3	; 0x03
    1068:	88 2f       	mov	r24, r24
    106a:	90 e0       	ldi	r25, 0x00	; 0
    106c:	a9 01       	movw	r20, r18
    106e:	02 c0       	rjmp	.+4      	; 0x1074 <DIO_enumGetPinValue+0x102>
    1070:	55 95       	asr	r21
    1072:	47 95       	ror	r20
    1074:	8a 95       	dec	r24
    1076:	e2 f7       	brpl	.-8      	; 0x1070 <DIO_enumGetPinValue+0xfe>
    1078:	ca 01       	movw	r24, r20
    107a:	81 70       	andi	r24, 0x01	; 1
    107c:	ec 81       	ldd	r30, Y+4	; 0x04
    107e:	fd 81       	ldd	r31, Y+5	; 0x05
    1080:	80 83       	st	Z, r24
    1082:	01 c0       	rjmp	.+2      	; 0x1086 <DIO_enumGetPinValue+0x114>
			}

	}
	else
	{
		LOC_enumState = DIO_NOK;
    1084:	19 82       	std	Y+1, r1	; 0x01
	}

	return LOC_enumState;
    1086:	89 81       	ldd	r24, Y+1	; 0x01
}
    1088:	27 96       	adiw	r28, 0x07	; 7
    108a:	0f b6       	in	r0, 0x3f	; 63
    108c:	f8 94       	cli
    108e:	de bf       	out	0x3e, r29	; 62
    1090:	0f be       	out	0x3f, r0	; 63
    1092:	cd bf       	out	0x3d, r28	; 61
    1094:	cf 91       	pop	r28
    1096:	df 91       	pop	r29
    1098:	08 95       	ret

0000109a <DIO_enumTogglePinValue>:

/*-----------------------------------------------------------------------------------------------------------------*/
DIO_ErrorStatus DIO_enumTogglePinValue  (u8 Copy_u8PORT, u8 Copy_u8PIN                      )
{
    109a:	df 93       	push	r29
    109c:	cf 93       	push	r28
    109e:	00 d0       	rcall	.+0      	; 0x10a0 <DIO_enumTogglePinValue+0x6>
    10a0:	00 d0       	rcall	.+0      	; 0x10a2 <DIO_enumTogglePinValue+0x8>
    10a2:	0f 92       	push	r0
    10a4:	cd b7       	in	r28, 0x3d	; 61
    10a6:	de b7       	in	r29, 0x3e	; 62
    10a8:	8a 83       	std	Y+2, r24	; 0x02
    10aa:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumState = DIO_OK;
    10ac:	81 e0       	ldi	r24, 0x01	; 1
    10ae:	89 83       	std	Y+1, r24	; 0x01

	if(Copy_u8PORT <= DIO_PORTD)
    10b0:	8a 81       	ldd	r24, Y+2	; 0x02
    10b2:	84 30       	cpi	r24, 0x04	; 4
    10b4:	08 f0       	brcs	.+2      	; 0x10b8 <DIO_enumTogglePinValue+0x1e>
    10b6:	6f c0       	rjmp	.+222    	; 0x1196 <DIO_enumTogglePinValue+0xfc>
	{
		switch(Copy_u8PORT)
    10b8:	8a 81       	ldd	r24, Y+2	; 0x02
    10ba:	28 2f       	mov	r18, r24
    10bc:	30 e0       	ldi	r19, 0x00	; 0
    10be:	3d 83       	std	Y+5, r19	; 0x05
    10c0:	2c 83       	std	Y+4, r18	; 0x04
    10c2:	8c 81       	ldd	r24, Y+4	; 0x04
    10c4:	9d 81       	ldd	r25, Y+5	; 0x05
    10c6:	81 30       	cpi	r24, 0x01	; 1
    10c8:	91 05       	cpc	r25, r1
    10ca:	49 f1       	breq	.+82     	; 0x111e <DIO_enumTogglePinValue+0x84>
    10cc:	2c 81       	ldd	r18, Y+4	; 0x04
    10ce:	3d 81       	ldd	r19, Y+5	; 0x05
    10d0:	22 30       	cpi	r18, 0x02	; 2
    10d2:	31 05       	cpc	r19, r1
    10d4:	2c f4       	brge	.+10     	; 0x10e0 <DIO_enumTogglePinValue+0x46>
    10d6:	8c 81       	ldd	r24, Y+4	; 0x04
    10d8:	9d 81       	ldd	r25, Y+5	; 0x05
    10da:	00 97       	sbiw	r24, 0x00	; 0
    10dc:	61 f0       	breq	.+24     	; 0x10f6 <DIO_enumTogglePinValue+0x5c>
    10de:	5c c0       	rjmp	.+184    	; 0x1198 <DIO_enumTogglePinValue+0xfe>
    10e0:	2c 81       	ldd	r18, Y+4	; 0x04
    10e2:	3d 81       	ldd	r19, Y+5	; 0x05
    10e4:	22 30       	cpi	r18, 0x02	; 2
    10e6:	31 05       	cpc	r19, r1
    10e8:	71 f1       	breq	.+92     	; 0x1146 <DIO_enumTogglePinValue+0xac>
    10ea:	8c 81       	ldd	r24, Y+4	; 0x04
    10ec:	9d 81       	ldd	r25, Y+5	; 0x05
    10ee:	83 30       	cpi	r24, 0x03	; 3
    10f0:	91 05       	cpc	r25, r1
    10f2:	e9 f1       	breq	.+122    	; 0x116e <DIO_enumTogglePinValue+0xd4>
    10f4:	51 c0       	rjmp	.+162    	; 0x1198 <DIO_enumTogglePinValue+0xfe>
			{
				case DIO_PORTA: TOG_BIT(PORTA, Copy_u8PIN); break;
    10f6:	ab e3       	ldi	r26, 0x3B	; 59
    10f8:	b0 e0       	ldi	r27, 0x00	; 0
    10fa:	eb e3       	ldi	r30, 0x3B	; 59
    10fc:	f0 e0       	ldi	r31, 0x00	; 0
    10fe:	80 81       	ld	r24, Z
    1100:	48 2f       	mov	r20, r24
    1102:	8b 81       	ldd	r24, Y+3	; 0x03
    1104:	28 2f       	mov	r18, r24
    1106:	30 e0       	ldi	r19, 0x00	; 0
    1108:	81 e0       	ldi	r24, 0x01	; 1
    110a:	90 e0       	ldi	r25, 0x00	; 0
    110c:	02 2e       	mov	r0, r18
    110e:	02 c0       	rjmp	.+4      	; 0x1114 <DIO_enumTogglePinValue+0x7a>
    1110:	88 0f       	add	r24, r24
    1112:	99 1f       	adc	r25, r25
    1114:	0a 94       	dec	r0
    1116:	e2 f7       	brpl	.-8      	; 0x1110 <DIO_enumTogglePinValue+0x76>
    1118:	84 27       	eor	r24, r20
    111a:	8c 93       	st	X, r24
    111c:	3d c0       	rjmp	.+122    	; 0x1198 <DIO_enumTogglePinValue+0xfe>
				case DIO_PORTB: TOG_BIT(PORTB, Copy_u8PIN); break;
    111e:	a8 e3       	ldi	r26, 0x38	; 56
    1120:	b0 e0       	ldi	r27, 0x00	; 0
    1122:	e8 e3       	ldi	r30, 0x38	; 56
    1124:	f0 e0       	ldi	r31, 0x00	; 0
    1126:	80 81       	ld	r24, Z
    1128:	48 2f       	mov	r20, r24
    112a:	8b 81       	ldd	r24, Y+3	; 0x03
    112c:	28 2f       	mov	r18, r24
    112e:	30 e0       	ldi	r19, 0x00	; 0
    1130:	81 e0       	ldi	r24, 0x01	; 1
    1132:	90 e0       	ldi	r25, 0x00	; 0
    1134:	02 2e       	mov	r0, r18
    1136:	02 c0       	rjmp	.+4      	; 0x113c <DIO_enumTogglePinValue+0xa2>
    1138:	88 0f       	add	r24, r24
    113a:	99 1f       	adc	r25, r25
    113c:	0a 94       	dec	r0
    113e:	e2 f7       	brpl	.-8      	; 0x1138 <DIO_enumTogglePinValue+0x9e>
    1140:	84 27       	eor	r24, r20
    1142:	8c 93       	st	X, r24
    1144:	29 c0       	rjmp	.+82     	; 0x1198 <DIO_enumTogglePinValue+0xfe>
				case DIO_PORTC: TOG_BIT(PORTC, Copy_u8PIN); break;
    1146:	a5 e3       	ldi	r26, 0x35	; 53
    1148:	b0 e0       	ldi	r27, 0x00	; 0
    114a:	e5 e3       	ldi	r30, 0x35	; 53
    114c:	f0 e0       	ldi	r31, 0x00	; 0
    114e:	80 81       	ld	r24, Z
    1150:	48 2f       	mov	r20, r24
    1152:	8b 81       	ldd	r24, Y+3	; 0x03
    1154:	28 2f       	mov	r18, r24
    1156:	30 e0       	ldi	r19, 0x00	; 0
    1158:	81 e0       	ldi	r24, 0x01	; 1
    115a:	90 e0       	ldi	r25, 0x00	; 0
    115c:	02 2e       	mov	r0, r18
    115e:	02 c0       	rjmp	.+4      	; 0x1164 <DIO_enumTogglePinValue+0xca>
    1160:	88 0f       	add	r24, r24
    1162:	99 1f       	adc	r25, r25
    1164:	0a 94       	dec	r0
    1166:	e2 f7       	brpl	.-8      	; 0x1160 <DIO_enumTogglePinValue+0xc6>
    1168:	84 27       	eor	r24, r20
    116a:	8c 93       	st	X, r24
    116c:	15 c0       	rjmp	.+42     	; 0x1198 <DIO_enumTogglePinValue+0xfe>
				case DIO_PORTD: TOG_BIT(PORTD, Copy_u8PIN); break;
    116e:	a2 e3       	ldi	r26, 0x32	; 50
    1170:	b0 e0       	ldi	r27, 0x00	; 0
    1172:	e2 e3       	ldi	r30, 0x32	; 50
    1174:	f0 e0       	ldi	r31, 0x00	; 0
    1176:	80 81       	ld	r24, Z
    1178:	48 2f       	mov	r20, r24
    117a:	8b 81       	ldd	r24, Y+3	; 0x03
    117c:	28 2f       	mov	r18, r24
    117e:	30 e0       	ldi	r19, 0x00	; 0
    1180:	81 e0       	ldi	r24, 0x01	; 1
    1182:	90 e0       	ldi	r25, 0x00	; 0
    1184:	02 2e       	mov	r0, r18
    1186:	02 c0       	rjmp	.+4      	; 0x118c <DIO_enumTogglePinValue+0xf2>
    1188:	88 0f       	add	r24, r24
    118a:	99 1f       	adc	r25, r25
    118c:	0a 94       	dec	r0
    118e:	e2 f7       	brpl	.-8      	; 0x1188 <DIO_enumTogglePinValue+0xee>
    1190:	84 27       	eor	r24, r20
    1192:	8c 93       	st	X, r24
    1194:	01 c0       	rjmp	.+2      	; 0x1198 <DIO_enumTogglePinValue+0xfe>
			}
	}
	else
	{
		LOC_enumState = DIO_NOK;
    1196:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState;
    1198:	89 81       	ldd	r24, Y+1	; 0x01
}
    119a:	0f 90       	pop	r0
    119c:	0f 90       	pop	r0
    119e:	0f 90       	pop	r0
    11a0:	0f 90       	pop	r0
    11a2:	0f 90       	pop	r0
    11a4:	cf 91       	pop	r28
    11a6:	df 91       	pop	r29
    11a8:	08 95       	ret

000011aa <DIO_enumSetPortDirection>:

/*--------------------------------------------------------------------------------------------------------------------*/
DIO_ErrorStatus DIO_enumSetPortDirection (u8 Copy_u8PORT, u8 Copy_u8Direction ){
    11aa:	df 93       	push	r29
    11ac:	cf 93       	push	r28
    11ae:	cd b7       	in	r28, 0x3d	; 61
    11b0:	de b7       	in	r29, 0x3e	; 62
    11b2:	27 97       	sbiw	r28, 0x07	; 7
    11b4:	0f b6       	in	r0, 0x3f	; 63
    11b6:	f8 94       	cli
    11b8:	de bf       	out	0x3e, r29	; 62
    11ba:	0f be       	out	0x3f, r0	; 63
    11bc:	cd bf       	out	0x3d, r28	; 61
    11be:	8a 83       	std	Y+2, r24	; 0x02
    11c0:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumState = DIO_OK;
    11c2:	81 e0       	ldi	r24, 0x01	; 1
    11c4:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PORT <= DIO_PORTD)
    11c6:	8a 81       	ldd	r24, Y+2	; 0x02
    11c8:	84 30       	cpi	r24, 0x04	; 4
    11ca:	08 f0       	brcs	.+2      	; 0x11ce <DIO_enumSetPortDirection+0x24>
    11cc:	1a c2       	rjmp	.+1076   	; 0x1602 <DIO_enumSetPortDirection+0x458>
	{
		if(Copy_u8Direction == DIO_PIN_OUTPUT)
    11ce:	8b 81       	ldd	r24, Y+3	; 0x03
    11d0:	81 30       	cpi	r24, 0x01	; 1
    11d2:	09 f0       	breq	.+2      	; 0x11d6 <DIO_enumSetPortDirection+0x2c>
    11d4:	08 c1       	rjmp	.+528    	; 0x13e6 <DIO_enumSetPortDirection+0x23c>
		{
			switch(Copy_u8PORT)
    11d6:	8a 81       	ldd	r24, Y+2	; 0x02
    11d8:	28 2f       	mov	r18, r24
    11da:	30 e0       	ldi	r19, 0x00	; 0
    11dc:	3f 83       	std	Y+7, r19	; 0x07
    11de:	2e 83       	std	Y+6, r18	; 0x06
    11e0:	8e 81       	ldd	r24, Y+6	; 0x06
    11e2:	9f 81       	ldd	r25, Y+7	; 0x07
    11e4:	81 30       	cpi	r24, 0x01	; 1
    11e6:	91 05       	cpc	r25, r1
    11e8:	09 f4       	brne	.+2      	; 0x11ec <DIO_enumSetPortDirection+0x42>
    11ea:	50 c0       	rjmp	.+160    	; 0x128c <DIO_enumSetPortDirection+0xe2>
    11ec:	2e 81       	ldd	r18, Y+6	; 0x06
    11ee:	3f 81       	ldd	r19, Y+7	; 0x07
    11f0:	22 30       	cpi	r18, 0x02	; 2
    11f2:	31 05       	cpc	r19, r1
    11f4:	2c f4       	brge	.+10     	; 0x1200 <DIO_enumSetPortDirection+0x56>
    11f6:	8e 81       	ldd	r24, Y+6	; 0x06
    11f8:	9f 81       	ldd	r25, Y+7	; 0x07
    11fa:	00 97       	sbiw	r24, 0x00	; 0
    11fc:	71 f0       	breq	.+28     	; 0x121a <DIO_enumSetPortDirection+0x70>
    11fe:	f1 c0       	rjmp	.+482    	; 0x13e2 <DIO_enumSetPortDirection+0x238>
    1200:	2e 81       	ldd	r18, Y+6	; 0x06
    1202:	3f 81       	ldd	r19, Y+7	; 0x07
    1204:	22 30       	cpi	r18, 0x02	; 2
    1206:	31 05       	cpc	r19, r1
    1208:	09 f4       	brne	.+2      	; 0x120c <DIO_enumSetPortDirection+0x62>
    120a:	79 c0       	rjmp	.+242    	; 0x12fe <DIO_enumSetPortDirection+0x154>
    120c:	8e 81       	ldd	r24, Y+6	; 0x06
    120e:	9f 81       	ldd	r25, Y+7	; 0x07
    1210:	83 30       	cpi	r24, 0x03	; 3
    1212:	91 05       	cpc	r25, r1
    1214:	09 f4       	brne	.+2      	; 0x1218 <DIO_enumSetPortDirection+0x6e>
    1216:	ac c0       	rjmp	.+344    	; 0x1370 <DIO_enumSetPortDirection+0x1c6>
    1218:	e4 c0       	rjmp	.+456    	; 0x13e2 <DIO_enumSetPortDirection+0x238>
			{
				case DIO_PORTA: SET_BIT(DDRA, DIO_PIN0);
    121a:	aa e3       	ldi	r26, 0x3A	; 58
    121c:	b0 e0       	ldi	r27, 0x00	; 0
    121e:	ea e3       	ldi	r30, 0x3A	; 58
    1220:	f0 e0       	ldi	r31, 0x00	; 0
    1222:	80 81       	ld	r24, Z
    1224:	81 60       	ori	r24, 0x01	; 1
    1226:	8c 93       	st	X, r24
								SET_BIT(DDRA, DIO_PIN1);
    1228:	aa e3       	ldi	r26, 0x3A	; 58
    122a:	b0 e0       	ldi	r27, 0x00	; 0
    122c:	ea e3       	ldi	r30, 0x3A	; 58
    122e:	f0 e0       	ldi	r31, 0x00	; 0
    1230:	80 81       	ld	r24, Z
    1232:	82 60       	ori	r24, 0x02	; 2
    1234:	8c 93       	st	X, r24
								SET_BIT(DDRA, DIO_PIN2);
    1236:	aa e3       	ldi	r26, 0x3A	; 58
    1238:	b0 e0       	ldi	r27, 0x00	; 0
    123a:	ea e3       	ldi	r30, 0x3A	; 58
    123c:	f0 e0       	ldi	r31, 0x00	; 0
    123e:	80 81       	ld	r24, Z
    1240:	84 60       	ori	r24, 0x04	; 4
    1242:	8c 93       	st	X, r24
								SET_BIT(DDRA, DIO_PIN3);
    1244:	aa e3       	ldi	r26, 0x3A	; 58
    1246:	b0 e0       	ldi	r27, 0x00	; 0
    1248:	ea e3       	ldi	r30, 0x3A	; 58
    124a:	f0 e0       	ldi	r31, 0x00	; 0
    124c:	80 81       	ld	r24, Z
    124e:	88 60       	ori	r24, 0x08	; 8
    1250:	8c 93       	st	X, r24
								SET_BIT(DDRA, DIO_PIN4);
    1252:	aa e3       	ldi	r26, 0x3A	; 58
    1254:	b0 e0       	ldi	r27, 0x00	; 0
    1256:	ea e3       	ldi	r30, 0x3A	; 58
    1258:	f0 e0       	ldi	r31, 0x00	; 0
    125a:	80 81       	ld	r24, Z
    125c:	80 61       	ori	r24, 0x10	; 16
    125e:	8c 93       	st	X, r24
								SET_BIT(DDRA, DIO_PIN5);
    1260:	aa e3       	ldi	r26, 0x3A	; 58
    1262:	b0 e0       	ldi	r27, 0x00	; 0
    1264:	ea e3       	ldi	r30, 0x3A	; 58
    1266:	f0 e0       	ldi	r31, 0x00	; 0
    1268:	80 81       	ld	r24, Z
    126a:	80 62       	ori	r24, 0x20	; 32
    126c:	8c 93       	st	X, r24
								SET_BIT(DDRA, DIO_PIN6);
    126e:	aa e3       	ldi	r26, 0x3A	; 58
    1270:	b0 e0       	ldi	r27, 0x00	; 0
    1272:	ea e3       	ldi	r30, 0x3A	; 58
    1274:	f0 e0       	ldi	r31, 0x00	; 0
    1276:	80 81       	ld	r24, Z
    1278:	80 64       	ori	r24, 0x40	; 64
    127a:	8c 93       	st	X, r24
								SET_BIT(DDRA, DIO_PIN7);break;
    127c:	aa e3       	ldi	r26, 0x3A	; 58
    127e:	b0 e0       	ldi	r27, 0x00	; 0
    1280:	ea e3       	ldi	r30, 0x3A	; 58
    1282:	f0 e0       	ldi	r31, 0x00	; 0
    1284:	80 81       	ld	r24, Z
    1286:	80 68       	ori	r24, 0x80	; 128
    1288:	8c 93       	st	X, r24
    128a:	bc c1       	rjmp	.+888    	; 0x1604 <DIO_enumSetPortDirection+0x45a>


				case DIO_PORTB: SET_BIT(DDRB, DIO_PIN0);
    128c:	a7 e3       	ldi	r26, 0x37	; 55
    128e:	b0 e0       	ldi	r27, 0x00	; 0
    1290:	e7 e3       	ldi	r30, 0x37	; 55
    1292:	f0 e0       	ldi	r31, 0x00	; 0
    1294:	80 81       	ld	r24, Z
    1296:	81 60       	ori	r24, 0x01	; 1
    1298:	8c 93       	st	X, r24
								SET_BIT(DDRB, DIO_PIN1);
    129a:	a7 e3       	ldi	r26, 0x37	; 55
    129c:	b0 e0       	ldi	r27, 0x00	; 0
    129e:	e7 e3       	ldi	r30, 0x37	; 55
    12a0:	f0 e0       	ldi	r31, 0x00	; 0
    12a2:	80 81       	ld	r24, Z
    12a4:	82 60       	ori	r24, 0x02	; 2
    12a6:	8c 93       	st	X, r24
								SET_BIT(DDRB, DIO_PIN2);
    12a8:	a7 e3       	ldi	r26, 0x37	; 55
    12aa:	b0 e0       	ldi	r27, 0x00	; 0
    12ac:	e7 e3       	ldi	r30, 0x37	; 55
    12ae:	f0 e0       	ldi	r31, 0x00	; 0
    12b0:	80 81       	ld	r24, Z
    12b2:	84 60       	ori	r24, 0x04	; 4
    12b4:	8c 93       	st	X, r24
								SET_BIT(DDRB, DIO_PIN3);
    12b6:	a7 e3       	ldi	r26, 0x37	; 55
    12b8:	b0 e0       	ldi	r27, 0x00	; 0
    12ba:	e7 e3       	ldi	r30, 0x37	; 55
    12bc:	f0 e0       	ldi	r31, 0x00	; 0
    12be:	80 81       	ld	r24, Z
    12c0:	88 60       	ori	r24, 0x08	; 8
    12c2:	8c 93       	st	X, r24
								SET_BIT(DDRB, DIO_PIN4);
    12c4:	a7 e3       	ldi	r26, 0x37	; 55
    12c6:	b0 e0       	ldi	r27, 0x00	; 0
    12c8:	e7 e3       	ldi	r30, 0x37	; 55
    12ca:	f0 e0       	ldi	r31, 0x00	; 0
    12cc:	80 81       	ld	r24, Z
    12ce:	80 61       	ori	r24, 0x10	; 16
    12d0:	8c 93       	st	X, r24
								SET_BIT(DDRB, DIO_PIN5);
    12d2:	a7 e3       	ldi	r26, 0x37	; 55
    12d4:	b0 e0       	ldi	r27, 0x00	; 0
    12d6:	e7 e3       	ldi	r30, 0x37	; 55
    12d8:	f0 e0       	ldi	r31, 0x00	; 0
    12da:	80 81       	ld	r24, Z
    12dc:	80 62       	ori	r24, 0x20	; 32
    12de:	8c 93       	st	X, r24
								SET_BIT(DDRB, DIO_PIN6);
    12e0:	a7 e3       	ldi	r26, 0x37	; 55
    12e2:	b0 e0       	ldi	r27, 0x00	; 0
    12e4:	e7 e3       	ldi	r30, 0x37	; 55
    12e6:	f0 e0       	ldi	r31, 0x00	; 0
    12e8:	80 81       	ld	r24, Z
    12ea:	80 64       	ori	r24, 0x40	; 64
    12ec:	8c 93       	st	X, r24
								SET_BIT(DDRB, DIO_PIN7);break;
    12ee:	a7 e3       	ldi	r26, 0x37	; 55
    12f0:	b0 e0       	ldi	r27, 0x00	; 0
    12f2:	e7 e3       	ldi	r30, 0x37	; 55
    12f4:	f0 e0       	ldi	r31, 0x00	; 0
    12f6:	80 81       	ld	r24, Z
    12f8:	80 68       	ori	r24, 0x80	; 128
    12fa:	8c 93       	st	X, r24
    12fc:	83 c1       	rjmp	.+774    	; 0x1604 <DIO_enumSetPortDirection+0x45a>


				case DIO_PORTC: SET_BIT(DDRC, DIO_PIN0);
    12fe:	a4 e3       	ldi	r26, 0x34	; 52
    1300:	b0 e0       	ldi	r27, 0x00	; 0
    1302:	e4 e3       	ldi	r30, 0x34	; 52
    1304:	f0 e0       	ldi	r31, 0x00	; 0
    1306:	80 81       	ld	r24, Z
    1308:	81 60       	ori	r24, 0x01	; 1
    130a:	8c 93       	st	X, r24
								SET_BIT(DDRC, DIO_PIN1);
    130c:	a4 e3       	ldi	r26, 0x34	; 52
    130e:	b0 e0       	ldi	r27, 0x00	; 0
    1310:	e4 e3       	ldi	r30, 0x34	; 52
    1312:	f0 e0       	ldi	r31, 0x00	; 0
    1314:	80 81       	ld	r24, Z
    1316:	82 60       	ori	r24, 0x02	; 2
    1318:	8c 93       	st	X, r24
								SET_BIT(DDRC, DIO_PIN2);
    131a:	a4 e3       	ldi	r26, 0x34	; 52
    131c:	b0 e0       	ldi	r27, 0x00	; 0
    131e:	e4 e3       	ldi	r30, 0x34	; 52
    1320:	f0 e0       	ldi	r31, 0x00	; 0
    1322:	80 81       	ld	r24, Z
    1324:	84 60       	ori	r24, 0x04	; 4
    1326:	8c 93       	st	X, r24
								SET_BIT(DDRC, DIO_PIN3);
    1328:	a4 e3       	ldi	r26, 0x34	; 52
    132a:	b0 e0       	ldi	r27, 0x00	; 0
    132c:	e4 e3       	ldi	r30, 0x34	; 52
    132e:	f0 e0       	ldi	r31, 0x00	; 0
    1330:	80 81       	ld	r24, Z
    1332:	88 60       	ori	r24, 0x08	; 8
    1334:	8c 93       	st	X, r24
								SET_BIT(DDRC, DIO_PIN4);
    1336:	a4 e3       	ldi	r26, 0x34	; 52
    1338:	b0 e0       	ldi	r27, 0x00	; 0
    133a:	e4 e3       	ldi	r30, 0x34	; 52
    133c:	f0 e0       	ldi	r31, 0x00	; 0
    133e:	80 81       	ld	r24, Z
    1340:	80 61       	ori	r24, 0x10	; 16
    1342:	8c 93       	st	X, r24
								SET_BIT(DDRC, DIO_PIN5);
    1344:	a4 e3       	ldi	r26, 0x34	; 52
    1346:	b0 e0       	ldi	r27, 0x00	; 0
    1348:	e4 e3       	ldi	r30, 0x34	; 52
    134a:	f0 e0       	ldi	r31, 0x00	; 0
    134c:	80 81       	ld	r24, Z
    134e:	80 62       	ori	r24, 0x20	; 32
    1350:	8c 93       	st	X, r24
								SET_BIT(DDRC, DIO_PIN6);
    1352:	a4 e3       	ldi	r26, 0x34	; 52
    1354:	b0 e0       	ldi	r27, 0x00	; 0
    1356:	e4 e3       	ldi	r30, 0x34	; 52
    1358:	f0 e0       	ldi	r31, 0x00	; 0
    135a:	80 81       	ld	r24, Z
    135c:	80 64       	ori	r24, 0x40	; 64
    135e:	8c 93       	st	X, r24
								SET_BIT(DDRC, DIO_PIN7);break;
    1360:	a4 e3       	ldi	r26, 0x34	; 52
    1362:	b0 e0       	ldi	r27, 0x00	; 0
    1364:	e4 e3       	ldi	r30, 0x34	; 52
    1366:	f0 e0       	ldi	r31, 0x00	; 0
    1368:	80 81       	ld	r24, Z
    136a:	80 68       	ori	r24, 0x80	; 128
    136c:	8c 93       	st	X, r24
    136e:	4a c1       	rjmp	.+660    	; 0x1604 <DIO_enumSetPortDirection+0x45a>


				case DIO_PORTD: SET_BIT(DDRD, DIO_PIN0);
    1370:	a1 e3       	ldi	r26, 0x31	; 49
    1372:	b0 e0       	ldi	r27, 0x00	; 0
    1374:	e1 e3       	ldi	r30, 0x31	; 49
    1376:	f0 e0       	ldi	r31, 0x00	; 0
    1378:	80 81       	ld	r24, Z
    137a:	81 60       	ori	r24, 0x01	; 1
    137c:	8c 93       	st	X, r24
								SET_BIT(DDRD, DIO_PIN1);
    137e:	a1 e3       	ldi	r26, 0x31	; 49
    1380:	b0 e0       	ldi	r27, 0x00	; 0
    1382:	e1 e3       	ldi	r30, 0x31	; 49
    1384:	f0 e0       	ldi	r31, 0x00	; 0
    1386:	80 81       	ld	r24, Z
    1388:	82 60       	ori	r24, 0x02	; 2
    138a:	8c 93       	st	X, r24
								SET_BIT(DDRD, DIO_PIN2);
    138c:	a1 e3       	ldi	r26, 0x31	; 49
    138e:	b0 e0       	ldi	r27, 0x00	; 0
    1390:	e1 e3       	ldi	r30, 0x31	; 49
    1392:	f0 e0       	ldi	r31, 0x00	; 0
    1394:	80 81       	ld	r24, Z
    1396:	84 60       	ori	r24, 0x04	; 4
    1398:	8c 93       	st	X, r24
								SET_BIT(DDRD, DIO_PIN3);
    139a:	a1 e3       	ldi	r26, 0x31	; 49
    139c:	b0 e0       	ldi	r27, 0x00	; 0
    139e:	e1 e3       	ldi	r30, 0x31	; 49
    13a0:	f0 e0       	ldi	r31, 0x00	; 0
    13a2:	80 81       	ld	r24, Z
    13a4:	88 60       	ori	r24, 0x08	; 8
    13a6:	8c 93       	st	X, r24
								SET_BIT(DDRD, DIO_PIN4);
    13a8:	a1 e3       	ldi	r26, 0x31	; 49
    13aa:	b0 e0       	ldi	r27, 0x00	; 0
    13ac:	e1 e3       	ldi	r30, 0x31	; 49
    13ae:	f0 e0       	ldi	r31, 0x00	; 0
    13b0:	80 81       	ld	r24, Z
    13b2:	80 61       	ori	r24, 0x10	; 16
    13b4:	8c 93       	st	X, r24
								SET_BIT(DDRD, DIO_PIN5);
    13b6:	a1 e3       	ldi	r26, 0x31	; 49
    13b8:	b0 e0       	ldi	r27, 0x00	; 0
    13ba:	e1 e3       	ldi	r30, 0x31	; 49
    13bc:	f0 e0       	ldi	r31, 0x00	; 0
    13be:	80 81       	ld	r24, Z
    13c0:	80 62       	ori	r24, 0x20	; 32
    13c2:	8c 93       	st	X, r24
								SET_BIT(DDRD, DIO_PIN6);
    13c4:	a1 e3       	ldi	r26, 0x31	; 49
    13c6:	b0 e0       	ldi	r27, 0x00	; 0
    13c8:	e1 e3       	ldi	r30, 0x31	; 49
    13ca:	f0 e0       	ldi	r31, 0x00	; 0
    13cc:	80 81       	ld	r24, Z
    13ce:	80 64       	ori	r24, 0x40	; 64
    13d0:	8c 93       	st	X, r24
								SET_BIT(DDRD, DIO_PIN7);break;
    13d2:	a1 e3       	ldi	r26, 0x31	; 49
    13d4:	b0 e0       	ldi	r27, 0x00	; 0
    13d6:	e1 e3       	ldi	r30, 0x31	; 49
    13d8:	f0 e0       	ldi	r31, 0x00	; 0
    13da:	80 81       	ld	r24, Z
    13dc:	80 68       	ori	r24, 0x80	; 128
    13de:	8c 93       	st	X, r24
    13e0:	11 c1       	rjmp	.+546    	; 0x1604 <DIO_enumSetPortDirection+0x45a>
				default :       LOC_enumState = DIO_NOK    ;break;
    13e2:	19 82       	std	Y+1, r1	; 0x01
    13e4:	0f c1       	rjmp	.+542    	; 0x1604 <DIO_enumSetPortDirection+0x45a>
			}


		}
		else if (Copy_u8Direction == DIO_PIN_INPUT)
    13e6:	8b 81       	ldd	r24, Y+3	; 0x03
    13e8:	88 23       	and	r24, r24
    13ea:	09 f0       	breq	.+2      	; 0x13ee <DIO_enumSetPortDirection+0x244>
    13ec:	08 c1       	rjmp	.+528    	; 0x15fe <DIO_enumSetPortDirection+0x454>
		{
			switch(Copy_u8PORT)
    13ee:	8a 81       	ldd	r24, Y+2	; 0x02
    13f0:	28 2f       	mov	r18, r24
    13f2:	30 e0       	ldi	r19, 0x00	; 0
    13f4:	3d 83       	std	Y+5, r19	; 0x05
    13f6:	2c 83       	std	Y+4, r18	; 0x04
    13f8:	8c 81       	ldd	r24, Y+4	; 0x04
    13fa:	9d 81       	ldd	r25, Y+5	; 0x05
    13fc:	81 30       	cpi	r24, 0x01	; 1
    13fe:	91 05       	cpc	r25, r1
    1400:	09 f4       	brne	.+2      	; 0x1404 <DIO_enumSetPortDirection+0x25a>
    1402:	50 c0       	rjmp	.+160    	; 0x14a4 <DIO_enumSetPortDirection+0x2fa>
    1404:	2c 81       	ldd	r18, Y+4	; 0x04
    1406:	3d 81       	ldd	r19, Y+5	; 0x05
    1408:	22 30       	cpi	r18, 0x02	; 2
    140a:	31 05       	cpc	r19, r1
    140c:	2c f4       	brge	.+10     	; 0x1418 <DIO_enumSetPortDirection+0x26e>
    140e:	8c 81       	ldd	r24, Y+4	; 0x04
    1410:	9d 81       	ldd	r25, Y+5	; 0x05
    1412:	00 97       	sbiw	r24, 0x00	; 0
    1414:	71 f0       	breq	.+28     	; 0x1432 <DIO_enumSetPortDirection+0x288>
    1416:	f1 c0       	rjmp	.+482    	; 0x15fa <DIO_enumSetPortDirection+0x450>
    1418:	2c 81       	ldd	r18, Y+4	; 0x04
    141a:	3d 81       	ldd	r19, Y+5	; 0x05
    141c:	22 30       	cpi	r18, 0x02	; 2
    141e:	31 05       	cpc	r19, r1
    1420:	09 f4       	brne	.+2      	; 0x1424 <DIO_enumSetPortDirection+0x27a>
    1422:	79 c0       	rjmp	.+242    	; 0x1516 <DIO_enumSetPortDirection+0x36c>
    1424:	8c 81       	ldd	r24, Y+4	; 0x04
    1426:	9d 81       	ldd	r25, Y+5	; 0x05
    1428:	83 30       	cpi	r24, 0x03	; 3
    142a:	91 05       	cpc	r25, r1
    142c:	09 f4       	brne	.+2      	; 0x1430 <DIO_enumSetPortDirection+0x286>
    142e:	ac c0       	rjmp	.+344    	; 0x1588 <DIO_enumSetPortDirection+0x3de>
    1430:	e4 c0       	rjmp	.+456    	; 0x15fa <DIO_enumSetPortDirection+0x450>
			{
				case DIO_PORTA: CLR_BIT(DDRA, DIO_PIN0);
    1432:	aa e3       	ldi	r26, 0x3A	; 58
    1434:	b0 e0       	ldi	r27, 0x00	; 0
    1436:	ea e3       	ldi	r30, 0x3A	; 58
    1438:	f0 e0       	ldi	r31, 0x00	; 0
    143a:	80 81       	ld	r24, Z
    143c:	8e 7f       	andi	r24, 0xFE	; 254
    143e:	8c 93       	st	X, r24
								CLR_BIT(DDRA, DIO_PIN1);
    1440:	aa e3       	ldi	r26, 0x3A	; 58
    1442:	b0 e0       	ldi	r27, 0x00	; 0
    1444:	ea e3       	ldi	r30, 0x3A	; 58
    1446:	f0 e0       	ldi	r31, 0x00	; 0
    1448:	80 81       	ld	r24, Z
    144a:	8d 7f       	andi	r24, 0xFD	; 253
    144c:	8c 93       	st	X, r24
								CLR_BIT(DDRA, DIO_PIN2);
    144e:	aa e3       	ldi	r26, 0x3A	; 58
    1450:	b0 e0       	ldi	r27, 0x00	; 0
    1452:	ea e3       	ldi	r30, 0x3A	; 58
    1454:	f0 e0       	ldi	r31, 0x00	; 0
    1456:	80 81       	ld	r24, Z
    1458:	8b 7f       	andi	r24, 0xFB	; 251
    145a:	8c 93       	st	X, r24
								CLR_BIT(DDRA, DIO_PIN3);
    145c:	aa e3       	ldi	r26, 0x3A	; 58
    145e:	b0 e0       	ldi	r27, 0x00	; 0
    1460:	ea e3       	ldi	r30, 0x3A	; 58
    1462:	f0 e0       	ldi	r31, 0x00	; 0
    1464:	80 81       	ld	r24, Z
    1466:	87 7f       	andi	r24, 0xF7	; 247
    1468:	8c 93       	st	X, r24
								CLR_BIT(DDRA, DIO_PIN4);
    146a:	aa e3       	ldi	r26, 0x3A	; 58
    146c:	b0 e0       	ldi	r27, 0x00	; 0
    146e:	ea e3       	ldi	r30, 0x3A	; 58
    1470:	f0 e0       	ldi	r31, 0x00	; 0
    1472:	80 81       	ld	r24, Z
    1474:	8f 7e       	andi	r24, 0xEF	; 239
    1476:	8c 93       	st	X, r24
								CLR_BIT(DDRA, DIO_PIN5);
    1478:	aa e3       	ldi	r26, 0x3A	; 58
    147a:	b0 e0       	ldi	r27, 0x00	; 0
    147c:	ea e3       	ldi	r30, 0x3A	; 58
    147e:	f0 e0       	ldi	r31, 0x00	; 0
    1480:	80 81       	ld	r24, Z
    1482:	8f 7d       	andi	r24, 0xDF	; 223
    1484:	8c 93       	st	X, r24
								CLR_BIT(DDRA, DIO_PIN6);
    1486:	aa e3       	ldi	r26, 0x3A	; 58
    1488:	b0 e0       	ldi	r27, 0x00	; 0
    148a:	ea e3       	ldi	r30, 0x3A	; 58
    148c:	f0 e0       	ldi	r31, 0x00	; 0
    148e:	80 81       	ld	r24, Z
    1490:	8f 7b       	andi	r24, 0xBF	; 191
    1492:	8c 93       	st	X, r24
								CLR_BIT(DDRA, DIO_PIN7);break;
    1494:	aa e3       	ldi	r26, 0x3A	; 58
    1496:	b0 e0       	ldi	r27, 0x00	; 0
    1498:	ea e3       	ldi	r30, 0x3A	; 58
    149a:	f0 e0       	ldi	r31, 0x00	; 0
    149c:	80 81       	ld	r24, Z
    149e:	8f 77       	andi	r24, 0x7F	; 127
    14a0:	8c 93       	st	X, r24
    14a2:	b0 c0       	rjmp	.+352    	; 0x1604 <DIO_enumSetPortDirection+0x45a>


				case DIO_PORTB: CLR_BIT(DDRB, DIO_PIN0);
    14a4:	a7 e3       	ldi	r26, 0x37	; 55
    14a6:	b0 e0       	ldi	r27, 0x00	; 0
    14a8:	e7 e3       	ldi	r30, 0x37	; 55
    14aa:	f0 e0       	ldi	r31, 0x00	; 0
    14ac:	80 81       	ld	r24, Z
    14ae:	8e 7f       	andi	r24, 0xFE	; 254
    14b0:	8c 93       	st	X, r24
								CLR_BIT(DDRB, DIO_PIN1);
    14b2:	a7 e3       	ldi	r26, 0x37	; 55
    14b4:	b0 e0       	ldi	r27, 0x00	; 0
    14b6:	e7 e3       	ldi	r30, 0x37	; 55
    14b8:	f0 e0       	ldi	r31, 0x00	; 0
    14ba:	80 81       	ld	r24, Z
    14bc:	8d 7f       	andi	r24, 0xFD	; 253
    14be:	8c 93       	st	X, r24
								CLR_BIT(DDRB, DIO_PIN2);
    14c0:	a7 e3       	ldi	r26, 0x37	; 55
    14c2:	b0 e0       	ldi	r27, 0x00	; 0
    14c4:	e7 e3       	ldi	r30, 0x37	; 55
    14c6:	f0 e0       	ldi	r31, 0x00	; 0
    14c8:	80 81       	ld	r24, Z
    14ca:	8b 7f       	andi	r24, 0xFB	; 251
    14cc:	8c 93       	st	X, r24
								CLR_BIT(DDRB, DIO_PIN3);
    14ce:	a7 e3       	ldi	r26, 0x37	; 55
    14d0:	b0 e0       	ldi	r27, 0x00	; 0
    14d2:	e7 e3       	ldi	r30, 0x37	; 55
    14d4:	f0 e0       	ldi	r31, 0x00	; 0
    14d6:	80 81       	ld	r24, Z
    14d8:	87 7f       	andi	r24, 0xF7	; 247
    14da:	8c 93       	st	X, r24
								CLR_BIT(DDRB, DIO_PIN4);
    14dc:	a7 e3       	ldi	r26, 0x37	; 55
    14de:	b0 e0       	ldi	r27, 0x00	; 0
    14e0:	e7 e3       	ldi	r30, 0x37	; 55
    14e2:	f0 e0       	ldi	r31, 0x00	; 0
    14e4:	80 81       	ld	r24, Z
    14e6:	8f 7e       	andi	r24, 0xEF	; 239
    14e8:	8c 93       	st	X, r24
								CLR_BIT(DDRB, DIO_PIN5);
    14ea:	a7 e3       	ldi	r26, 0x37	; 55
    14ec:	b0 e0       	ldi	r27, 0x00	; 0
    14ee:	e7 e3       	ldi	r30, 0x37	; 55
    14f0:	f0 e0       	ldi	r31, 0x00	; 0
    14f2:	80 81       	ld	r24, Z
    14f4:	8f 7d       	andi	r24, 0xDF	; 223
    14f6:	8c 93       	st	X, r24
								CLR_BIT(DDRB, DIO_PIN6);
    14f8:	a7 e3       	ldi	r26, 0x37	; 55
    14fa:	b0 e0       	ldi	r27, 0x00	; 0
    14fc:	e7 e3       	ldi	r30, 0x37	; 55
    14fe:	f0 e0       	ldi	r31, 0x00	; 0
    1500:	80 81       	ld	r24, Z
    1502:	8f 7b       	andi	r24, 0xBF	; 191
    1504:	8c 93       	st	X, r24
								CLR_BIT(DDRB, DIO_PIN7);break;
    1506:	a7 e3       	ldi	r26, 0x37	; 55
    1508:	b0 e0       	ldi	r27, 0x00	; 0
    150a:	e7 e3       	ldi	r30, 0x37	; 55
    150c:	f0 e0       	ldi	r31, 0x00	; 0
    150e:	80 81       	ld	r24, Z
    1510:	8f 77       	andi	r24, 0x7F	; 127
    1512:	8c 93       	st	X, r24
    1514:	77 c0       	rjmp	.+238    	; 0x1604 <DIO_enumSetPortDirection+0x45a>


				case DIO_PORTC: CLR_BIT(DDRC, DIO_PIN0);
    1516:	a4 e3       	ldi	r26, 0x34	; 52
    1518:	b0 e0       	ldi	r27, 0x00	; 0
    151a:	e4 e3       	ldi	r30, 0x34	; 52
    151c:	f0 e0       	ldi	r31, 0x00	; 0
    151e:	80 81       	ld	r24, Z
    1520:	8e 7f       	andi	r24, 0xFE	; 254
    1522:	8c 93       	st	X, r24
								CLR_BIT(DDRC, DIO_PIN1);
    1524:	a4 e3       	ldi	r26, 0x34	; 52
    1526:	b0 e0       	ldi	r27, 0x00	; 0
    1528:	e4 e3       	ldi	r30, 0x34	; 52
    152a:	f0 e0       	ldi	r31, 0x00	; 0
    152c:	80 81       	ld	r24, Z
    152e:	8d 7f       	andi	r24, 0xFD	; 253
    1530:	8c 93       	st	X, r24
								CLR_BIT(DDRC, DIO_PIN2);
    1532:	a4 e3       	ldi	r26, 0x34	; 52
    1534:	b0 e0       	ldi	r27, 0x00	; 0
    1536:	e4 e3       	ldi	r30, 0x34	; 52
    1538:	f0 e0       	ldi	r31, 0x00	; 0
    153a:	80 81       	ld	r24, Z
    153c:	8b 7f       	andi	r24, 0xFB	; 251
    153e:	8c 93       	st	X, r24
								CLR_BIT(DDRC, DIO_PIN3);
    1540:	a4 e3       	ldi	r26, 0x34	; 52
    1542:	b0 e0       	ldi	r27, 0x00	; 0
    1544:	e4 e3       	ldi	r30, 0x34	; 52
    1546:	f0 e0       	ldi	r31, 0x00	; 0
    1548:	80 81       	ld	r24, Z
    154a:	87 7f       	andi	r24, 0xF7	; 247
    154c:	8c 93       	st	X, r24
								CLR_BIT(DDRC, DIO_PIN4);
    154e:	a4 e3       	ldi	r26, 0x34	; 52
    1550:	b0 e0       	ldi	r27, 0x00	; 0
    1552:	e4 e3       	ldi	r30, 0x34	; 52
    1554:	f0 e0       	ldi	r31, 0x00	; 0
    1556:	80 81       	ld	r24, Z
    1558:	8f 7e       	andi	r24, 0xEF	; 239
    155a:	8c 93       	st	X, r24
								CLR_BIT(DDRC, DIO_PIN5);
    155c:	a4 e3       	ldi	r26, 0x34	; 52
    155e:	b0 e0       	ldi	r27, 0x00	; 0
    1560:	e4 e3       	ldi	r30, 0x34	; 52
    1562:	f0 e0       	ldi	r31, 0x00	; 0
    1564:	80 81       	ld	r24, Z
    1566:	8f 7d       	andi	r24, 0xDF	; 223
    1568:	8c 93       	st	X, r24
								CLR_BIT(DDRC, DIO_PIN6);
    156a:	a4 e3       	ldi	r26, 0x34	; 52
    156c:	b0 e0       	ldi	r27, 0x00	; 0
    156e:	e4 e3       	ldi	r30, 0x34	; 52
    1570:	f0 e0       	ldi	r31, 0x00	; 0
    1572:	80 81       	ld	r24, Z
    1574:	8f 7b       	andi	r24, 0xBF	; 191
    1576:	8c 93       	st	X, r24
								CLR_BIT(DDRC, DIO_PIN7);break;
    1578:	a4 e3       	ldi	r26, 0x34	; 52
    157a:	b0 e0       	ldi	r27, 0x00	; 0
    157c:	e4 e3       	ldi	r30, 0x34	; 52
    157e:	f0 e0       	ldi	r31, 0x00	; 0
    1580:	80 81       	ld	r24, Z
    1582:	8f 77       	andi	r24, 0x7F	; 127
    1584:	8c 93       	st	X, r24
    1586:	3e c0       	rjmp	.+124    	; 0x1604 <DIO_enumSetPortDirection+0x45a>


				case DIO_PORTD: CLR_BIT(DDRD, DIO_PIN0);
    1588:	a1 e3       	ldi	r26, 0x31	; 49
    158a:	b0 e0       	ldi	r27, 0x00	; 0
    158c:	e1 e3       	ldi	r30, 0x31	; 49
    158e:	f0 e0       	ldi	r31, 0x00	; 0
    1590:	80 81       	ld	r24, Z
    1592:	8e 7f       	andi	r24, 0xFE	; 254
    1594:	8c 93       	st	X, r24
								CLR_BIT(DDRD, DIO_PIN1);
    1596:	a1 e3       	ldi	r26, 0x31	; 49
    1598:	b0 e0       	ldi	r27, 0x00	; 0
    159a:	e1 e3       	ldi	r30, 0x31	; 49
    159c:	f0 e0       	ldi	r31, 0x00	; 0
    159e:	80 81       	ld	r24, Z
    15a0:	8d 7f       	andi	r24, 0xFD	; 253
    15a2:	8c 93       	st	X, r24
								CLR_BIT(DDRD, DIO_PIN2);
    15a4:	a1 e3       	ldi	r26, 0x31	; 49
    15a6:	b0 e0       	ldi	r27, 0x00	; 0
    15a8:	e1 e3       	ldi	r30, 0x31	; 49
    15aa:	f0 e0       	ldi	r31, 0x00	; 0
    15ac:	80 81       	ld	r24, Z
    15ae:	8b 7f       	andi	r24, 0xFB	; 251
    15b0:	8c 93       	st	X, r24
								CLR_BIT(DDRD, DIO_PIN3);
    15b2:	a1 e3       	ldi	r26, 0x31	; 49
    15b4:	b0 e0       	ldi	r27, 0x00	; 0
    15b6:	e1 e3       	ldi	r30, 0x31	; 49
    15b8:	f0 e0       	ldi	r31, 0x00	; 0
    15ba:	80 81       	ld	r24, Z
    15bc:	87 7f       	andi	r24, 0xF7	; 247
    15be:	8c 93       	st	X, r24
								CLR_BIT(DDRD, DIO_PIN4);
    15c0:	a1 e3       	ldi	r26, 0x31	; 49
    15c2:	b0 e0       	ldi	r27, 0x00	; 0
    15c4:	e1 e3       	ldi	r30, 0x31	; 49
    15c6:	f0 e0       	ldi	r31, 0x00	; 0
    15c8:	80 81       	ld	r24, Z
    15ca:	8f 7e       	andi	r24, 0xEF	; 239
    15cc:	8c 93       	st	X, r24
								CLR_BIT(DDRD, DIO_PIN5);
    15ce:	a1 e3       	ldi	r26, 0x31	; 49
    15d0:	b0 e0       	ldi	r27, 0x00	; 0
    15d2:	e1 e3       	ldi	r30, 0x31	; 49
    15d4:	f0 e0       	ldi	r31, 0x00	; 0
    15d6:	80 81       	ld	r24, Z
    15d8:	8f 7d       	andi	r24, 0xDF	; 223
    15da:	8c 93       	st	X, r24
								CLR_BIT(DDRD, DIO_PIN6);
    15dc:	a1 e3       	ldi	r26, 0x31	; 49
    15de:	b0 e0       	ldi	r27, 0x00	; 0
    15e0:	e1 e3       	ldi	r30, 0x31	; 49
    15e2:	f0 e0       	ldi	r31, 0x00	; 0
    15e4:	80 81       	ld	r24, Z
    15e6:	8f 7b       	andi	r24, 0xBF	; 191
    15e8:	8c 93       	st	X, r24
								CLR_BIT(DDRD, DIO_PIN7);break;
    15ea:	a1 e3       	ldi	r26, 0x31	; 49
    15ec:	b0 e0       	ldi	r27, 0x00	; 0
    15ee:	e1 e3       	ldi	r30, 0x31	; 49
    15f0:	f0 e0       	ldi	r31, 0x00	; 0
    15f2:	80 81       	ld	r24, Z
    15f4:	8f 77       	andi	r24, 0x7F	; 127
    15f6:	8c 93       	st	X, r24
    15f8:	05 c0       	rjmp	.+10     	; 0x1604 <DIO_enumSetPortDirection+0x45a>
				default :       LOC_enumState = DIO_NOK    ;break;
    15fa:	19 82       	std	Y+1, r1	; 0x01
    15fc:	03 c0       	rjmp	.+6      	; 0x1604 <DIO_enumSetPortDirection+0x45a>
			}
		}
		else
		{
			LOC_enumState = DIO_NOK;
    15fe:	19 82       	std	Y+1, r1	; 0x01
    1600:	01 c0       	rjmp	.+2      	; 0x1604 <DIO_enumSetPortDirection+0x45a>
		}
	}
	else
	{
		LOC_enumState = DIO_NOK;
    1602:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState;
    1604:	89 81       	ldd	r24, Y+1	; 0x01
}
    1606:	27 96       	adiw	r28, 0x07	; 7
    1608:	0f b6       	in	r0, 0x3f	; 63
    160a:	f8 94       	cli
    160c:	de bf       	out	0x3e, r29	; 62
    160e:	0f be       	out	0x3f, r0	; 63
    1610:	cd bf       	out	0x3d, r28	; 61
    1612:	cf 91       	pop	r28
    1614:	df 91       	pop	r29
    1616:	08 95       	ret

00001618 <DIO_enumSetPortValue>:


/*------------------------------------------------------------------------------------------------------------------------*/
DIO_ErrorStatus DIO_enumSetPortValue     (u8 Copy_u8PORT, u8 Copy_u8Value     ){
    1618:	df 93       	push	r29
    161a:	cf 93       	push	r28
    161c:	cd b7       	in	r28, 0x3d	; 61
    161e:	de b7       	in	r29, 0x3e	; 62
    1620:	27 97       	sbiw	r28, 0x07	; 7
    1622:	0f b6       	in	r0, 0x3f	; 63
    1624:	f8 94       	cli
    1626:	de bf       	out	0x3e, r29	; 62
    1628:	0f be       	out	0x3f, r0	; 63
    162a:	cd bf       	out	0x3d, r28	; 61
    162c:	8a 83       	std	Y+2, r24	; 0x02
    162e:	6b 83       	std	Y+3, r22	; 0x03
	DIO_ErrorStatus LOC_enumState = DIO_OK;
    1630:	81 e0       	ldi	r24, 0x01	; 1
    1632:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_u8PORT <= DIO_PORTD )
    1634:	8a 81       	ldd	r24, Y+2	; 0x02
    1636:	84 30       	cpi	r24, 0x04	; 4
    1638:	08 f0       	brcs	.+2      	; 0x163c <DIO_enumSetPortValue+0x24>
    163a:	1a c2       	rjmp	.+1076   	; 0x1a70 <DIO_enumSetPortValue+0x458>
	{

		if(Copy_u8Value == DIO_PIN_HIGH)
    163c:	8b 81       	ldd	r24, Y+3	; 0x03
    163e:	81 30       	cpi	r24, 0x01	; 1
    1640:	09 f0       	breq	.+2      	; 0x1644 <DIO_enumSetPortValue+0x2c>
    1642:	08 c1       	rjmp	.+528    	; 0x1854 <DIO_enumSetPortValue+0x23c>
		{
		switch(Copy_u8PORT)
    1644:	8a 81       	ldd	r24, Y+2	; 0x02
    1646:	28 2f       	mov	r18, r24
    1648:	30 e0       	ldi	r19, 0x00	; 0
    164a:	3f 83       	std	Y+7, r19	; 0x07
    164c:	2e 83       	std	Y+6, r18	; 0x06
    164e:	8e 81       	ldd	r24, Y+6	; 0x06
    1650:	9f 81       	ldd	r25, Y+7	; 0x07
    1652:	81 30       	cpi	r24, 0x01	; 1
    1654:	91 05       	cpc	r25, r1
    1656:	09 f4       	brne	.+2      	; 0x165a <DIO_enumSetPortValue+0x42>
    1658:	50 c0       	rjmp	.+160    	; 0x16fa <DIO_enumSetPortValue+0xe2>
    165a:	2e 81       	ldd	r18, Y+6	; 0x06
    165c:	3f 81       	ldd	r19, Y+7	; 0x07
    165e:	22 30       	cpi	r18, 0x02	; 2
    1660:	31 05       	cpc	r19, r1
    1662:	2c f4       	brge	.+10     	; 0x166e <DIO_enumSetPortValue+0x56>
    1664:	8e 81       	ldd	r24, Y+6	; 0x06
    1666:	9f 81       	ldd	r25, Y+7	; 0x07
    1668:	00 97       	sbiw	r24, 0x00	; 0
    166a:	71 f0       	breq	.+28     	; 0x1688 <DIO_enumSetPortValue+0x70>
    166c:	f1 c0       	rjmp	.+482    	; 0x1850 <DIO_enumSetPortValue+0x238>
    166e:	2e 81       	ldd	r18, Y+6	; 0x06
    1670:	3f 81       	ldd	r19, Y+7	; 0x07
    1672:	22 30       	cpi	r18, 0x02	; 2
    1674:	31 05       	cpc	r19, r1
    1676:	09 f4       	brne	.+2      	; 0x167a <DIO_enumSetPortValue+0x62>
    1678:	79 c0       	rjmp	.+242    	; 0x176c <DIO_enumSetPortValue+0x154>
    167a:	8e 81       	ldd	r24, Y+6	; 0x06
    167c:	9f 81       	ldd	r25, Y+7	; 0x07
    167e:	83 30       	cpi	r24, 0x03	; 3
    1680:	91 05       	cpc	r25, r1
    1682:	09 f4       	brne	.+2      	; 0x1686 <DIO_enumSetPortValue+0x6e>
    1684:	ac c0       	rjmp	.+344    	; 0x17de <DIO_enumSetPortValue+0x1c6>
    1686:	e4 c0       	rjmp	.+456    	; 0x1850 <DIO_enumSetPortValue+0x238>
			{
				case DIO_PORTA: SET_BIT(PORTA, DIO_PIN0);
    1688:	ab e3       	ldi	r26, 0x3B	; 59
    168a:	b0 e0       	ldi	r27, 0x00	; 0
    168c:	eb e3       	ldi	r30, 0x3B	; 59
    168e:	f0 e0       	ldi	r31, 0x00	; 0
    1690:	80 81       	ld	r24, Z
    1692:	81 60       	ori	r24, 0x01	; 1
    1694:	8c 93       	st	X, r24
								SET_BIT(PORTA, DIO_PIN1);
    1696:	ab e3       	ldi	r26, 0x3B	; 59
    1698:	b0 e0       	ldi	r27, 0x00	; 0
    169a:	eb e3       	ldi	r30, 0x3B	; 59
    169c:	f0 e0       	ldi	r31, 0x00	; 0
    169e:	80 81       	ld	r24, Z
    16a0:	82 60       	ori	r24, 0x02	; 2
    16a2:	8c 93       	st	X, r24
								SET_BIT(PORTA, DIO_PIN2);
    16a4:	ab e3       	ldi	r26, 0x3B	; 59
    16a6:	b0 e0       	ldi	r27, 0x00	; 0
    16a8:	eb e3       	ldi	r30, 0x3B	; 59
    16aa:	f0 e0       	ldi	r31, 0x00	; 0
    16ac:	80 81       	ld	r24, Z
    16ae:	84 60       	ori	r24, 0x04	; 4
    16b0:	8c 93       	st	X, r24
								SET_BIT(PORTA, DIO_PIN3);
    16b2:	ab e3       	ldi	r26, 0x3B	; 59
    16b4:	b0 e0       	ldi	r27, 0x00	; 0
    16b6:	eb e3       	ldi	r30, 0x3B	; 59
    16b8:	f0 e0       	ldi	r31, 0x00	; 0
    16ba:	80 81       	ld	r24, Z
    16bc:	88 60       	ori	r24, 0x08	; 8
    16be:	8c 93       	st	X, r24
								SET_BIT(PORTA, DIO_PIN4);
    16c0:	ab e3       	ldi	r26, 0x3B	; 59
    16c2:	b0 e0       	ldi	r27, 0x00	; 0
    16c4:	eb e3       	ldi	r30, 0x3B	; 59
    16c6:	f0 e0       	ldi	r31, 0x00	; 0
    16c8:	80 81       	ld	r24, Z
    16ca:	80 61       	ori	r24, 0x10	; 16
    16cc:	8c 93       	st	X, r24
								SET_BIT(PORTA, DIO_PIN5);
    16ce:	ab e3       	ldi	r26, 0x3B	; 59
    16d0:	b0 e0       	ldi	r27, 0x00	; 0
    16d2:	eb e3       	ldi	r30, 0x3B	; 59
    16d4:	f0 e0       	ldi	r31, 0x00	; 0
    16d6:	80 81       	ld	r24, Z
    16d8:	80 62       	ori	r24, 0x20	; 32
    16da:	8c 93       	st	X, r24
								SET_BIT(PORTA, DIO_PIN6);
    16dc:	ab e3       	ldi	r26, 0x3B	; 59
    16de:	b0 e0       	ldi	r27, 0x00	; 0
    16e0:	eb e3       	ldi	r30, 0x3B	; 59
    16e2:	f0 e0       	ldi	r31, 0x00	; 0
    16e4:	80 81       	ld	r24, Z
    16e6:	80 64       	ori	r24, 0x40	; 64
    16e8:	8c 93       	st	X, r24
								SET_BIT(PORTA, DIO_PIN7);break;
    16ea:	ab e3       	ldi	r26, 0x3B	; 59
    16ec:	b0 e0       	ldi	r27, 0x00	; 0
    16ee:	eb e3       	ldi	r30, 0x3B	; 59
    16f0:	f0 e0       	ldi	r31, 0x00	; 0
    16f2:	80 81       	ld	r24, Z
    16f4:	80 68       	ori	r24, 0x80	; 128
    16f6:	8c 93       	st	X, r24
    16f8:	bc c1       	rjmp	.+888    	; 0x1a72 <DIO_enumSetPortValue+0x45a>


				case DIO_PORTB: SET_BIT(PORTB, DIO_PIN0);
    16fa:	a8 e3       	ldi	r26, 0x38	; 56
    16fc:	b0 e0       	ldi	r27, 0x00	; 0
    16fe:	e8 e3       	ldi	r30, 0x38	; 56
    1700:	f0 e0       	ldi	r31, 0x00	; 0
    1702:	80 81       	ld	r24, Z
    1704:	81 60       	ori	r24, 0x01	; 1
    1706:	8c 93       	st	X, r24
								SET_BIT(PORTB, DIO_PIN1);
    1708:	a8 e3       	ldi	r26, 0x38	; 56
    170a:	b0 e0       	ldi	r27, 0x00	; 0
    170c:	e8 e3       	ldi	r30, 0x38	; 56
    170e:	f0 e0       	ldi	r31, 0x00	; 0
    1710:	80 81       	ld	r24, Z
    1712:	82 60       	ori	r24, 0x02	; 2
    1714:	8c 93       	st	X, r24
								SET_BIT(PORTB, DIO_PIN2);
    1716:	a8 e3       	ldi	r26, 0x38	; 56
    1718:	b0 e0       	ldi	r27, 0x00	; 0
    171a:	e8 e3       	ldi	r30, 0x38	; 56
    171c:	f0 e0       	ldi	r31, 0x00	; 0
    171e:	80 81       	ld	r24, Z
    1720:	84 60       	ori	r24, 0x04	; 4
    1722:	8c 93       	st	X, r24
								SET_BIT(PORTB, DIO_PIN3);
    1724:	a8 e3       	ldi	r26, 0x38	; 56
    1726:	b0 e0       	ldi	r27, 0x00	; 0
    1728:	e8 e3       	ldi	r30, 0x38	; 56
    172a:	f0 e0       	ldi	r31, 0x00	; 0
    172c:	80 81       	ld	r24, Z
    172e:	88 60       	ori	r24, 0x08	; 8
    1730:	8c 93       	st	X, r24
								SET_BIT(PORTB, DIO_PIN4);
    1732:	a8 e3       	ldi	r26, 0x38	; 56
    1734:	b0 e0       	ldi	r27, 0x00	; 0
    1736:	e8 e3       	ldi	r30, 0x38	; 56
    1738:	f0 e0       	ldi	r31, 0x00	; 0
    173a:	80 81       	ld	r24, Z
    173c:	80 61       	ori	r24, 0x10	; 16
    173e:	8c 93       	st	X, r24
								SET_BIT(PORTB, DIO_PIN5);
    1740:	a8 e3       	ldi	r26, 0x38	; 56
    1742:	b0 e0       	ldi	r27, 0x00	; 0
    1744:	e8 e3       	ldi	r30, 0x38	; 56
    1746:	f0 e0       	ldi	r31, 0x00	; 0
    1748:	80 81       	ld	r24, Z
    174a:	80 62       	ori	r24, 0x20	; 32
    174c:	8c 93       	st	X, r24
								SET_BIT(PORTB, DIO_PIN6);
    174e:	a8 e3       	ldi	r26, 0x38	; 56
    1750:	b0 e0       	ldi	r27, 0x00	; 0
    1752:	e8 e3       	ldi	r30, 0x38	; 56
    1754:	f0 e0       	ldi	r31, 0x00	; 0
    1756:	80 81       	ld	r24, Z
    1758:	80 64       	ori	r24, 0x40	; 64
    175a:	8c 93       	st	X, r24
								SET_BIT(PORTB, DIO_PIN7);break;
    175c:	a8 e3       	ldi	r26, 0x38	; 56
    175e:	b0 e0       	ldi	r27, 0x00	; 0
    1760:	e8 e3       	ldi	r30, 0x38	; 56
    1762:	f0 e0       	ldi	r31, 0x00	; 0
    1764:	80 81       	ld	r24, Z
    1766:	80 68       	ori	r24, 0x80	; 128
    1768:	8c 93       	st	X, r24
    176a:	83 c1       	rjmp	.+774    	; 0x1a72 <DIO_enumSetPortValue+0x45a>


				case DIO_PORTC: SET_BIT(PORTC, DIO_PIN0);
    176c:	a5 e3       	ldi	r26, 0x35	; 53
    176e:	b0 e0       	ldi	r27, 0x00	; 0
    1770:	e5 e3       	ldi	r30, 0x35	; 53
    1772:	f0 e0       	ldi	r31, 0x00	; 0
    1774:	80 81       	ld	r24, Z
    1776:	81 60       	ori	r24, 0x01	; 1
    1778:	8c 93       	st	X, r24
								SET_BIT(PORTC, DIO_PIN1);
    177a:	a5 e3       	ldi	r26, 0x35	; 53
    177c:	b0 e0       	ldi	r27, 0x00	; 0
    177e:	e5 e3       	ldi	r30, 0x35	; 53
    1780:	f0 e0       	ldi	r31, 0x00	; 0
    1782:	80 81       	ld	r24, Z
    1784:	82 60       	ori	r24, 0x02	; 2
    1786:	8c 93       	st	X, r24
								SET_BIT(PORTC, DIO_PIN2);
    1788:	a5 e3       	ldi	r26, 0x35	; 53
    178a:	b0 e0       	ldi	r27, 0x00	; 0
    178c:	e5 e3       	ldi	r30, 0x35	; 53
    178e:	f0 e0       	ldi	r31, 0x00	; 0
    1790:	80 81       	ld	r24, Z
    1792:	84 60       	ori	r24, 0x04	; 4
    1794:	8c 93       	st	X, r24
								SET_BIT(PORTC, DIO_PIN3);
    1796:	a5 e3       	ldi	r26, 0x35	; 53
    1798:	b0 e0       	ldi	r27, 0x00	; 0
    179a:	e5 e3       	ldi	r30, 0x35	; 53
    179c:	f0 e0       	ldi	r31, 0x00	; 0
    179e:	80 81       	ld	r24, Z
    17a0:	88 60       	ori	r24, 0x08	; 8
    17a2:	8c 93       	st	X, r24
								SET_BIT(PORTC, DIO_PIN4);
    17a4:	a5 e3       	ldi	r26, 0x35	; 53
    17a6:	b0 e0       	ldi	r27, 0x00	; 0
    17a8:	e5 e3       	ldi	r30, 0x35	; 53
    17aa:	f0 e0       	ldi	r31, 0x00	; 0
    17ac:	80 81       	ld	r24, Z
    17ae:	80 61       	ori	r24, 0x10	; 16
    17b0:	8c 93       	st	X, r24
								SET_BIT(PORTC, DIO_PIN5);
    17b2:	a5 e3       	ldi	r26, 0x35	; 53
    17b4:	b0 e0       	ldi	r27, 0x00	; 0
    17b6:	e5 e3       	ldi	r30, 0x35	; 53
    17b8:	f0 e0       	ldi	r31, 0x00	; 0
    17ba:	80 81       	ld	r24, Z
    17bc:	80 62       	ori	r24, 0x20	; 32
    17be:	8c 93       	st	X, r24
								SET_BIT(PORTC, DIO_PIN6);
    17c0:	a5 e3       	ldi	r26, 0x35	; 53
    17c2:	b0 e0       	ldi	r27, 0x00	; 0
    17c4:	e5 e3       	ldi	r30, 0x35	; 53
    17c6:	f0 e0       	ldi	r31, 0x00	; 0
    17c8:	80 81       	ld	r24, Z
    17ca:	80 64       	ori	r24, 0x40	; 64
    17cc:	8c 93       	st	X, r24
								SET_BIT(PORTC, DIO_PIN7);break;
    17ce:	a5 e3       	ldi	r26, 0x35	; 53
    17d0:	b0 e0       	ldi	r27, 0x00	; 0
    17d2:	e5 e3       	ldi	r30, 0x35	; 53
    17d4:	f0 e0       	ldi	r31, 0x00	; 0
    17d6:	80 81       	ld	r24, Z
    17d8:	80 68       	ori	r24, 0x80	; 128
    17da:	8c 93       	st	X, r24
    17dc:	4a c1       	rjmp	.+660    	; 0x1a72 <DIO_enumSetPortValue+0x45a>


				case DIO_PORTD: SET_BIT(PORTD, DIO_PIN0);
    17de:	a2 e3       	ldi	r26, 0x32	; 50
    17e0:	b0 e0       	ldi	r27, 0x00	; 0
    17e2:	e2 e3       	ldi	r30, 0x32	; 50
    17e4:	f0 e0       	ldi	r31, 0x00	; 0
    17e6:	80 81       	ld	r24, Z
    17e8:	81 60       	ori	r24, 0x01	; 1
    17ea:	8c 93       	st	X, r24
								SET_BIT(PORTD, DIO_PIN1);
    17ec:	a2 e3       	ldi	r26, 0x32	; 50
    17ee:	b0 e0       	ldi	r27, 0x00	; 0
    17f0:	e2 e3       	ldi	r30, 0x32	; 50
    17f2:	f0 e0       	ldi	r31, 0x00	; 0
    17f4:	80 81       	ld	r24, Z
    17f6:	82 60       	ori	r24, 0x02	; 2
    17f8:	8c 93       	st	X, r24
								SET_BIT(PORTD, DIO_PIN2);
    17fa:	a2 e3       	ldi	r26, 0x32	; 50
    17fc:	b0 e0       	ldi	r27, 0x00	; 0
    17fe:	e2 e3       	ldi	r30, 0x32	; 50
    1800:	f0 e0       	ldi	r31, 0x00	; 0
    1802:	80 81       	ld	r24, Z
    1804:	84 60       	ori	r24, 0x04	; 4
    1806:	8c 93       	st	X, r24
								SET_BIT(PORTD, DIO_PIN3);
    1808:	a2 e3       	ldi	r26, 0x32	; 50
    180a:	b0 e0       	ldi	r27, 0x00	; 0
    180c:	e2 e3       	ldi	r30, 0x32	; 50
    180e:	f0 e0       	ldi	r31, 0x00	; 0
    1810:	80 81       	ld	r24, Z
    1812:	88 60       	ori	r24, 0x08	; 8
    1814:	8c 93       	st	X, r24
								SET_BIT(PORTD, DIO_PIN4);
    1816:	a2 e3       	ldi	r26, 0x32	; 50
    1818:	b0 e0       	ldi	r27, 0x00	; 0
    181a:	e2 e3       	ldi	r30, 0x32	; 50
    181c:	f0 e0       	ldi	r31, 0x00	; 0
    181e:	80 81       	ld	r24, Z
    1820:	80 61       	ori	r24, 0x10	; 16
    1822:	8c 93       	st	X, r24
								SET_BIT(PORTD, DIO_PIN5);
    1824:	a2 e3       	ldi	r26, 0x32	; 50
    1826:	b0 e0       	ldi	r27, 0x00	; 0
    1828:	e2 e3       	ldi	r30, 0x32	; 50
    182a:	f0 e0       	ldi	r31, 0x00	; 0
    182c:	80 81       	ld	r24, Z
    182e:	80 62       	ori	r24, 0x20	; 32
    1830:	8c 93       	st	X, r24
								SET_BIT(PORTD, DIO_PIN6);
    1832:	a2 e3       	ldi	r26, 0x32	; 50
    1834:	b0 e0       	ldi	r27, 0x00	; 0
    1836:	e2 e3       	ldi	r30, 0x32	; 50
    1838:	f0 e0       	ldi	r31, 0x00	; 0
    183a:	80 81       	ld	r24, Z
    183c:	80 64       	ori	r24, 0x40	; 64
    183e:	8c 93       	st	X, r24
								SET_BIT(PORTD, DIO_PIN7);break;
    1840:	a2 e3       	ldi	r26, 0x32	; 50
    1842:	b0 e0       	ldi	r27, 0x00	; 0
    1844:	e2 e3       	ldi	r30, 0x32	; 50
    1846:	f0 e0       	ldi	r31, 0x00	; 0
    1848:	80 81       	ld	r24, Z
    184a:	80 68       	ori	r24, 0x80	; 128
    184c:	8c 93       	st	X, r24
    184e:	11 c1       	rjmp	.+546    	; 0x1a72 <DIO_enumSetPortValue+0x45a>
				default :       LOC_enumState = DIO_NOK     ;break;
    1850:	19 82       	std	Y+1, r1	; 0x01
    1852:	0f c1       	rjmp	.+542    	; 0x1a72 <DIO_enumSetPortValue+0x45a>
			}

		}
		else if (Copy_u8Value == DIO_PIN_LOW)
    1854:	8b 81       	ldd	r24, Y+3	; 0x03
    1856:	88 23       	and	r24, r24
    1858:	09 f0       	breq	.+2      	; 0x185c <DIO_enumSetPortValue+0x244>
    185a:	08 c1       	rjmp	.+528    	; 0x1a6c <DIO_enumSetPortValue+0x454>
		{
			switch(Copy_u8PORT)
    185c:	8a 81       	ldd	r24, Y+2	; 0x02
    185e:	28 2f       	mov	r18, r24
    1860:	30 e0       	ldi	r19, 0x00	; 0
    1862:	3d 83       	std	Y+5, r19	; 0x05
    1864:	2c 83       	std	Y+4, r18	; 0x04
    1866:	8c 81       	ldd	r24, Y+4	; 0x04
    1868:	9d 81       	ldd	r25, Y+5	; 0x05
    186a:	81 30       	cpi	r24, 0x01	; 1
    186c:	91 05       	cpc	r25, r1
    186e:	09 f4       	brne	.+2      	; 0x1872 <DIO_enumSetPortValue+0x25a>
    1870:	50 c0       	rjmp	.+160    	; 0x1912 <DIO_enumSetPortValue+0x2fa>
    1872:	2c 81       	ldd	r18, Y+4	; 0x04
    1874:	3d 81       	ldd	r19, Y+5	; 0x05
    1876:	22 30       	cpi	r18, 0x02	; 2
    1878:	31 05       	cpc	r19, r1
    187a:	2c f4       	brge	.+10     	; 0x1886 <DIO_enumSetPortValue+0x26e>
    187c:	8c 81       	ldd	r24, Y+4	; 0x04
    187e:	9d 81       	ldd	r25, Y+5	; 0x05
    1880:	00 97       	sbiw	r24, 0x00	; 0
    1882:	71 f0       	breq	.+28     	; 0x18a0 <DIO_enumSetPortValue+0x288>
    1884:	f1 c0       	rjmp	.+482    	; 0x1a68 <DIO_enumSetPortValue+0x450>
    1886:	2c 81       	ldd	r18, Y+4	; 0x04
    1888:	3d 81       	ldd	r19, Y+5	; 0x05
    188a:	22 30       	cpi	r18, 0x02	; 2
    188c:	31 05       	cpc	r19, r1
    188e:	09 f4       	brne	.+2      	; 0x1892 <DIO_enumSetPortValue+0x27a>
    1890:	79 c0       	rjmp	.+242    	; 0x1984 <DIO_enumSetPortValue+0x36c>
    1892:	8c 81       	ldd	r24, Y+4	; 0x04
    1894:	9d 81       	ldd	r25, Y+5	; 0x05
    1896:	83 30       	cpi	r24, 0x03	; 3
    1898:	91 05       	cpc	r25, r1
    189a:	09 f4       	brne	.+2      	; 0x189e <DIO_enumSetPortValue+0x286>
    189c:	ac c0       	rjmp	.+344    	; 0x19f6 <DIO_enumSetPortValue+0x3de>
    189e:	e4 c0       	rjmp	.+456    	; 0x1a68 <DIO_enumSetPortValue+0x450>
			{
				case DIO_PORTA: CLR_BIT(PORTA, DIO_PIN0);
    18a0:	ab e3       	ldi	r26, 0x3B	; 59
    18a2:	b0 e0       	ldi	r27, 0x00	; 0
    18a4:	eb e3       	ldi	r30, 0x3B	; 59
    18a6:	f0 e0       	ldi	r31, 0x00	; 0
    18a8:	80 81       	ld	r24, Z
    18aa:	8e 7f       	andi	r24, 0xFE	; 254
    18ac:	8c 93       	st	X, r24
								CLR_BIT(PORTA, DIO_PIN1);
    18ae:	ab e3       	ldi	r26, 0x3B	; 59
    18b0:	b0 e0       	ldi	r27, 0x00	; 0
    18b2:	eb e3       	ldi	r30, 0x3B	; 59
    18b4:	f0 e0       	ldi	r31, 0x00	; 0
    18b6:	80 81       	ld	r24, Z
    18b8:	8d 7f       	andi	r24, 0xFD	; 253
    18ba:	8c 93       	st	X, r24
								CLR_BIT(PORTA, DIO_PIN2);
    18bc:	ab e3       	ldi	r26, 0x3B	; 59
    18be:	b0 e0       	ldi	r27, 0x00	; 0
    18c0:	eb e3       	ldi	r30, 0x3B	; 59
    18c2:	f0 e0       	ldi	r31, 0x00	; 0
    18c4:	80 81       	ld	r24, Z
    18c6:	8b 7f       	andi	r24, 0xFB	; 251
    18c8:	8c 93       	st	X, r24
								CLR_BIT(PORTA, DIO_PIN3);
    18ca:	ab e3       	ldi	r26, 0x3B	; 59
    18cc:	b0 e0       	ldi	r27, 0x00	; 0
    18ce:	eb e3       	ldi	r30, 0x3B	; 59
    18d0:	f0 e0       	ldi	r31, 0x00	; 0
    18d2:	80 81       	ld	r24, Z
    18d4:	87 7f       	andi	r24, 0xF7	; 247
    18d6:	8c 93       	st	X, r24
								CLR_BIT(PORTA, DIO_PIN4);
    18d8:	ab e3       	ldi	r26, 0x3B	; 59
    18da:	b0 e0       	ldi	r27, 0x00	; 0
    18dc:	eb e3       	ldi	r30, 0x3B	; 59
    18de:	f0 e0       	ldi	r31, 0x00	; 0
    18e0:	80 81       	ld	r24, Z
    18e2:	8f 7e       	andi	r24, 0xEF	; 239
    18e4:	8c 93       	st	X, r24
								CLR_BIT(PORTA, DIO_PIN5);
    18e6:	ab e3       	ldi	r26, 0x3B	; 59
    18e8:	b0 e0       	ldi	r27, 0x00	; 0
    18ea:	eb e3       	ldi	r30, 0x3B	; 59
    18ec:	f0 e0       	ldi	r31, 0x00	; 0
    18ee:	80 81       	ld	r24, Z
    18f0:	8f 7d       	andi	r24, 0xDF	; 223
    18f2:	8c 93       	st	X, r24
								CLR_BIT(PORTA, DIO_PIN6);
    18f4:	ab e3       	ldi	r26, 0x3B	; 59
    18f6:	b0 e0       	ldi	r27, 0x00	; 0
    18f8:	eb e3       	ldi	r30, 0x3B	; 59
    18fa:	f0 e0       	ldi	r31, 0x00	; 0
    18fc:	80 81       	ld	r24, Z
    18fe:	8f 7b       	andi	r24, 0xBF	; 191
    1900:	8c 93       	st	X, r24
								CLR_BIT(PORTA, DIO_PIN7);break;
    1902:	ab e3       	ldi	r26, 0x3B	; 59
    1904:	b0 e0       	ldi	r27, 0x00	; 0
    1906:	eb e3       	ldi	r30, 0x3B	; 59
    1908:	f0 e0       	ldi	r31, 0x00	; 0
    190a:	80 81       	ld	r24, Z
    190c:	8f 77       	andi	r24, 0x7F	; 127
    190e:	8c 93       	st	X, r24
    1910:	b0 c0       	rjmp	.+352    	; 0x1a72 <DIO_enumSetPortValue+0x45a>


				case DIO_PORTB: CLR_BIT(PORTB, DIO_PIN0);
    1912:	a8 e3       	ldi	r26, 0x38	; 56
    1914:	b0 e0       	ldi	r27, 0x00	; 0
    1916:	e8 e3       	ldi	r30, 0x38	; 56
    1918:	f0 e0       	ldi	r31, 0x00	; 0
    191a:	80 81       	ld	r24, Z
    191c:	8e 7f       	andi	r24, 0xFE	; 254
    191e:	8c 93       	st	X, r24
								CLR_BIT(PORTB, DIO_PIN1);
    1920:	a8 e3       	ldi	r26, 0x38	; 56
    1922:	b0 e0       	ldi	r27, 0x00	; 0
    1924:	e8 e3       	ldi	r30, 0x38	; 56
    1926:	f0 e0       	ldi	r31, 0x00	; 0
    1928:	80 81       	ld	r24, Z
    192a:	8d 7f       	andi	r24, 0xFD	; 253
    192c:	8c 93       	st	X, r24
								CLR_BIT(PORTB, DIO_PIN2);
    192e:	a8 e3       	ldi	r26, 0x38	; 56
    1930:	b0 e0       	ldi	r27, 0x00	; 0
    1932:	e8 e3       	ldi	r30, 0x38	; 56
    1934:	f0 e0       	ldi	r31, 0x00	; 0
    1936:	80 81       	ld	r24, Z
    1938:	8b 7f       	andi	r24, 0xFB	; 251
    193a:	8c 93       	st	X, r24
								CLR_BIT(PORTB, DIO_PIN3);
    193c:	a8 e3       	ldi	r26, 0x38	; 56
    193e:	b0 e0       	ldi	r27, 0x00	; 0
    1940:	e8 e3       	ldi	r30, 0x38	; 56
    1942:	f0 e0       	ldi	r31, 0x00	; 0
    1944:	80 81       	ld	r24, Z
    1946:	87 7f       	andi	r24, 0xF7	; 247
    1948:	8c 93       	st	X, r24
								CLR_BIT(PORTB, DIO_PIN4);
    194a:	a8 e3       	ldi	r26, 0x38	; 56
    194c:	b0 e0       	ldi	r27, 0x00	; 0
    194e:	e8 e3       	ldi	r30, 0x38	; 56
    1950:	f0 e0       	ldi	r31, 0x00	; 0
    1952:	80 81       	ld	r24, Z
    1954:	8f 7e       	andi	r24, 0xEF	; 239
    1956:	8c 93       	st	X, r24
								CLR_BIT(PORTB, DIO_PIN5);
    1958:	a8 e3       	ldi	r26, 0x38	; 56
    195a:	b0 e0       	ldi	r27, 0x00	; 0
    195c:	e8 e3       	ldi	r30, 0x38	; 56
    195e:	f0 e0       	ldi	r31, 0x00	; 0
    1960:	80 81       	ld	r24, Z
    1962:	8f 7d       	andi	r24, 0xDF	; 223
    1964:	8c 93       	st	X, r24
								CLR_BIT(PORTB, DIO_PIN6);
    1966:	a8 e3       	ldi	r26, 0x38	; 56
    1968:	b0 e0       	ldi	r27, 0x00	; 0
    196a:	e8 e3       	ldi	r30, 0x38	; 56
    196c:	f0 e0       	ldi	r31, 0x00	; 0
    196e:	80 81       	ld	r24, Z
    1970:	8f 7b       	andi	r24, 0xBF	; 191
    1972:	8c 93       	st	X, r24
								CLR_BIT(PORTB, DIO_PIN7);break;
    1974:	a8 e3       	ldi	r26, 0x38	; 56
    1976:	b0 e0       	ldi	r27, 0x00	; 0
    1978:	e8 e3       	ldi	r30, 0x38	; 56
    197a:	f0 e0       	ldi	r31, 0x00	; 0
    197c:	80 81       	ld	r24, Z
    197e:	8f 77       	andi	r24, 0x7F	; 127
    1980:	8c 93       	st	X, r24
    1982:	77 c0       	rjmp	.+238    	; 0x1a72 <DIO_enumSetPortValue+0x45a>


				case DIO_PORTC: CLR_BIT(PORTC, DIO_PIN0);
    1984:	a5 e3       	ldi	r26, 0x35	; 53
    1986:	b0 e0       	ldi	r27, 0x00	; 0
    1988:	e5 e3       	ldi	r30, 0x35	; 53
    198a:	f0 e0       	ldi	r31, 0x00	; 0
    198c:	80 81       	ld	r24, Z
    198e:	8e 7f       	andi	r24, 0xFE	; 254
    1990:	8c 93       	st	X, r24
								CLR_BIT(PORTC, DIO_PIN1);
    1992:	a5 e3       	ldi	r26, 0x35	; 53
    1994:	b0 e0       	ldi	r27, 0x00	; 0
    1996:	e5 e3       	ldi	r30, 0x35	; 53
    1998:	f0 e0       	ldi	r31, 0x00	; 0
    199a:	80 81       	ld	r24, Z
    199c:	8d 7f       	andi	r24, 0xFD	; 253
    199e:	8c 93       	st	X, r24
								CLR_BIT(PORTC, DIO_PIN2);
    19a0:	a5 e3       	ldi	r26, 0x35	; 53
    19a2:	b0 e0       	ldi	r27, 0x00	; 0
    19a4:	e5 e3       	ldi	r30, 0x35	; 53
    19a6:	f0 e0       	ldi	r31, 0x00	; 0
    19a8:	80 81       	ld	r24, Z
    19aa:	8b 7f       	andi	r24, 0xFB	; 251
    19ac:	8c 93       	st	X, r24
								CLR_BIT(PORTC, DIO_PIN3);
    19ae:	a5 e3       	ldi	r26, 0x35	; 53
    19b0:	b0 e0       	ldi	r27, 0x00	; 0
    19b2:	e5 e3       	ldi	r30, 0x35	; 53
    19b4:	f0 e0       	ldi	r31, 0x00	; 0
    19b6:	80 81       	ld	r24, Z
    19b8:	87 7f       	andi	r24, 0xF7	; 247
    19ba:	8c 93       	st	X, r24
								CLR_BIT(PORTC, DIO_PIN4);
    19bc:	a5 e3       	ldi	r26, 0x35	; 53
    19be:	b0 e0       	ldi	r27, 0x00	; 0
    19c0:	e5 e3       	ldi	r30, 0x35	; 53
    19c2:	f0 e0       	ldi	r31, 0x00	; 0
    19c4:	80 81       	ld	r24, Z
    19c6:	8f 7e       	andi	r24, 0xEF	; 239
    19c8:	8c 93       	st	X, r24
								CLR_BIT(PORTC, DIO_PIN5);
    19ca:	a5 e3       	ldi	r26, 0x35	; 53
    19cc:	b0 e0       	ldi	r27, 0x00	; 0
    19ce:	e5 e3       	ldi	r30, 0x35	; 53
    19d0:	f0 e0       	ldi	r31, 0x00	; 0
    19d2:	80 81       	ld	r24, Z
    19d4:	8f 7d       	andi	r24, 0xDF	; 223
    19d6:	8c 93       	st	X, r24
								CLR_BIT(PORTC, DIO_PIN6);
    19d8:	a5 e3       	ldi	r26, 0x35	; 53
    19da:	b0 e0       	ldi	r27, 0x00	; 0
    19dc:	e5 e3       	ldi	r30, 0x35	; 53
    19de:	f0 e0       	ldi	r31, 0x00	; 0
    19e0:	80 81       	ld	r24, Z
    19e2:	8f 7b       	andi	r24, 0xBF	; 191
    19e4:	8c 93       	st	X, r24
								CLR_BIT(PORTC, DIO_PIN7);break;
    19e6:	a5 e3       	ldi	r26, 0x35	; 53
    19e8:	b0 e0       	ldi	r27, 0x00	; 0
    19ea:	e5 e3       	ldi	r30, 0x35	; 53
    19ec:	f0 e0       	ldi	r31, 0x00	; 0
    19ee:	80 81       	ld	r24, Z
    19f0:	8f 77       	andi	r24, 0x7F	; 127
    19f2:	8c 93       	st	X, r24
    19f4:	3e c0       	rjmp	.+124    	; 0x1a72 <DIO_enumSetPortValue+0x45a>


				case DIO_PORTD: CLR_BIT(PORTD, DIO_PIN0);
    19f6:	a2 e3       	ldi	r26, 0x32	; 50
    19f8:	b0 e0       	ldi	r27, 0x00	; 0
    19fa:	e2 e3       	ldi	r30, 0x32	; 50
    19fc:	f0 e0       	ldi	r31, 0x00	; 0
    19fe:	80 81       	ld	r24, Z
    1a00:	8e 7f       	andi	r24, 0xFE	; 254
    1a02:	8c 93       	st	X, r24
								CLR_BIT(PORTD, DIO_PIN1);
    1a04:	a2 e3       	ldi	r26, 0x32	; 50
    1a06:	b0 e0       	ldi	r27, 0x00	; 0
    1a08:	e2 e3       	ldi	r30, 0x32	; 50
    1a0a:	f0 e0       	ldi	r31, 0x00	; 0
    1a0c:	80 81       	ld	r24, Z
    1a0e:	8d 7f       	andi	r24, 0xFD	; 253
    1a10:	8c 93       	st	X, r24
								CLR_BIT(PORTD, DIO_PIN2);
    1a12:	a2 e3       	ldi	r26, 0x32	; 50
    1a14:	b0 e0       	ldi	r27, 0x00	; 0
    1a16:	e2 e3       	ldi	r30, 0x32	; 50
    1a18:	f0 e0       	ldi	r31, 0x00	; 0
    1a1a:	80 81       	ld	r24, Z
    1a1c:	8b 7f       	andi	r24, 0xFB	; 251
    1a1e:	8c 93       	st	X, r24
								CLR_BIT(PORTD, DIO_PIN3);
    1a20:	a2 e3       	ldi	r26, 0x32	; 50
    1a22:	b0 e0       	ldi	r27, 0x00	; 0
    1a24:	e2 e3       	ldi	r30, 0x32	; 50
    1a26:	f0 e0       	ldi	r31, 0x00	; 0
    1a28:	80 81       	ld	r24, Z
    1a2a:	87 7f       	andi	r24, 0xF7	; 247
    1a2c:	8c 93       	st	X, r24
								CLR_BIT(PORTD, DIO_PIN4);
    1a2e:	a2 e3       	ldi	r26, 0x32	; 50
    1a30:	b0 e0       	ldi	r27, 0x00	; 0
    1a32:	e2 e3       	ldi	r30, 0x32	; 50
    1a34:	f0 e0       	ldi	r31, 0x00	; 0
    1a36:	80 81       	ld	r24, Z
    1a38:	8f 7e       	andi	r24, 0xEF	; 239
    1a3a:	8c 93       	st	X, r24
								CLR_BIT(PORTD, DIO_PIN5);
    1a3c:	a2 e3       	ldi	r26, 0x32	; 50
    1a3e:	b0 e0       	ldi	r27, 0x00	; 0
    1a40:	e2 e3       	ldi	r30, 0x32	; 50
    1a42:	f0 e0       	ldi	r31, 0x00	; 0
    1a44:	80 81       	ld	r24, Z
    1a46:	8f 7d       	andi	r24, 0xDF	; 223
    1a48:	8c 93       	st	X, r24
								CLR_BIT(PORTD, DIO_PIN6);
    1a4a:	a2 e3       	ldi	r26, 0x32	; 50
    1a4c:	b0 e0       	ldi	r27, 0x00	; 0
    1a4e:	e2 e3       	ldi	r30, 0x32	; 50
    1a50:	f0 e0       	ldi	r31, 0x00	; 0
    1a52:	80 81       	ld	r24, Z
    1a54:	8f 7b       	andi	r24, 0xBF	; 191
    1a56:	8c 93       	st	X, r24
								CLR_BIT(PORTD, DIO_PIN7);break;
    1a58:	a2 e3       	ldi	r26, 0x32	; 50
    1a5a:	b0 e0       	ldi	r27, 0x00	; 0
    1a5c:	e2 e3       	ldi	r30, 0x32	; 50
    1a5e:	f0 e0       	ldi	r31, 0x00	; 0
    1a60:	80 81       	ld	r24, Z
    1a62:	8f 77       	andi	r24, 0x7F	; 127
    1a64:	8c 93       	st	X, r24
    1a66:	05 c0       	rjmp	.+10     	; 0x1a72 <DIO_enumSetPortValue+0x45a>
				default :       LOC_enumState = DIO_NOK     ;break;
    1a68:	19 82       	std	Y+1, r1	; 0x01
    1a6a:	03 c0       	rjmp	.+6      	; 0x1a72 <DIO_enumSetPortValue+0x45a>
			}
		}
		else
		{
			LOC_enumState = DIO_NOK;
    1a6c:	19 82       	std	Y+1, r1	; 0x01
    1a6e:	01 c0       	rjmp	.+2      	; 0x1a72 <DIO_enumSetPortValue+0x45a>


	}
	else
	{
		LOC_enumState = DIO_NOK;
    1a70:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState;
    1a72:	89 81       	ldd	r24, Y+1	; 0x01
}
    1a74:	27 96       	adiw	r28, 0x07	; 7
    1a76:	0f b6       	in	r0, 0x3f	; 63
    1a78:	f8 94       	cli
    1a7a:	de bf       	out	0x3e, r29	; 62
    1a7c:	0f be       	out	0x3f, r0	; 63
    1a7e:	cd bf       	out	0x3d, r28	; 61
    1a80:	cf 91       	pop	r28
    1a82:	df 91       	pop	r29
    1a84:	08 95       	ret

00001a86 <DIO_enumGetPortValue>:



/*------------------------------------------------------------------------------------------------------*/
DIO_ErrorStatus   DIO_enumGetPortValue         (u8 Copy_u8PORT , u8 *Copy_PortPtrData                   ){
    1a86:	df 93       	push	r29
    1a88:	cf 93       	push	r28
    1a8a:	cd b7       	in	r28, 0x3d	; 61
    1a8c:	de b7       	in	r29, 0x3e	; 62
    1a8e:	2e 97       	sbiw	r28, 0x0e	; 14
    1a90:	0f b6       	in	r0, 0x3f	; 63
    1a92:	f8 94       	cli
    1a94:	de bf       	out	0x3e, r29	; 62
    1a96:	0f be       	out	0x3f, r0	; 63
    1a98:	cd bf       	out	0x3d, r28	; 61
    1a9a:	8a 87       	std	Y+10, r24	; 0x0a
    1a9c:	7c 87       	std	Y+12, r23	; 0x0c
    1a9e:	6b 87       	std	Y+11, r22	; 0x0b
	DIO_ErrorStatus LOC_enumState = DIO_OK;
    1aa0:	81 e0       	ldi	r24, 0x01	; 1
    1aa2:	89 87       	std	Y+9, r24	; 0x09
	if(Copy_u8PORT <= DIO_PORTD)
    1aa4:	8a 85       	ldd	r24, Y+10	; 0x0a
    1aa6:	84 30       	cpi	r24, 0x04	; 4
    1aa8:	08 f0       	brcs	.+2      	; 0x1aac <DIO_enumGetPortValue+0x26>
    1aaa:	26 c1       	rjmp	.+588    	; 0x1cf8 <DIO_enumGetPortValue+0x272>
	{
		u8 Local_u8status_PIN0 = 0;
    1aac:	18 86       	std	Y+8, r1	; 0x08
		u8 Local_u8status_PIN1 = 0;
    1aae:	1f 82       	std	Y+7, r1	; 0x07
		u8 Local_u8status_PIN2 = 0;
    1ab0:	1e 82       	std	Y+6, r1	; 0x06
		u8 Local_u8status_PIN3 = 0;
    1ab2:	1d 82       	std	Y+5, r1	; 0x05
		u8 Local_u8status_PIN4 = 0;
    1ab4:	1c 82       	std	Y+4, r1	; 0x04
		u8 Local_u8status_PIN5 = 0;
    1ab6:	1b 82       	std	Y+3, r1	; 0x03
		u8 Local_u8status_PIN6 = 0;
    1ab8:	1a 82       	std	Y+2, r1	; 0x02
		u8 Local_u8status_PIN7 = 0;
    1aba:	19 82       	std	Y+1, r1	; 0x01
		switch(Copy_u8PORT)
    1abc:	8a 85       	ldd	r24, Y+10	; 0x0a
    1abe:	28 2f       	mov	r18, r24
    1ac0:	30 e0       	ldi	r19, 0x00	; 0
    1ac2:	3e 87       	std	Y+14, r19	; 0x0e
    1ac4:	2d 87       	std	Y+13, r18	; 0x0d
    1ac6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ac8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1aca:	81 30       	cpi	r24, 0x01	; 1
    1acc:	91 05       	cpc	r25, r1
    1ace:	09 f4       	brne	.+2      	; 0x1ad2 <DIO_enumGetPortValue+0x4c>
    1ad0:	51 c0       	rjmp	.+162    	; 0x1b74 <DIO_enumGetPortValue+0xee>
    1ad2:	2d 85       	ldd	r18, Y+13	; 0x0d
    1ad4:	3e 85       	ldd	r19, Y+14	; 0x0e
    1ad6:	22 30       	cpi	r18, 0x02	; 2
    1ad8:	31 05       	cpc	r19, r1
    1ada:	2c f4       	brge	.+10     	; 0x1ae6 <DIO_enumGetPortValue+0x60>
    1adc:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ade:	9e 85       	ldd	r25, Y+14	; 0x0e
    1ae0:	00 97       	sbiw	r24, 0x00	; 0
    1ae2:	71 f0       	breq	.+28     	; 0x1b00 <DIO_enumGetPortValue+0x7a>
    1ae4:	f5 c0       	rjmp	.+490    	; 0x1cd0 <DIO_enumGetPortValue+0x24a>
    1ae6:	2d 85       	ldd	r18, Y+13	; 0x0d
    1ae8:	3e 85       	ldd	r19, Y+14	; 0x0e
    1aea:	22 30       	cpi	r18, 0x02	; 2
    1aec:	31 05       	cpc	r19, r1
    1aee:	09 f4       	brne	.+2      	; 0x1af2 <DIO_enumGetPortValue+0x6c>
    1af0:	7b c0       	rjmp	.+246    	; 0x1be8 <DIO_enumGetPortValue+0x162>
    1af2:	8d 85       	ldd	r24, Y+13	; 0x0d
    1af4:	9e 85       	ldd	r25, Y+14	; 0x0e
    1af6:	83 30       	cpi	r24, 0x03	; 3
    1af8:	91 05       	cpc	r25, r1
    1afa:	09 f4       	brne	.+2      	; 0x1afe <DIO_enumGetPortValue+0x78>
    1afc:	af c0       	rjmp	.+350    	; 0x1c5c <DIO_enumGetPortValue+0x1d6>
    1afe:	e8 c0       	rjmp	.+464    	; 0x1cd0 <DIO_enumGetPortValue+0x24a>
			{
				case DIO_PORTA: Local_u8status_PIN0 = GET_BIT(PINA, DIO_PIN0);
    1b00:	e9 e3       	ldi	r30, 0x39	; 57
    1b02:	f0 e0       	ldi	r31, 0x00	; 0
    1b04:	80 81       	ld	r24, Z
    1b06:	81 70       	andi	r24, 0x01	; 1
    1b08:	88 87       	std	Y+8, r24	; 0x08
								Local_u8status_PIN1 = GET_BIT(PINA, DIO_PIN1);
    1b0a:	e9 e3       	ldi	r30, 0x39	; 57
    1b0c:	f0 e0       	ldi	r31, 0x00	; 0
    1b0e:	80 81       	ld	r24, Z
    1b10:	86 95       	lsr	r24
    1b12:	81 70       	andi	r24, 0x01	; 1
    1b14:	8f 83       	std	Y+7, r24	; 0x07
								Local_u8status_PIN2 = GET_BIT(PINA, DIO_PIN2);
    1b16:	e9 e3       	ldi	r30, 0x39	; 57
    1b18:	f0 e0       	ldi	r31, 0x00	; 0
    1b1a:	80 81       	ld	r24, Z
    1b1c:	86 95       	lsr	r24
    1b1e:	86 95       	lsr	r24
    1b20:	81 70       	andi	r24, 0x01	; 1
    1b22:	8e 83       	std	Y+6, r24	; 0x06
								Local_u8status_PIN3 = GET_BIT(PINA, DIO_PIN3);
    1b24:	e9 e3       	ldi	r30, 0x39	; 57
    1b26:	f0 e0       	ldi	r31, 0x00	; 0
    1b28:	80 81       	ld	r24, Z
    1b2a:	86 95       	lsr	r24
    1b2c:	86 95       	lsr	r24
    1b2e:	86 95       	lsr	r24
    1b30:	81 70       	andi	r24, 0x01	; 1
    1b32:	8d 83       	std	Y+5, r24	; 0x05
								Local_u8status_PIN4 = GET_BIT(PINA, DIO_PIN4);
    1b34:	e9 e3       	ldi	r30, 0x39	; 57
    1b36:	f0 e0       	ldi	r31, 0x00	; 0
    1b38:	80 81       	ld	r24, Z
    1b3a:	82 95       	swap	r24
    1b3c:	8f 70       	andi	r24, 0x0F	; 15
    1b3e:	81 70       	andi	r24, 0x01	; 1
    1b40:	8c 83       	std	Y+4, r24	; 0x04
								Local_u8status_PIN5 = GET_BIT(PINA, DIO_PIN5);
    1b42:	e9 e3       	ldi	r30, 0x39	; 57
    1b44:	f0 e0       	ldi	r31, 0x00	; 0
    1b46:	80 81       	ld	r24, Z
    1b48:	82 95       	swap	r24
    1b4a:	86 95       	lsr	r24
    1b4c:	87 70       	andi	r24, 0x07	; 7
    1b4e:	81 70       	andi	r24, 0x01	; 1
    1b50:	8b 83       	std	Y+3, r24	; 0x03
								Local_u8status_PIN6 = GET_BIT(PINA, DIO_PIN6);
    1b52:	e9 e3       	ldi	r30, 0x39	; 57
    1b54:	f0 e0       	ldi	r31, 0x00	; 0
    1b56:	80 81       	ld	r24, Z
    1b58:	82 95       	swap	r24
    1b5a:	86 95       	lsr	r24
    1b5c:	86 95       	lsr	r24
    1b5e:	83 70       	andi	r24, 0x03	; 3
    1b60:	81 70       	andi	r24, 0x01	; 1
    1b62:	8a 83       	std	Y+2, r24	; 0x02
								Local_u8status_PIN7 = GET_BIT(PINA, DIO_PIN7);break;
    1b64:	e9 e3       	ldi	r30, 0x39	; 57
    1b66:	f0 e0       	ldi	r31, 0x00	; 0
    1b68:	80 81       	ld	r24, Z
    1b6a:	88 1f       	adc	r24, r24
    1b6c:	88 27       	eor	r24, r24
    1b6e:	88 1f       	adc	r24, r24
    1b70:	89 83       	std	Y+1, r24	; 0x01
    1b72:	af c0       	rjmp	.+350    	; 0x1cd2 <DIO_enumGetPortValue+0x24c>


				case DIO_PORTB: Local_u8status_PIN0 = GET_BIT(PINB, DIO_PIN0);
    1b74:	e6 e3       	ldi	r30, 0x36	; 54
    1b76:	f0 e0       	ldi	r31, 0x00	; 0
    1b78:	80 81       	ld	r24, Z
    1b7a:	81 70       	andi	r24, 0x01	; 1
    1b7c:	88 87       	std	Y+8, r24	; 0x08
								Local_u8status_PIN1 = GET_BIT(PINB, DIO_PIN1);
    1b7e:	e6 e3       	ldi	r30, 0x36	; 54
    1b80:	f0 e0       	ldi	r31, 0x00	; 0
    1b82:	80 81       	ld	r24, Z
    1b84:	86 95       	lsr	r24
    1b86:	81 70       	andi	r24, 0x01	; 1
    1b88:	8f 83       	std	Y+7, r24	; 0x07
								Local_u8status_PIN2 = GET_BIT(PINB, DIO_PIN2);
    1b8a:	e6 e3       	ldi	r30, 0x36	; 54
    1b8c:	f0 e0       	ldi	r31, 0x00	; 0
    1b8e:	80 81       	ld	r24, Z
    1b90:	86 95       	lsr	r24
    1b92:	86 95       	lsr	r24
    1b94:	81 70       	andi	r24, 0x01	; 1
    1b96:	8e 83       	std	Y+6, r24	; 0x06
								Local_u8status_PIN3 = GET_BIT(PINB, DIO_PIN3);
    1b98:	e6 e3       	ldi	r30, 0x36	; 54
    1b9a:	f0 e0       	ldi	r31, 0x00	; 0
    1b9c:	80 81       	ld	r24, Z
    1b9e:	86 95       	lsr	r24
    1ba0:	86 95       	lsr	r24
    1ba2:	86 95       	lsr	r24
    1ba4:	81 70       	andi	r24, 0x01	; 1
    1ba6:	8d 83       	std	Y+5, r24	; 0x05
								Local_u8status_PIN4 = GET_BIT(PINB, DIO_PIN4);
    1ba8:	e6 e3       	ldi	r30, 0x36	; 54
    1baa:	f0 e0       	ldi	r31, 0x00	; 0
    1bac:	80 81       	ld	r24, Z
    1bae:	82 95       	swap	r24
    1bb0:	8f 70       	andi	r24, 0x0F	; 15
    1bb2:	81 70       	andi	r24, 0x01	; 1
    1bb4:	8c 83       	std	Y+4, r24	; 0x04
								Local_u8status_PIN5 = GET_BIT(PINB, DIO_PIN5);
    1bb6:	e6 e3       	ldi	r30, 0x36	; 54
    1bb8:	f0 e0       	ldi	r31, 0x00	; 0
    1bba:	80 81       	ld	r24, Z
    1bbc:	82 95       	swap	r24
    1bbe:	86 95       	lsr	r24
    1bc0:	87 70       	andi	r24, 0x07	; 7
    1bc2:	81 70       	andi	r24, 0x01	; 1
    1bc4:	8b 83       	std	Y+3, r24	; 0x03
								Local_u8status_PIN6 = GET_BIT(PINB, DIO_PIN6);
    1bc6:	e6 e3       	ldi	r30, 0x36	; 54
    1bc8:	f0 e0       	ldi	r31, 0x00	; 0
    1bca:	80 81       	ld	r24, Z
    1bcc:	82 95       	swap	r24
    1bce:	86 95       	lsr	r24
    1bd0:	86 95       	lsr	r24
    1bd2:	83 70       	andi	r24, 0x03	; 3
    1bd4:	81 70       	andi	r24, 0x01	; 1
    1bd6:	8a 83       	std	Y+2, r24	; 0x02
								Local_u8status_PIN7 = GET_BIT(PINB, DIO_PIN7);break;
    1bd8:	e6 e3       	ldi	r30, 0x36	; 54
    1bda:	f0 e0       	ldi	r31, 0x00	; 0
    1bdc:	80 81       	ld	r24, Z
    1bde:	88 1f       	adc	r24, r24
    1be0:	88 27       	eor	r24, r24
    1be2:	88 1f       	adc	r24, r24
    1be4:	89 83       	std	Y+1, r24	; 0x01
    1be6:	75 c0       	rjmp	.+234    	; 0x1cd2 <DIO_enumGetPortValue+0x24c>


				case DIO_PORTC: Local_u8status_PIN0 = GET_BIT(PINC, DIO_PIN0);
    1be8:	e3 e3       	ldi	r30, 0x33	; 51
    1bea:	f0 e0       	ldi	r31, 0x00	; 0
    1bec:	80 81       	ld	r24, Z
    1bee:	81 70       	andi	r24, 0x01	; 1
    1bf0:	88 87       	std	Y+8, r24	; 0x08
								Local_u8status_PIN1 = GET_BIT(PINC, DIO_PIN1);
    1bf2:	e3 e3       	ldi	r30, 0x33	; 51
    1bf4:	f0 e0       	ldi	r31, 0x00	; 0
    1bf6:	80 81       	ld	r24, Z
    1bf8:	86 95       	lsr	r24
    1bfa:	81 70       	andi	r24, 0x01	; 1
    1bfc:	8f 83       	std	Y+7, r24	; 0x07
								Local_u8status_PIN2 = GET_BIT(PINC, DIO_PIN2);
    1bfe:	e3 e3       	ldi	r30, 0x33	; 51
    1c00:	f0 e0       	ldi	r31, 0x00	; 0
    1c02:	80 81       	ld	r24, Z
    1c04:	86 95       	lsr	r24
    1c06:	86 95       	lsr	r24
    1c08:	81 70       	andi	r24, 0x01	; 1
    1c0a:	8e 83       	std	Y+6, r24	; 0x06
								Local_u8status_PIN3 = GET_BIT(PINC, DIO_PIN3);
    1c0c:	e3 e3       	ldi	r30, 0x33	; 51
    1c0e:	f0 e0       	ldi	r31, 0x00	; 0
    1c10:	80 81       	ld	r24, Z
    1c12:	86 95       	lsr	r24
    1c14:	86 95       	lsr	r24
    1c16:	86 95       	lsr	r24
    1c18:	81 70       	andi	r24, 0x01	; 1
    1c1a:	8d 83       	std	Y+5, r24	; 0x05
								Local_u8status_PIN4 = GET_BIT(PINC, DIO_PIN4);
    1c1c:	e3 e3       	ldi	r30, 0x33	; 51
    1c1e:	f0 e0       	ldi	r31, 0x00	; 0
    1c20:	80 81       	ld	r24, Z
    1c22:	82 95       	swap	r24
    1c24:	8f 70       	andi	r24, 0x0F	; 15
    1c26:	81 70       	andi	r24, 0x01	; 1
    1c28:	8c 83       	std	Y+4, r24	; 0x04
								Local_u8status_PIN5 = GET_BIT(PINC, DIO_PIN5);
    1c2a:	e3 e3       	ldi	r30, 0x33	; 51
    1c2c:	f0 e0       	ldi	r31, 0x00	; 0
    1c2e:	80 81       	ld	r24, Z
    1c30:	82 95       	swap	r24
    1c32:	86 95       	lsr	r24
    1c34:	87 70       	andi	r24, 0x07	; 7
    1c36:	81 70       	andi	r24, 0x01	; 1
    1c38:	8b 83       	std	Y+3, r24	; 0x03
								Local_u8status_PIN6 = GET_BIT(PINC, DIO_PIN6);
    1c3a:	e3 e3       	ldi	r30, 0x33	; 51
    1c3c:	f0 e0       	ldi	r31, 0x00	; 0
    1c3e:	80 81       	ld	r24, Z
    1c40:	82 95       	swap	r24
    1c42:	86 95       	lsr	r24
    1c44:	86 95       	lsr	r24
    1c46:	83 70       	andi	r24, 0x03	; 3
    1c48:	81 70       	andi	r24, 0x01	; 1
    1c4a:	8a 83       	std	Y+2, r24	; 0x02
								Local_u8status_PIN7 = GET_BIT(PINC, DIO_PIN7);break;
    1c4c:	e3 e3       	ldi	r30, 0x33	; 51
    1c4e:	f0 e0       	ldi	r31, 0x00	; 0
    1c50:	80 81       	ld	r24, Z
    1c52:	88 1f       	adc	r24, r24
    1c54:	88 27       	eor	r24, r24
    1c56:	88 1f       	adc	r24, r24
    1c58:	89 83       	std	Y+1, r24	; 0x01
    1c5a:	3b c0       	rjmp	.+118    	; 0x1cd2 <DIO_enumGetPortValue+0x24c>

				case DIO_PORTD: Local_u8status_PIN0 = GET_BIT(PIND, DIO_PIN0);
    1c5c:	e0 e3       	ldi	r30, 0x30	; 48
    1c5e:	f0 e0       	ldi	r31, 0x00	; 0
    1c60:	80 81       	ld	r24, Z
    1c62:	81 70       	andi	r24, 0x01	; 1
    1c64:	88 87       	std	Y+8, r24	; 0x08
								Local_u8status_PIN1 = GET_BIT(PIND, DIO_PIN1);
    1c66:	e0 e3       	ldi	r30, 0x30	; 48
    1c68:	f0 e0       	ldi	r31, 0x00	; 0
    1c6a:	80 81       	ld	r24, Z
    1c6c:	86 95       	lsr	r24
    1c6e:	81 70       	andi	r24, 0x01	; 1
    1c70:	8f 83       	std	Y+7, r24	; 0x07
								Local_u8status_PIN2 = GET_BIT(PIND, DIO_PIN2);
    1c72:	e0 e3       	ldi	r30, 0x30	; 48
    1c74:	f0 e0       	ldi	r31, 0x00	; 0
    1c76:	80 81       	ld	r24, Z
    1c78:	86 95       	lsr	r24
    1c7a:	86 95       	lsr	r24
    1c7c:	81 70       	andi	r24, 0x01	; 1
    1c7e:	8e 83       	std	Y+6, r24	; 0x06
								Local_u8status_PIN3 = GET_BIT(PIND, DIO_PIN3);
    1c80:	e0 e3       	ldi	r30, 0x30	; 48
    1c82:	f0 e0       	ldi	r31, 0x00	; 0
    1c84:	80 81       	ld	r24, Z
    1c86:	86 95       	lsr	r24
    1c88:	86 95       	lsr	r24
    1c8a:	86 95       	lsr	r24
    1c8c:	81 70       	andi	r24, 0x01	; 1
    1c8e:	8d 83       	std	Y+5, r24	; 0x05
								Local_u8status_PIN4 = GET_BIT(PIND, DIO_PIN4);
    1c90:	e0 e3       	ldi	r30, 0x30	; 48
    1c92:	f0 e0       	ldi	r31, 0x00	; 0
    1c94:	80 81       	ld	r24, Z
    1c96:	82 95       	swap	r24
    1c98:	8f 70       	andi	r24, 0x0F	; 15
    1c9a:	81 70       	andi	r24, 0x01	; 1
    1c9c:	8c 83       	std	Y+4, r24	; 0x04
								Local_u8status_PIN5 = GET_BIT(PIND, DIO_PIN5);
    1c9e:	e0 e3       	ldi	r30, 0x30	; 48
    1ca0:	f0 e0       	ldi	r31, 0x00	; 0
    1ca2:	80 81       	ld	r24, Z
    1ca4:	82 95       	swap	r24
    1ca6:	86 95       	lsr	r24
    1ca8:	87 70       	andi	r24, 0x07	; 7
    1caa:	81 70       	andi	r24, 0x01	; 1
    1cac:	8b 83       	std	Y+3, r24	; 0x03
								Local_u8status_PIN6 = GET_BIT(PIND, DIO_PIN6);
    1cae:	e0 e3       	ldi	r30, 0x30	; 48
    1cb0:	f0 e0       	ldi	r31, 0x00	; 0
    1cb2:	80 81       	ld	r24, Z
    1cb4:	82 95       	swap	r24
    1cb6:	86 95       	lsr	r24
    1cb8:	86 95       	lsr	r24
    1cba:	83 70       	andi	r24, 0x03	; 3
    1cbc:	81 70       	andi	r24, 0x01	; 1
    1cbe:	8a 83       	std	Y+2, r24	; 0x02
								Local_u8status_PIN7 = GET_BIT(PIND, DIO_PIN7);break;
    1cc0:	e0 e3       	ldi	r30, 0x30	; 48
    1cc2:	f0 e0       	ldi	r31, 0x00	; 0
    1cc4:	80 81       	ld	r24, Z
    1cc6:	88 1f       	adc	r24, r24
    1cc8:	88 27       	eor	r24, r24
    1cca:	88 1f       	adc	r24, r24
    1ccc:	89 83       	std	Y+1, r24	; 0x01
    1cce:	01 c0       	rjmp	.+2      	; 0x1cd2 <DIO_enumGetPortValue+0x24c>
				default :       LOC_enumState = DIO_NOK                          ;break;
    1cd0:	19 86       	std	Y+9, r1	; 0x09

			}


			*Copy_PortPtrData =   Local_u8status_PIN0
    1cd2:	98 85       	ldd	r25, Y+8	; 0x08
    1cd4:	8f 81       	ldd	r24, Y+7	; 0x07
    1cd6:	98 23       	and	r25, r24
    1cd8:	8e 81       	ldd	r24, Y+6	; 0x06
    1cda:	98 23       	and	r25, r24
    1cdc:	8d 81       	ldd	r24, Y+5	; 0x05
    1cde:	98 23       	and	r25, r24
    1ce0:	8c 81       	ldd	r24, Y+4	; 0x04
    1ce2:	98 23       	and	r25, r24
    1ce4:	8b 81       	ldd	r24, Y+3	; 0x03
    1ce6:	98 23       	and	r25, r24
    1ce8:	8a 81       	ldd	r24, Y+2	; 0x02
    1cea:	98 23       	and	r25, r24
    1cec:	89 81       	ldd	r24, Y+1	; 0x01
    1cee:	89 23       	and	r24, r25
    1cf0:	eb 85       	ldd	r30, Y+11	; 0x0b
    1cf2:	fc 85       	ldd	r31, Y+12	; 0x0c
    1cf4:	80 83       	st	Z, r24
    1cf6:	01 c0       	rjmp	.+2      	; 0x1cfa <DIO_enumGetPortValue+0x274>
								& Local_u8status_PIN7;
	}

	else
	{
		LOC_enumState = DIO_NOK;
    1cf8:	19 86       	std	Y+9, r1	; 0x09
	}
	return LOC_enumState;
    1cfa:	89 85       	ldd	r24, Y+9	; 0x09
}
    1cfc:	2e 96       	adiw	r28, 0x0e	; 14
    1cfe:	0f b6       	in	r0, 0x3f	; 63
    1d00:	f8 94       	cli
    1d02:	de bf       	out	0x3e, r29	; 62
    1d04:	0f be       	out	0x3f, r0	; 63
    1d06:	cd bf       	out	0x3d, r28	; 61
    1d08:	cf 91       	pop	r28
    1d0a:	df 91       	pop	r29
    1d0c:	08 95       	ret

00001d0e <DIO_enumTogglePortValue>:




/*--------------------------------------------------------------------------------------------------------------------------*/
DIO_ErrorStatus DIO_enumTogglePortValue  (u8 Copy_u8PORT                     ){
    1d0e:	df 93       	push	r29
    1d10:	cf 93       	push	r28
    1d12:	00 d0       	rcall	.+0      	; 0x1d14 <DIO_enumTogglePortValue+0x6>
    1d14:	00 d0       	rcall	.+0      	; 0x1d16 <DIO_enumTogglePortValue+0x8>
    1d16:	cd b7       	in	r28, 0x3d	; 61
    1d18:	de b7       	in	r29, 0x3e	; 62
    1d1a:	8a 83       	std	Y+2, r24	; 0x02
	DIO_ErrorStatus LOC_enumState = DIO_OK;
    1d1c:	81 e0       	ldi	r24, 0x01	; 1
    1d1e:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_u8PORT <= DIO_PORTD)
    1d20:	8a 81       	ldd	r24, Y+2	; 0x02
    1d22:	84 30       	cpi	r24, 0x04	; 4
    1d24:	08 f0       	brcs	.+2      	; 0x1d28 <DIO_enumTogglePortValue+0x1a>
    1d26:	28 c1       	rjmp	.+592    	; 0x1f78 <DIO_enumTogglePortValue+0x26a>
	{
		switch(Copy_u8PORT)
    1d28:	8a 81       	ldd	r24, Y+2	; 0x02
    1d2a:	28 2f       	mov	r18, r24
    1d2c:	30 e0       	ldi	r19, 0x00	; 0
    1d2e:	3c 83       	std	Y+4, r19	; 0x04
    1d30:	2b 83       	std	Y+3, r18	; 0x03
    1d32:	8b 81       	ldd	r24, Y+3	; 0x03
    1d34:	9c 81       	ldd	r25, Y+4	; 0x04
    1d36:	81 30       	cpi	r24, 0x01	; 1
    1d38:	91 05       	cpc	r25, r1
    1d3a:	09 f4       	brne	.+2      	; 0x1d3e <DIO_enumTogglePortValue+0x30>
    1d3c:	58 c0       	rjmp	.+176    	; 0x1dee <DIO_enumTogglePortValue+0xe0>
    1d3e:	2b 81       	ldd	r18, Y+3	; 0x03
    1d40:	3c 81       	ldd	r19, Y+4	; 0x04
    1d42:	22 30       	cpi	r18, 0x02	; 2
    1d44:	31 05       	cpc	r19, r1
    1d46:	2c f4       	brge	.+10     	; 0x1d52 <DIO_enumTogglePortValue+0x44>
    1d48:	8b 81       	ldd	r24, Y+3	; 0x03
    1d4a:	9c 81       	ldd	r25, Y+4	; 0x04
    1d4c:	00 97       	sbiw	r24, 0x00	; 0
    1d4e:	71 f0       	breq	.+28     	; 0x1d6c <DIO_enumTogglePortValue+0x5e>
    1d50:	11 c1       	rjmp	.+546    	; 0x1f74 <DIO_enumTogglePortValue+0x266>
    1d52:	2b 81       	ldd	r18, Y+3	; 0x03
    1d54:	3c 81       	ldd	r19, Y+4	; 0x04
    1d56:	22 30       	cpi	r18, 0x02	; 2
    1d58:	31 05       	cpc	r19, r1
    1d5a:	09 f4       	brne	.+2      	; 0x1d5e <DIO_enumTogglePortValue+0x50>
    1d5c:	89 c0       	rjmp	.+274    	; 0x1e70 <DIO_enumTogglePortValue+0x162>
    1d5e:	8b 81       	ldd	r24, Y+3	; 0x03
    1d60:	9c 81       	ldd	r25, Y+4	; 0x04
    1d62:	83 30       	cpi	r24, 0x03	; 3
    1d64:	91 05       	cpc	r25, r1
    1d66:	09 f4       	brne	.+2      	; 0x1d6a <DIO_enumTogglePortValue+0x5c>
    1d68:	c4 c0       	rjmp	.+392    	; 0x1ef2 <DIO_enumTogglePortValue+0x1e4>
    1d6a:	04 c1       	rjmp	.+520    	; 0x1f74 <DIO_enumTogglePortValue+0x266>
			{
				case DIO_PORTA: TOG_BIT(PORTA, DIO_PIN0);
    1d6c:	ab e3       	ldi	r26, 0x3B	; 59
    1d6e:	b0 e0       	ldi	r27, 0x00	; 0
    1d70:	eb e3       	ldi	r30, 0x3B	; 59
    1d72:	f0 e0       	ldi	r31, 0x00	; 0
    1d74:	90 81       	ld	r25, Z
    1d76:	81 e0       	ldi	r24, 0x01	; 1
    1d78:	89 27       	eor	r24, r25
    1d7a:	8c 93       	st	X, r24
								TOG_BIT(PORTA, DIO_PIN1);
    1d7c:	ab e3       	ldi	r26, 0x3B	; 59
    1d7e:	b0 e0       	ldi	r27, 0x00	; 0
    1d80:	eb e3       	ldi	r30, 0x3B	; 59
    1d82:	f0 e0       	ldi	r31, 0x00	; 0
    1d84:	90 81       	ld	r25, Z
    1d86:	82 e0       	ldi	r24, 0x02	; 2
    1d88:	89 27       	eor	r24, r25
    1d8a:	8c 93       	st	X, r24
								TOG_BIT(PORTA, DIO_PIN2);
    1d8c:	ab e3       	ldi	r26, 0x3B	; 59
    1d8e:	b0 e0       	ldi	r27, 0x00	; 0
    1d90:	eb e3       	ldi	r30, 0x3B	; 59
    1d92:	f0 e0       	ldi	r31, 0x00	; 0
    1d94:	90 81       	ld	r25, Z
    1d96:	84 e0       	ldi	r24, 0x04	; 4
    1d98:	89 27       	eor	r24, r25
    1d9a:	8c 93       	st	X, r24
								TOG_BIT(PORTA, DIO_PIN3);
    1d9c:	ab e3       	ldi	r26, 0x3B	; 59
    1d9e:	b0 e0       	ldi	r27, 0x00	; 0
    1da0:	eb e3       	ldi	r30, 0x3B	; 59
    1da2:	f0 e0       	ldi	r31, 0x00	; 0
    1da4:	90 81       	ld	r25, Z
    1da6:	88 e0       	ldi	r24, 0x08	; 8
    1da8:	89 27       	eor	r24, r25
    1daa:	8c 93       	st	X, r24
								TOG_BIT(PORTA, DIO_PIN4);
    1dac:	ab e3       	ldi	r26, 0x3B	; 59
    1dae:	b0 e0       	ldi	r27, 0x00	; 0
    1db0:	eb e3       	ldi	r30, 0x3B	; 59
    1db2:	f0 e0       	ldi	r31, 0x00	; 0
    1db4:	90 81       	ld	r25, Z
    1db6:	80 e1       	ldi	r24, 0x10	; 16
    1db8:	89 27       	eor	r24, r25
    1dba:	8c 93       	st	X, r24
								TOG_BIT(PORTA, DIO_PIN5);
    1dbc:	ab e3       	ldi	r26, 0x3B	; 59
    1dbe:	b0 e0       	ldi	r27, 0x00	; 0
    1dc0:	eb e3       	ldi	r30, 0x3B	; 59
    1dc2:	f0 e0       	ldi	r31, 0x00	; 0
    1dc4:	90 81       	ld	r25, Z
    1dc6:	80 e2       	ldi	r24, 0x20	; 32
    1dc8:	89 27       	eor	r24, r25
    1dca:	8c 93       	st	X, r24
								TOG_BIT(PORTA, DIO_PIN6);
    1dcc:	ab e3       	ldi	r26, 0x3B	; 59
    1dce:	b0 e0       	ldi	r27, 0x00	; 0
    1dd0:	eb e3       	ldi	r30, 0x3B	; 59
    1dd2:	f0 e0       	ldi	r31, 0x00	; 0
    1dd4:	90 81       	ld	r25, Z
    1dd6:	80 e4       	ldi	r24, 0x40	; 64
    1dd8:	89 27       	eor	r24, r25
    1dda:	8c 93       	st	X, r24
								TOG_BIT(PORTA, DIO_PIN7);break;
    1ddc:	ab e3       	ldi	r26, 0x3B	; 59
    1dde:	b0 e0       	ldi	r27, 0x00	; 0
    1de0:	eb e3       	ldi	r30, 0x3B	; 59
    1de2:	f0 e0       	ldi	r31, 0x00	; 0
    1de4:	90 81       	ld	r25, Z
    1de6:	80 e8       	ldi	r24, 0x80	; 128
    1de8:	89 27       	eor	r24, r25
    1dea:	8c 93       	st	X, r24
    1dec:	c6 c0       	rjmp	.+396    	; 0x1f7a <DIO_enumTogglePortValue+0x26c>


				case DIO_PORTB: TOG_BIT(PORTB, DIO_PIN0);
    1dee:	a8 e3       	ldi	r26, 0x38	; 56
    1df0:	b0 e0       	ldi	r27, 0x00	; 0
    1df2:	e8 e3       	ldi	r30, 0x38	; 56
    1df4:	f0 e0       	ldi	r31, 0x00	; 0
    1df6:	90 81       	ld	r25, Z
    1df8:	81 e0       	ldi	r24, 0x01	; 1
    1dfa:	89 27       	eor	r24, r25
    1dfc:	8c 93       	st	X, r24
								TOG_BIT(PORTB, DIO_PIN1);
    1dfe:	a8 e3       	ldi	r26, 0x38	; 56
    1e00:	b0 e0       	ldi	r27, 0x00	; 0
    1e02:	e8 e3       	ldi	r30, 0x38	; 56
    1e04:	f0 e0       	ldi	r31, 0x00	; 0
    1e06:	90 81       	ld	r25, Z
    1e08:	82 e0       	ldi	r24, 0x02	; 2
    1e0a:	89 27       	eor	r24, r25
    1e0c:	8c 93       	st	X, r24
								TOG_BIT(PORTB, DIO_PIN2);
    1e0e:	a8 e3       	ldi	r26, 0x38	; 56
    1e10:	b0 e0       	ldi	r27, 0x00	; 0
    1e12:	e8 e3       	ldi	r30, 0x38	; 56
    1e14:	f0 e0       	ldi	r31, 0x00	; 0
    1e16:	90 81       	ld	r25, Z
    1e18:	84 e0       	ldi	r24, 0x04	; 4
    1e1a:	89 27       	eor	r24, r25
    1e1c:	8c 93       	st	X, r24
								TOG_BIT(PORTB, DIO_PIN3);
    1e1e:	a8 e3       	ldi	r26, 0x38	; 56
    1e20:	b0 e0       	ldi	r27, 0x00	; 0
    1e22:	e8 e3       	ldi	r30, 0x38	; 56
    1e24:	f0 e0       	ldi	r31, 0x00	; 0
    1e26:	90 81       	ld	r25, Z
    1e28:	88 e0       	ldi	r24, 0x08	; 8
    1e2a:	89 27       	eor	r24, r25
    1e2c:	8c 93       	st	X, r24
								TOG_BIT(PORTB, DIO_PIN4);
    1e2e:	a8 e3       	ldi	r26, 0x38	; 56
    1e30:	b0 e0       	ldi	r27, 0x00	; 0
    1e32:	e8 e3       	ldi	r30, 0x38	; 56
    1e34:	f0 e0       	ldi	r31, 0x00	; 0
    1e36:	90 81       	ld	r25, Z
    1e38:	80 e1       	ldi	r24, 0x10	; 16
    1e3a:	89 27       	eor	r24, r25
    1e3c:	8c 93       	st	X, r24
								TOG_BIT(PORTB, DIO_PIN5);
    1e3e:	a8 e3       	ldi	r26, 0x38	; 56
    1e40:	b0 e0       	ldi	r27, 0x00	; 0
    1e42:	e8 e3       	ldi	r30, 0x38	; 56
    1e44:	f0 e0       	ldi	r31, 0x00	; 0
    1e46:	90 81       	ld	r25, Z
    1e48:	80 e2       	ldi	r24, 0x20	; 32
    1e4a:	89 27       	eor	r24, r25
    1e4c:	8c 93       	st	X, r24
								TOG_BIT(PORTB, DIO_PIN6);
    1e4e:	a8 e3       	ldi	r26, 0x38	; 56
    1e50:	b0 e0       	ldi	r27, 0x00	; 0
    1e52:	e8 e3       	ldi	r30, 0x38	; 56
    1e54:	f0 e0       	ldi	r31, 0x00	; 0
    1e56:	90 81       	ld	r25, Z
    1e58:	80 e4       	ldi	r24, 0x40	; 64
    1e5a:	89 27       	eor	r24, r25
    1e5c:	8c 93       	st	X, r24
								TOG_BIT(PORTB, DIO_PIN7);break;
    1e5e:	a8 e3       	ldi	r26, 0x38	; 56
    1e60:	b0 e0       	ldi	r27, 0x00	; 0
    1e62:	e8 e3       	ldi	r30, 0x38	; 56
    1e64:	f0 e0       	ldi	r31, 0x00	; 0
    1e66:	90 81       	ld	r25, Z
    1e68:	80 e8       	ldi	r24, 0x80	; 128
    1e6a:	89 27       	eor	r24, r25
    1e6c:	8c 93       	st	X, r24
    1e6e:	85 c0       	rjmp	.+266    	; 0x1f7a <DIO_enumTogglePortValue+0x26c>


				case DIO_PORTC: TOG_BIT(PORTC, DIO_PIN0);
    1e70:	a5 e3       	ldi	r26, 0x35	; 53
    1e72:	b0 e0       	ldi	r27, 0x00	; 0
    1e74:	e5 e3       	ldi	r30, 0x35	; 53
    1e76:	f0 e0       	ldi	r31, 0x00	; 0
    1e78:	90 81       	ld	r25, Z
    1e7a:	81 e0       	ldi	r24, 0x01	; 1
    1e7c:	89 27       	eor	r24, r25
    1e7e:	8c 93       	st	X, r24
								TOG_BIT(PORTC, DIO_PIN1);
    1e80:	a5 e3       	ldi	r26, 0x35	; 53
    1e82:	b0 e0       	ldi	r27, 0x00	; 0
    1e84:	e5 e3       	ldi	r30, 0x35	; 53
    1e86:	f0 e0       	ldi	r31, 0x00	; 0
    1e88:	90 81       	ld	r25, Z
    1e8a:	82 e0       	ldi	r24, 0x02	; 2
    1e8c:	89 27       	eor	r24, r25
    1e8e:	8c 93       	st	X, r24
								TOG_BIT(PORTC, DIO_PIN2);
    1e90:	a5 e3       	ldi	r26, 0x35	; 53
    1e92:	b0 e0       	ldi	r27, 0x00	; 0
    1e94:	e5 e3       	ldi	r30, 0x35	; 53
    1e96:	f0 e0       	ldi	r31, 0x00	; 0
    1e98:	90 81       	ld	r25, Z
    1e9a:	84 e0       	ldi	r24, 0x04	; 4
    1e9c:	89 27       	eor	r24, r25
    1e9e:	8c 93       	st	X, r24
								TOG_BIT(PORTC, DIO_PIN3);
    1ea0:	a5 e3       	ldi	r26, 0x35	; 53
    1ea2:	b0 e0       	ldi	r27, 0x00	; 0
    1ea4:	e5 e3       	ldi	r30, 0x35	; 53
    1ea6:	f0 e0       	ldi	r31, 0x00	; 0
    1ea8:	90 81       	ld	r25, Z
    1eaa:	88 e0       	ldi	r24, 0x08	; 8
    1eac:	89 27       	eor	r24, r25
    1eae:	8c 93       	st	X, r24
								TOG_BIT(PORTC, DIO_PIN4);
    1eb0:	a5 e3       	ldi	r26, 0x35	; 53
    1eb2:	b0 e0       	ldi	r27, 0x00	; 0
    1eb4:	e5 e3       	ldi	r30, 0x35	; 53
    1eb6:	f0 e0       	ldi	r31, 0x00	; 0
    1eb8:	90 81       	ld	r25, Z
    1eba:	80 e1       	ldi	r24, 0x10	; 16
    1ebc:	89 27       	eor	r24, r25
    1ebe:	8c 93       	st	X, r24
								TOG_BIT(PORTC, DIO_PIN5);
    1ec0:	a5 e3       	ldi	r26, 0x35	; 53
    1ec2:	b0 e0       	ldi	r27, 0x00	; 0
    1ec4:	e5 e3       	ldi	r30, 0x35	; 53
    1ec6:	f0 e0       	ldi	r31, 0x00	; 0
    1ec8:	90 81       	ld	r25, Z
    1eca:	80 e2       	ldi	r24, 0x20	; 32
    1ecc:	89 27       	eor	r24, r25
    1ece:	8c 93       	st	X, r24
								TOG_BIT(PORTC, DIO_PIN6);
    1ed0:	a5 e3       	ldi	r26, 0x35	; 53
    1ed2:	b0 e0       	ldi	r27, 0x00	; 0
    1ed4:	e5 e3       	ldi	r30, 0x35	; 53
    1ed6:	f0 e0       	ldi	r31, 0x00	; 0
    1ed8:	90 81       	ld	r25, Z
    1eda:	80 e4       	ldi	r24, 0x40	; 64
    1edc:	89 27       	eor	r24, r25
    1ede:	8c 93       	st	X, r24
								TOG_BIT(PORTC, DIO_PIN7);break;
    1ee0:	a5 e3       	ldi	r26, 0x35	; 53
    1ee2:	b0 e0       	ldi	r27, 0x00	; 0
    1ee4:	e5 e3       	ldi	r30, 0x35	; 53
    1ee6:	f0 e0       	ldi	r31, 0x00	; 0
    1ee8:	90 81       	ld	r25, Z
    1eea:	80 e8       	ldi	r24, 0x80	; 128
    1eec:	89 27       	eor	r24, r25
    1eee:	8c 93       	st	X, r24
    1ef0:	44 c0       	rjmp	.+136    	; 0x1f7a <DIO_enumTogglePortValue+0x26c>


				case DIO_PORTD: TOG_BIT(PORTD, DIO_PIN0);
    1ef2:	a2 e3       	ldi	r26, 0x32	; 50
    1ef4:	b0 e0       	ldi	r27, 0x00	; 0
    1ef6:	e2 e3       	ldi	r30, 0x32	; 50
    1ef8:	f0 e0       	ldi	r31, 0x00	; 0
    1efa:	90 81       	ld	r25, Z
    1efc:	81 e0       	ldi	r24, 0x01	; 1
    1efe:	89 27       	eor	r24, r25
    1f00:	8c 93       	st	X, r24
								TOG_BIT(PORTD, DIO_PIN1);
    1f02:	a2 e3       	ldi	r26, 0x32	; 50
    1f04:	b0 e0       	ldi	r27, 0x00	; 0
    1f06:	e2 e3       	ldi	r30, 0x32	; 50
    1f08:	f0 e0       	ldi	r31, 0x00	; 0
    1f0a:	90 81       	ld	r25, Z
    1f0c:	82 e0       	ldi	r24, 0x02	; 2
    1f0e:	89 27       	eor	r24, r25
    1f10:	8c 93       	st	X, r24
								TOG_BIT(PORTD, DIO_PIN2);
    1f12:	a2 e3       	ldi	r26, 0x32	; 50
    1f14:	b0 e0       	ldi	r27, 0x00	; 0
    1f16:	e2 e3       	ldi	r30, 0x32	; 50
    1f18:	f0 e0       	ldi	r31, 0x00	; 0
    1f1a:	90 81       	ld	r25, Z
    1f1c:	84 e0       	ldi	r24, 0x04	; 4
    1f1e:	89 27       	eor	r24, r25
    1f20:	8c 93       	st	X, r24
								TOG_BIT(PORTD, DIO_PIN3);
    1f22:	a2 e3       	ldi	r26, 0x32	; 50
    1f24:	b0 e0       	ldi	r27, 0x00	; 0
    1f26:	e2 e3       	ldi	r30, 0x32	; 50
    1f28:	f0 e0       	ldi	r31, 0x00	; 0
    1f2a:	90 81       	ld	r25, Z
    1f2c:	88 e0       	ldi	r24, 0x08	; 8
    1f2e:	89 27       	eor	r24, r25
    1f30:	8c 93       	st	X, r24
								TOG_BIT(PORTD, DIO_PIN4);
    1f32:	a2 e3       	ldi	r26, 0x32	; 50
    1f34:	b0 e0       	ldi	r27, 0x00	; 0
    1f36:	e2 e3       	ldi	r30, 0x32	; 50
    1f38:	f0 e0       	ldi	r31, 0x00	; 0
    1f3a:	90 81       	ld	r25, Z
    1f3c:	80 e1       	ldi	r24, 0x10	; 16
    1f3e:	89 27       	eor	r24, r25
    1f40:	8c 93       	st	X, r24
								TOG_BIT(PORTD, DIO_PIN5);
    1f42:	a2 e3       	ldi	r26, 0x32	; 50
    1f44:	b0 e0       	ldi	r27, 0x00	; 0
    1f46:	e2 e3       	ldi	r30, 0x32	; 50
    1f48:	f0 e0       	ldi	r31, 0x00	; 0
    1f4a:	90 81       	ld	r25, Z
    1f4c:	80 e2       	ldi	r24, 0x20	; 32
    1f4e:	89 27       	eor	r24, r25
    1f50:	8c 93       	st	X, r24
								TOG_BIT(PORTD, DIO_PIN6);
    1f52:	a2 e3       	ldi	r26, 0x32	; 50
    1f54:	b0 e0       	ldi	r27, 0x00	; 0
    1f56:	e2 e3       	ldi	r30, 0x32	; 50
    1f58:	f0 e0       	ldi	r31, 0x00	; 0
    1f5a:	90 81       	ld	r25, Z
    1f5c:	80 e4       	ldi	r24, 0x40	; 64
    1f5e:	89 27       	eor	r24, r25
    1f60:	8c 93       	st	X, r24
								TOG_BIT(PORTD, DIO_PIN7);break;
    1f62:	a2 e3       	ldi	r26, 0x32	; 50
    1f64:	b0 e0       	ldi	r27, 0x00	; 0
    1f66:	e2 e3       	ldi	r30, 0x32	; 50
    1f68:	f0 e0       	ldi	r31, 0x00	; 0
    1f6a:	90 81       	ld	r25, Z
    1f6c:	80 e8       	ldi	r24, 0x80	; 128
    1f6e:	89 27       	eor	r24, r25
    1f70:	8c 93       	st	X, r24
    1f72:	03 c0       	rjmp	.+6      	; 0x1f7a <DIO_enumTogglePortValue+0x26c>
				default :       LOC_enumState = DIO_NOK     ;break;
    1f74:	19 82       	std	Y+1, r1	; 0x01
    1f76:	01 c0       	rjmp	.+2      	; 0x1f7a <DIO_enumTogglePortValue+0x26c>
			}
	}
	else
	{
		LOC_enumState = DIO_NOK;
    1f78:	19 82       	std	Y+1, r1	; 0x01
	}
	return LOC_enumState;
    1f7a:	89 81       	ldd	r24, Y+1	; 0x01
}
    1f7c:	0f 90       	pop	r0
    1f7e:	0f 90       	pop	r0
    1f80:	0f 90       	pop	r0
    1f82:	0f 90       	pop	r0
    1f84:	cf 91       	pop	r28
    1f86:	df 91       	pop	r29
    1f88:	08 95       	ret

00001f8a <LED_voidInIt>:
#include "LED_interface.h"


/*Initializing the LED*/
void LED_voidInIt  (LED_CONF LED_CONFIGRATION)
{
    1f8a:	df 93       	push	r29
    1f8c:	cf 93       	push	r28
    1f8e:	00 d0       	rcall	.+0      	; 0x1f90 <LED_voidInIt+0x6>
    1f90:	0f 92       	push	r0
    1f92:	cd b7       	in	r28, 0x3d	; 61
    1f94:	de b7       	in	r29, 0x3e	; 62
    1f96:	69 83       	std	Y+1, r22	; 0x01
    1f98:	7a 83       	std	Y+2, r23	; 0x02
    1f9a:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumSetPinDirection(LED_CONFIGRATION.Port, LED_CONFIGRATION.Pin, DIO_PIN_OUTPUT);
    1f9c:	89 81       	ldd	r24, Y+1	; 0x01
    1f9e:	9a 81       	ldd	r25, Y+2	; 0x02
    1fa0:	69 2f       	mov	r22, r25
    1fa2:	41 e0       	ldi	r20, 0x01	; 1
    1fa4:	0e 94 9b 05 	call	0xb36	; 0xb36 <DIO_enumSetPinDirection>
}
    1fa8:	0f 90       	pop	r0
    1faa:	0f 90       	pop	r0
    1fac:	0f 90       	pop	r0
    1fae:	cf 91       	pop	r28
    1fb0:	df 91       	pop	r29
    1fb2:	08 95       	ret

00001fb4 <LED_voidON>:

/*-------------------------------------------------------------------------------------*/


void LED_voidON    (LED_CONF LED_CONFIGRATION)
{
    1fb4:	df 93       	push	r29
    1fb6:	cf 93       	push	r28
    1fb8:	00 d0       	rcall	.+0      	; 0x1fba <LED_voidON+0x6>
    1fba:	0f 92       	push	r0
    1fbc:	cd b7       	in	r28, 0x3d	; 61
    1fbe:	de b7       	in	r29, 0x3e	; 62
    1fc0:	69 83       	std	Y+1, r22	; 0x01
    1fc2:	7a 83       	std	Y+2, r23	; 0x02
    1fc4:	8b 83       	std	Y+3, r24	; 0x03
	if(LED_CONFIGRATION.Active_State == ACTIVE_HIGH)
    1fc6:	8b 81       	ldd	r24, Y+3	; 0x03
    1fc8:	81 30       	cpi	r24, 0x01	; 1
    1fca:	39 f4       	brne	.+14     	; 0x1fda <LED_voidON+0x26>
	{
		DIO_enumSetPinValue(LED_CONFIGRATION.Port, LED_CONFIGRATION.Pin, LED_PIN_HIGH);
    1fcc:	89 81       	ldd	r24, Y+1	; 0x01
    1fce:	9a 81       	ldd	r25, Y+2	; 0x02
    1fd0:	69 2f       	mov	r22, r25
    1fd2:	41 e0       	ldi	r20, 0x01	; 1
    1fd4:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_enumSetPinValue>
    1fd8:	09 c0       	rjmp	.+18     	; 0x1fec <LED_voidON+0x38>
	}
	else if(LED_CONFIGRATION.Active_State == ACTIVE_LOW)
    1fda:	8b 81       	ldd	r24, Y+3	; 0x03
    1fdc:	88 23       	and	r24, r24
    1fde:	31 f4       	brne	.+12     	; 0x1fec <LED_voidON+0x38>
	{
		DIO_enumSetPinValue(LED_CONFIGRATION.Port, LED_CONFIGRATION.Pin, LED_PIN_LOW);
    1fe0:	89 81       	ldd	r24, Y+1	; 0x01
    1fe2:	9a 81       	ldd	r25, Y+2	; 0x02
    1fe4:	69 2f       	mov	r22, r25
    1fe6:	40 e0       	ldi	r20, 0x00	; 0
    1fe8:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_enumSetPinValue>
	}
}
    1fec:	0f 90       	pop	r0
    1fee:	0f 90       	pop	r0
    1ff0:	0f 90       	pop	r0
    1ff2:	cf 91       	pop	r28
    1ff4:	df 91       	pop	r29
    1ff6:	08 95       	ret

00001ff8 <LED_voidOFF>:

/*-------------------------------------------------------------------------------------------*/


void LED_voidOFF   (LED_CONF LED_CONFIGRATION)
{
    1ff8:	df 93       	push	r29
    1ffa:	cf 93       	push	r28
    1ffc:	00 d0       	rcall	.+0      	; 0x1ffe <LED_voidOFF+0x6>
    1ffe:	0f 92       	push	r0
    2000:	cd b7       	in	r28, 0x3d	; 61
    2002:	de b7       	in	r29, 0x3e	; 62
    2004:	69 83       	std	Y+1, r22	; 0x01
    2006:	7a 83       	std	Y+2, r23	; 0x02
    2008:	8b 83       	std	Y+3, r24	; 0x03
	if(LED_CONFIGRATION.Active_State == ACTIVE_HIGH)
    200a:	8b 81       	ldd	r24, Y+3	; 0x03
    200c:	81 30       	cpi	r24, 0x01	; 1
    200e:	39 f4       	brne	.+14     	; 0x201e <LED_voidOFF+0x26>
		{
			DIO_enumSetPinValue(LED_CONFIGRATION.Port, LED_CONFIGRATION.Pin, LED_PIN_LOW);
    2010:	89 81       	ldd	r24, Y+1	; 0x01
    2012:	9a 81       	ldd	r25, Y+2	; 0x02
    2014:	69 2f       	mov	r22, r25
    2016:	40 e0       	ldi	r20, 0x00	; 0
    2018:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_enumSetPinValue>
    201c:	09 c0       	rjmp	.+18     	; 0x2030 <LED_voidOFF+0x38>
		}
		else if(LED_CONFIGRATION.Active_State == ACTIVE_LOW)
    201e:	8b 81       	ldd	r24, Y+3	; 0x03
    2020:	88 23       	and	r24, r24
    2022:	31 f4       	brne	.+12     	; 0x2030 <LED_voidOFF+0x38>
		{
			DIO_enumSetPinValue(LED_CONFIGRATION.Port, LED_CONFIGRATION.Pin, LED_PIN_HIGH);
    2024:	89 81       	ldd	r24, Y+1	; 0x01
    2026:	9a 81       	ldd	r25, Y+2	; 0x02
    2028:	69 2f       	mov	r22, r25
    202a:	41 e0       	ldi	r20, 0x01	; 1
    202c:	0e 94 aa 06 	call	0xd54	; 0xd54 <DIO_enumSetPinValue>
		}
}
    2030:	0f 90       	pop	r0
    2032:	0f 90       	pop	r0
    2034:	0f 90       	pop	r0
    2036:	cf 91       	pop	r28
    2038:	df 91       	pop	r29
    203a:	08 95       	ret

0000203c <LED_voidToggle>:
/*------------------------------------------------------------------------------------------*/



void LED_voidToggle(LED_CONF LED_CONFIGRATION)
{
    203c:	df 93       	push	r29
    203e:	cf 93       	push	r28
    2040:	00 d0       	rcall	.+0      	; 0x2042 <LED_voidToggle+0x6>
    2042:	0f 92       	push	r0
    2044:	cd b7       	in	r28, 0x3d	; 61
    2046:	de b7       	in	r29, 0x3e	; 62
    2048:	69 83       	std	Y+1, r22	; 0x01
    204a:	7a 83       	std	Y+2, r23	; 0x02
    204c:	8b 83       	std	Y+3, r24	; 0x03
	DIO_enumTogglePinValue(LED_CONFIGRATION.Port, LED_CONFIGRATION.Pin);
    204e:	89 81       	ldd	r24, Y+1	; 0x01
    2050:	9a 81       	ldd	r25, Y+2	; 0x02
    2052:	69 2f       	mov	r22, r25
    2054:	0e 94 4d 08 	call	0x109a	; 0x109a <DIO_enumTogglePinValue>
}
    2058:	0f 90       	pop	r0
    205a:	0f 90       	pop	r0
    205c:	0f 90       	pop	r0
    205e:	cf 91       	pop	r28
    2060:	df 91       	pop	r29
    2062:	08 95       	ret

00002064 <main>:




int main(void)
{
    2064:	0f 93       	push	r16
    2066:	1f 93       	push	r17
    2068:	df 93       	push	r29
    206a:	cf 93       	push	r28
    206c:	cd b7       	in	r28, 0x3d	; 61
    206e:	de b7       	in	r29, 0x3e	; 62
    2070:	c4 50       	subi	r28, 0x04	; 4
    2072:	d1 40       	sbci	r29, 0x01	; 1
    2074:	0f b6       	in	r0, 0x3f	; 63
    2076:	f8 94       	cli
    2078:	de bf       	out	0x3e, r29	; 62
    207a:	0f be       	out	0x3f, r0	; 63
    207c:	cd bf       	out	0x3d, r28	; 61
	LED_CONF LED0 = {LED_PORTA, LED_PIN0, ACTIVE_HIGH};
    207e:	ce 01       	movw	r24, r28
    2080:	8b 53       	subi	r24, 0x3B	; 59
    2082:	9f 4f       	sbci	r25, 0xFF	; 255
    2084:	c3 52       	subi	r28, 0x23	; 35
    2086:	df 4f       	sbci	r29, 0xFF	; 255
    2088:	99 83       	std	Y+1, r25	; 0x01
    208a:	88 83       	st	Y, r24
    208c:	cd 5d       	subi	r28, 0xDD	; 221
    208e:	d0 40       	sbci	r29, 0x00	; 0
    2090:	8d e7       	ldi	r24, 0x7D	; 125
    2092:	90 e0       	ldi	r25, 0x00	; 0
    2094:	c1 52       	subi	r28, 0x21	; 33
    2096:	df 4f       	sbci	r29, 0xFF	; 255
    2098:	99 83       	std	Y+1, r25	; 0x01
    209a:	88 83       	st	Y, r24
    209c:	cf 5d       	subi	r28, 0xDF	; 223
    209e:	d0 40       	sbci	r29, 0x00	; 0
    20a0:	93 e0       	ldi	r25, 0x03	; 3
    20a2:	cf 51       	subi	r28, 0x1F	; 31
    20a4:	df 4f       	sbci	r29, 0xFF	; 255
    20a6:	98 83       	st	Y, r25
    20a8:	c1 5e       	subi	r28, 0xE1	; 225
    20aa:	d0 40       	sbci	r29, 0x00	; 0
    20ac:	c1 52       	subi	r28, 0x21	; 33
    20ae:	df 4f       	sbci	r29, 0xFF	; 255
    20b0:	e8 81       	ld	r30, Y
    20b2:	f9 81       	ldd	r31, Y+1	; 0x01
    20b4:	cf 5d       	subi	r28, 0xDF	; 223
    20b6:	d0 40       	sbci	r29, 0x00	; 0
    20b8:	00 80       	ld	r0, Z
    20ba:	c1 52       	subi	r28, 0x21	; 33
    20bc:	df 4f       	sbci	r29, 0xFF	; 255
    20be:	88 81       	ld	r24, Y
    20c0:	99 81       	ldd	r25, Y+1	; 0x01
    20c2:	cf 5d       	subi	r28, 0xDF	; 223
    20c4:	d0 40       	sbci	r29, 0x00	; 0
    20c6:	01 96       	adiw	r24, 0x01	; 1
    20c8:	c1 52       	subi	r28, 0x21	; 33
    20ca:	df 4f       	sbci	r29, 0xFF	; 255
    20cc:	99 83       	std	Y+1, r25	; 0x01
    20ce:	88 83       	st	Y, r24
    20d0:	cf 5d       	subi	r28, 0xDF	; 223
    20d2:	d0 40       	sbci	r29, 0x00	; 0
    20d4:	c3 52       	subi	r28, 0x23	; 35
    20d6:	df 4f       	sbci	r29, 0xFF	; 255
    20d8:	e8 81       	ld	r30, Y
    20da:	f9 81       	ldd	r31, Y+1	; 0x01
    20dc:	cd 5d       	subi	r28, 0xDD	; 221
    20de:	d0 40       	sbci	r29, 0x00	; 0
    20e0:	00 82       	st	Z, r0
    20e2:	c3 52       	subi	r28, 0x23	; 35
    20e4:	df 4f       	sbci	r29, 0xFF	; 255
    20e6:	88 81       	ld	r24, Y
    20e8:	99 81       	ldd	r25, Y+1	; 0x01
    20ea:	cd 5d       	subi	r28, 0xDD	; 221
    20ec:	d0 40       	sbci	r29, 0x00	; 0
    20ee:	01 96       	adiw	r24, 0x01	; 1
    20f0:	c3 52       	subi	r28, 0x23	; 35
    20f2:	df 4f       	sbci	r29, 0xFF	; 255
    20f4:	99 83       	std	Y+1, r25	; 0x01
    20f6:	88 83       	st	Y, r24
    20f8:	cd 5d       	subi	r28, 0xDD	; 221
    20fa:	d0 40       	sbci	r29, 0x00	; 0
    20fc:	cf 51       	subi	r28, 0x1F	; 31
    20fe:	df 4f       	sbci	r29, 0xFF	; 255
    2100:	98 81       	ld	r25, Y
    2102:	c1 5e       	subi	r28, 0xE1	; 225
    2104:	d0 40       	sbci	r29, 0x00	; 0
    2106:	91 50       	subi	r25, 0x01	; 1
    2108:	cf 51       	subi	r28, 0x1F	; 31
    210a:	df 4f       	sbci	r29, 0xFF	; 255
    210c:	98 83       	st	Y, r25
    210e:	c1 5e       	subi	r28, 0xE1	; 225
    2110:	d0 40       	sbci	r29, 0x00	; 0
    2112:	cf 51       	subi	r28, 0x1F	; 31
    2114:	df 4f       	sbci	r29, 0xFF	; 255
    2116:	e8 81       	ld	r30, Y
    2118:	c1 5e       	subi	r28, 0xE1	; 225
    211a:	d0 40       	sbci	r29, 0x00	; 0
    211c:	ee 23       	and	r30, r30
    211e:	31 f6       	brne	.-116    	; 0x20ac <main+0x48>
	LED_CONF LED1 = {LED_PORTA, LED_PIN1, ACTIVE_HIGH};
    2120:	ce 01       	movw	r24, r28
    2122:	88 53       	subi	r24, 0x38	; 56
    2124:	9f 4f       	sbci	r25, 0xFF	; 255
    2126:	ce 51       	subi	r28, 0x1E	; 30
    2128:	df 4f       	sbci	r29, 0xFF	; 255
    212a:	99 83       	std	Y+1, r25	; 0x01
    212c:	88 83       	st	Y, r24
    212e:	c2 5e       	subi	r28, 0xE2	; 226
    2130:	d0 40       	sbci	r29, 0x00	; 0
    2132:	8a e7       	ldi	r24, 0x7A	; 122
    2134:	90 e0       	ldi	r25, 0x00	; 0
    2136:	cc 51       	subi	r28, 0x1C	; 28
    2138:	df 4f       	sbci	r29, 0xFF	; 255
    213a:	99 83       	std	Y+1, r25	; 0x01
    213c:	88 83       	st	Y, r24
    213e:	c4 5e       	subi	r28, 0xE4	; 228
    2140:	d0 40       	sbci	r29, 0x00	; 0
    2142:	93 e0       	ldi	r25, 0x03	; 3
    2144:	ca 51       	subi	r28, 0x1A	; 26
    2146:	df 4f       	sbci	r29, 0xFF	; 255
    2148:	98 83       	st	Y, r25
    214a:	c6 5e       	subi	r28, 0xE6	; 230
    214c:	d0 40       	sbci	r29, 0x00	; 0
    214e:	cc 51       	subi	r28, 0x1C	; 28
    2150:	df 4f       	sbci	r29, 0xFF	; 255
    2152:	e8 81       	ld	r30, Y
    2154:	f9 81       	ldd	r31, Y+1	; 0x01
    2156:	c4 5e       	subi	r28, 0xE4	; 228
    2158:	d0 40       	sbci	r29, 0x00	; 0
    215a:	00 80       	ld	r0, Z
    215c:	cc 51       	subi	r28, 0x1C	; 28
    215e:	df 4f       	sbci	r29, 0xFF	; 255
    2160:	88 81       	ld	r24, Y
    2162:	99 81       	ldd	r25, Y+1	; 0x01
    2164:	c4 5e       	subi	r28, 0xE4	; 228
    2166:	d0 40       	sbci	r29, 0x00	; 0
    2168:	01 96       	adiw	r24, 0x01	; 1
    216a:	cc 51       	subi	r28, 0x1C	; 28
    216c:	df 4f       	sbci	r29, 0xFF	; 255
    216e:	99 83       	std	Y+1, r25	; 0x01
    2170:	88 83       	st	Y, r24
    2172:	c4 5e       	subi	r28, 0xE4	; 228
    2174:	d0 40       	sbci	r29, 0x00	; 0
    2176:	ce 51       	subi	r28, 0x1E	; 30
    2178:	df 4f       	sbci	r29, 0xFF	; 255
    217a:	e8 81       	ld	r30, Y
    217c:	f9 81       	ldd	r31, Y+1	; 0x01
    217e:	c2 5e       	subi	r28, 0xE2	; 226
    2180:	d0 40       	sbci	r29, 0x00	; 0
    2182:	00 82       	st	Z, r0
    2184:	ce 51       	subi	r28, 0x1E	; 30
    2186:	df 4f       	sbci	r29, 0xFF	; 255
    2188:	88 81       	ld	r24, Y
    218a:	99 81       	ldd	r25, Y+1	; 0x01
    218c:	c2 5e       	subi	r28, 0xE2	; 226
    218e:	d0 40       	sbci	r29, 0x00	; 0
    2190:	01 96       	adiw	r24, 0x01	; 1
    2192:	ce 51       	subi	r28, 0x1E	; 30
    2194:	df 4f       	sbci	r29, 0xFF	; 255
    2196:	99 83       	std	Y+1, r25	; 0x01
    2198:	88 83       	st	Y, r24
    219a:	c2 5e       	subi	r28, 0xE2	; 226
    219c:	d0 40       	sbci	r29, 0x00	; 0
    219e:	ca 51       	subi	r28, 0x1A	; 26
    21a0:	df 4f       	sbci	r29, 0xFF	; 255
    21a2:	98 81       	ld	r25, Y
    21a4:	c6 5e       	subi	r28, 0xE6	; 230
    21a6:	d0 40       	sbci	r29, 0x00	; 0
    21a8:	91 50       	subi	r25, 0x01	; 1
    21aa:	ca 51       	subi	r28, 0x1A	; 26
    21ac:	df 4f       	sbci	r29, 0xFF	; 255
    21ae:	98 83       	st	Y, r25
    21b0:	c6 5e       	subi	r28, 0xE6	; 230
    21b2:	d0 40       	sbci	r29, 0x00	; 0
    21b4:	ca 51       	subi	r28, 0x1A	; 26
    21b6:	df 4f       	sbci	r29, 0xFF	; 255
    21b8:	e8 81       	ld	r30, Y
    21ba:	c6 5e       	subi	r28, 0xE6	; 230
    21bc:	d0 40       	sbci	r29, 0x00	; 0
    21be:	ee 23       	and	r30, r30
    21c0:	31 f6       	brne	.-116    	; 0x214e <main+0xea>
	LED_CONF LED2 = {LED_PORTA, LED_PIN2, ACTIVE_HIGH};
    21c2:	ce 01       	movw	r24, r28
    21c4:	85 53       	subi	r24, 0x35	; 53
    21c6:	9f 4f       	sbci	r25, 0xFF	; 255
    21c8:	c9 51       	subi	r28, 0x19	; 25
    21ca:	df 4f       	sbci	r29, 0xFF	; 255
    21cc:	99 83       	std	Y+1, r25	; 0x01
    21ce:	88 83       	st	Y, r24
    21d0:	c7 5e       	subi	r28, 0xE7	; 231
    21d2:	d0 40       	sbci	r29, 0x00	; 0
    21d4:	87 e7       	ldi	r24, 0x77	; 119
    21d6:	90 e0       	ldi	r25, 0x00	; 0
    21d8:	c7 51       	subi	r28, 0x17	; 23
    21da:	df 4f       	sbci	r29, 0xFF	; 255
    21dc:	99 83       	std	Y+1, r25	; 0x01
    21de:	88 83       	st	Y, r24
    21e0:	c9 5e       	subi	r28, 0xE9	; 233
    21e2:	d0 40       	sbci	r29, 0x00	; 0
    21e4:	93 e0       	ldi	r25, 0x03	; 3
    21e6:	c5 51       	subi	r28, 0x15	; 21
    21e8:	df 4f       	sbci	r29, 0xFF	; 255
    21ea:	98 83       	st	Y, r25
    21ec:	cb 5e       	subi	r28, 0xEB	; 235
    21ee:	d0 40       	sbci	r29, 0x00	; 0
    21f0:	c7 51       	subi	r28, 0x17	; 23
    21f2:	df 4f       	sbci	r29, 0xFF	; 255
    21f4:	e8 81       	ld	r30, Y
    21f6:	f9 81       	ldd	r31, Y+1	; 0x01
    21f8:	c9 5e       	subi	r28, 0xE9	; 233
    21fa:	d0 40       	sbci	r29, 0x00	; 0
    21fc:	00 80       	ld	r0, Z
    21fe:	c7 51       	subi	r28, 0x17	; 23
    2200:	df 4f       	sbci	r29, 0xFF	; 255
    2202:	88 81       	ld	r24, Y
    2204:	99 81       	ldd	r25, Y+1	; 0x01
    2206:	c9 5e       	subi	r28, 0xE9	; 233
    2208:	d0 40       	sbci	r29, 0x00	; 0
    220a:	01 96       	adiw	r24, 0x01	; 1
    220c:	c7 51       	subi	r28, 0x17	; 23
    220e:	df 4f       	sbci	r29, 0xFF	; 255
    2210:	99 83       	std	Y+1, r25	; 0x01
    2212:	88 83       	st	Y, r24
    2214:	c9 5e       	subi	r28, 0xE9	; 233
    2216:	d0 40       	sbci	r29, 0x00	; 0
    2218:	c9 51       	subi	r28, 0x19	; 25
    221a:	df 4f       	sbci	r29, 0xFF	; 255
    221c:	e8 81       	ld	r30, Y
    221e:	f9 81       	ldd	r31, Y+1	; 0x01
    2220:	c7 5e       	subi	r28, 0xE7	; 231
    2222:	d0 40       	sbci	r29, 0x00	; 0
    2224:	00 82       	st	Z, r0
    2226:	c9 51       	subi	r28, 0x19	; 25
    2228:	df 4f       	sbci	r29, 0xFF	; 255
    222a:	88 81       	ld	r24, Y
    222c:	99 81       	ldd	r25, Y+1	; 0x01
    222e:	c7 5e       	subi	r28, 0xE7	; 231
    2230:	d0 40       	sbci	r29, 0x00	; 0
    2232:	01 96       	adiw	r24, 0x01	; 1
    2234:	c9 51       	subi	r28, 0x19	; 25
    2236:	df 4f       	sbci	r29, 0xFF	; 255
    2238:	99 83       	std	Y+1, r25	; 0x01
    223a:	88 83       	st	Y, r24
    223c:	c7 5e       	subi	r28, 0xE7	; 231
    223e:	d0 40       	sbci	r29, 0x00	; 0
    2240:	c5 51       	subi	r28, 0x15	; 21
    2242:	df 4f       	sbci	r29, 0xFF	; 255
    2244:	98 81       	ld	r25, Y
    2246:	cb 5e       	subi	r28, 0xEB	; 235
    2248:	d0 40       	sbci	r29, 0x00	; 0
    224a:	91 50       	subi	r25, 0x01	; 1
    224c:	c5 51       	subi	r28, 0x15	; 21
    224e:	df 4f       	sbci	r29, 0xFF	; 255
    2250:	98 83       	st	Y, r25
    2252:	cb 5e       	subi	r28, 0xEB	; 235
    2254:	d0 40       	sbci	r29, 0x00	; 0
    2256:	c5 51       	subi	r28, 0x15	; 21
    2258:	df 4f       	sbci	r29, 0xFF	; 255
    225a:	e8 81       	ld	r30, Y
    225c:	cb 5e       	subi	r28, 0xEB	; 235
    225e:	d0 40       	sbci	r29, 0x00	; 0
    2260:	ee 23       	and	r30, r30
    2262:	31 f6       	brne	.-116    	; 0x21f0 <main+0x18c>
	LED_CONF LED3 = {LED_PORTA, LED_PIN3, ACTIVE_HIGH};
    2264:	ce 01       	movw	r24, r28
    2266:	82 53       	subi	r24, 0x32	; 50
    2268:	9f 4f       	sbci	r25, 0xFF	; 255
    226a:	c4 51       	subi	r28, 0x14	; 20
    226c:	df 4f       	sbci	r29, 0xFF	; 255
    226e:	99 83       	std	Y+1, r25	; 0x01
    2270:	88 83       	st	Y, r24
    2272:	cc 5e       	subi	r28, 0xEC	; 236
    2274:	d0 40       	sbci	r29, 0x00	; 0
    2276:	84 e7       	ldi	r24, 0x74	; 116
    2278:	90 e0       	ldi	r25, 0x00	; 0
    227a:	c2 51       	subi	r28, 0x12	; 18
    227c:	df 4f       	sbci	r29, 0xFF	; 255
    227e:	99 83       	std	Y+1, r25	; 0x01
    2280:	88 83       	st	Y, r24
    2282:	ce 5e       	subi	r28, 0xEE	; 238
    2284:	d0 40       	sbci	r29, 0x00	; 0
    2286:	93 e0       	ldi	r25, 0x03	; 3
    2288:	c0 51       	subi	r28, 0x10	; 16
    228a:	df 4f       	sbci	r29, 0xFF	; 255
    228c:	98 83       	st	Y, r25
    228e:	c0 5f       	subi	r28, 0xF0	; 240
    2290:	d0 40       	sbci	r29, 0x00	; 0
    2292:	c2 51       	subi	r28, 0x12	; 18
    2294:	df 4f       	sbci	r29, 0xFF	; 255
    2296:	e8 81       	ld	r30, Y
    2298:	f9 81       	ldd	r31, Y+1	; 0x01
    229a:	ce 5e       	subi	r28, 0xEE	; 238
    229c:	d0 40       	sbci	r29, 0x00	; 0
    229e:	00 80       	ld	r0, Z
    22a0:	c2 51       	subi	r28, 0x12	; 18
    22a2:	df 4f       	sbci	r29, 0xFF	; 255
    22a4:	88 81       	ld	r24, Y
    22a6:	99 81       	ldd	r25, Y+1	; 0x01
    22a8:	ce 5e       	subi	r28, 0xEE	; 238
    22aa:	d0 40       	sbci	r29, 0x00	; 0
    22ac:	01 96       	adiw	r24, 0x01	; 1
    22ae:	c2 51       	subi	r28, 0x12	; 18
    22b0:	df 4f       	sbci	r29, 0xFF	; 255
    22b2:	99 83       	std	Y+1, r25	; 0x01
    22b4:	88 83       	st	Y, r24
    22b6:	ce 5e       	subi	r28, 0xEE	; 238
    22b8:	d0 40       	sbci	r29, 0x00	; 0
    22ba:	c4 51       	subi	r28, 0x14	; 20
    22bc:	df 4f       	sbci	r29, 0xFF	; 255
    22be:	e8 81       	ld	r30, Y
    22c0:	f9 81       	ldd	r31, Y+1	; 0x01
    22c2:	cc 5e       	subi	r28, 0xEC	; 236
    22c4:	d0 40       	sbci	r29, 0x00	; 0
    22c6:	00 82       	st	Z, r0
    22c8:	c4 51       	subi	r28, 0x14	; 20
    22ca:	df 4f       	sbci	r29, 0xFF	; 255
    22cc:	88 81       	ld	r24, Y
    22ce:	99 81       	ldd	r25, Y+1	; 0x01
    22d0:	cc 5e       	subi	r28, 0xEC	; 236
    22d2:	d0 40       	sbci	r29, 0x00	; 0
    22d4:	01 96       	adiw	r24, 0x01	; 1
    22d6:	c4 51       	subi	r28, 0x14	; 20
    22d8:	df 4f       	sbci	r29, 0xFF	; 255
    22da:	99 83       	std	Y+1, r25	; 0x01
    22dc:	88 83       	st	Y, r24
    22de:	cc 5e       	subi	r28, 0xEC	; 236
    22e0:	d0 40       	sbci	r29, 0x00	; 0
    22e2:	c0 51       	subi	r28, 0x10	; 16
    22e4:	df 4f       	sbci	r29, 0xFF	; 255
    22e6:	98 81       	ld	r25, Y
    22e8:	c0 5f       	subi	r28, 0xF0	; 240
    22ea:	d0 40       	sbci	r29, 0x00	; 0
    22ec:	91 50       	subi	r25, 0x01	; 1
    22ee:	c0 51       	subi	r28, 0x10	; 16
    22f0:	df 4f       	sbci	r29, 0xFF	; 255
    22f2:	98 83       	st	Y, r25
    22f4:	c0 5f       	subi	r28, 0xF0	; 240
    22f6:	d0 40       	sbci	r29, 0x00	; 0
    22f8:	c0 51       	subi	r28, 0x10	; 16
    22fa:	df 4f       	sbci	r29, 0xFF	; 255
    22fc:	e8 81       	ld	r30, Y
    22fe:	c0 5f       	subi	r28, 0xF0	; 240
    2300:	d0 40       	sbci	r29, 0x00	; 0
    2302:	ee 23       	and	r30, r30
    2304:	31 f6       	brne	.-116    	; 0x2292 <main+0x22e>
	LED_CONF LED4 = {LED_PORTA, LED_PIN4, ACTIVE_HIGH};
    2306:	ce 01       	movw	r24, r28
    2308:	8f 52       	subi	r24, 0x2F	; 47
    230a:	9f 4f       	sbci	r25, 0xFF	; 255
    230c:	cf 50       	subi	r28, 0x0F	; 15
    230e:	df 4f       	sbci	r29, 0xFF	; 255
    2310:	99 83       	std	Y+1, r25	; 0x01
    2312:	88 83       	st	Y, r24
    2314:	c1 5f       	subi	r28, 0xF1	; 241
    2316:	d0 40       	sbci	r29, 0x00	; 0
    2318:	81 e7       	ldi	r24, 0x71	; 113
    231a:	90 e0       	ldi	r25, 0x00	; 0
    231c:	cd 50       	subi	r28, 0x0D	; 13
    231e:	df 4f       	sbci	r29, 0xFF	; 255
    2320:	99 83       	std	Y+1, r25	; 0x01
    2322:	88 83       	st	Y, r24
    2324:	c3 5f       	subi	r28, 0xF3	; 243
    2326:	d0 40       	sbci	r29, 0x00	; 0
    2328:	93 e0       	ldi	r25, 0x03	; 3
    232a:	cb 50       	subi	r28, 0x0B	; 11
    232c:	df 4f       	sbci	r29, 0xFF	; 255
    232e:	98 83       	st	Y, r25
    2330:	c5 5f       	subi	r28, 0xF5	; 245
    2332:	d0 40       	sbci	r29, 0x00	; 0
    2334:	cd 50       	subi	r28, 0x0D	; 13
    2336:	df 4f       	sbci	r29, 0xFF	; 255
    2338:	e8 81       	ld	r30, Y
    233a:	f9 81       	ldd	r31, Y+1	; 0x01
    233c:	c3 5f       	subi	r28, 0xF3	; 243
    233e:	d0 40       	sbci	r29, 0x00	; 0
    2340:	00 80       	ld	r0, Z
    2342:	cd 50       	subi	r28, 0x0D	; 13
    2344:	df 4f       	sbci	r29, 0xFF	; 255
    2346:	88 81       	ld	r24, Y
    2348:	99 81       	ldd	r25, Y+1	; 0x01
    234a:	c3 5f       	subi	r28, 0xF3	; 243
    234c:	d0 40       	sbci	r29, 0x00	; 0
    234e:	01 96       	adiw	r24, 0x01	; 1
    2350:	cd 50       	subi	r28, 0x0D	; 13
    2352:	df 4f       	sbci	r29, 0xFF	; 255
    2354:	99 83       	std	Y+1, r25	; 0x01
    2356:	88 83       	st	Y, r24
    2358:	c3 5f       	subi	r28, 0xF3	; 243
    235a:	d0 40       	sbci	r29, 0x00	; 0
    235c:	cf 50       	subi	r28, 0x0F	; 15
    235e:	df 4f       	sbci	r29, 0xFF	; 255
    2360:	e8 81       	ld	r30, Y
    2362:	f9 81       	ldd	r31, Y+1	; 0x01
    2364:	c1 5f       	subi	r28, 0xF1	; 241
    2366:	d0 40       	sbci	r29, 0x00	; 0
    2368:	00 82       	st	Z, r0
    236a:	cf 50       	subi	r28, 0x0F	; 15
    236c:	df 4f       	sbci	r29, 0xFF	; 255
    236e:	88 81       	ld	r24, Y
    2370:	99 81       	ldd	r25, Y+1	; 0x01
    2372:	c1 5f       	subi	r28, 0xF1	; 241
    2374:	d0 40       	sbci	r29, 0x00	; 0
    2376:	01 96       	adiw	r24, 0x01	; 1
    2378:	cf 50       	subi	r28, 0x0F	; 15
    237a:	df 4f       	sbci	r29, 0xFF	; 255
    237c:	99 83       	std	Y+1, r25	; 0x01
    237e:	88 83       	st	Y, r24
    2380:	c1 5f       	subi	r28, 0xF1	; 241
    2382:	d0 40       	sbci	r29, 0x00	; 0
    2384:	cb 50       	subi	r28, 0x0B	; 11
    2386:	df 4f       	sbci	r29, 0xFF	; 255
    2388:	98 81       	ld	r25, Y
    238a:	c5 5f       	subi	r28, 0xF5	; 245
    238c:	d0 40       	sbci	r29, 0x00	; 0
    238e:	91 50       	subi	r25, 0x01	; 1
    2390:	cb 50       	subi	r28, 0x0B	; 11
    2392:	df 4f       	sbci	r29, 0xFF	; 255
    2394:	98 83       	st	Y, r25
    2396:	c5 5f       	subi	r28, 0xF5	; 245
    2398:	d0 40       	sbci	r29, 0x00	; 0
    239a:	cb 50       	subi	r28, 0x0B	; 11
    239c:	df 4f       	sbci	r29, 0xFF	; 255
    239e:	e8 81       	ld	r30, Y
    23a0:	c5 5f       	subi	r28, 0xF5	; 245
    23a2:	d0 40       	sbci	r29, 0x00	; 0
    23a4:	ee 23       	and	r30, r30
    23a6:	31 f6       	brne	.-116    	; 0x2334 <main+0x2d0>
	LED_CONF LED5 = {LED_PORTA, LED_PIN5, ACTIVE_HIGH};
    23a8:	ce 01       	movw	r24, r28
    23aa:	8c 52       	subi	r24, 0x2C	; 44
    23ac:	9f 4f       	sbci	r25, 0xFF	; 255
    23ae:	ca 50       	subi	r28, 0x0A	; 10
    23b0:	df 4f       	sbci	r29, 0xFF	; 255
    23b2:	99 83       	std	Y+1, r25	; 0x01
    23b4:	88 83       	st	Y, r24
    23b6:	c6 5f       	subi	r28, 0xF6	; 246
    23b8:	d0 40       	sbci	r29, 0x00	; 0
    23ba:	8e e6       	ldi	r24, 0x6E	; 110
    23bc:	90 e0       	ldi	r25, 0x00	; 0
    23be:	c8 50       	subi	r28, 0x08	; 8
    23c0:	df 4f       	sbci	r29, 0xFF	; 255
    23c2:	99 83       	std	Y+1, r25	; 0x01
    23c4:	88 83       	st	Y, r24
    23c6:	c8 5f       	subi	r28, 0xF8	; 248
    23c8:	d0 40       	sbci	r29, 0x00	; 0
    23ca:	93 e0       	ldi	r25, 0x03	; 3
    23cc:	c6 50       	subi	r28, 0x06	; 6
    23ce:	df 4f       	sbci	r29, 0xFF	; 255
    23d0:	98 83       	st	Y, r25
    23d2:	ca 5f       	subi	r28, 0xFA	; 250
    23d4:	d0 40       	sbci	r29, 0x00	; 0
    23d6:	c8 50       	subi	r28, 0x08	; 8
    23d8:	df 4f       	sbci	r29, 0xFF	; 255
    23da:	e8 81       	ld	r30, Y
    23dc:	f9 81       	ldd	r31, Y+1	; 0x01
    23de:	c8 5f       	subi	r28, 0xF8	; 248
    23e0:	d0 40       	sbci	r29, 0x00	; 0
    23e2:	00 80       	ld	r0, Z
    23e4:	c8 50       	subi	r28, 0x08	; 8
    23e6:	df 4f       	sbci	r29, 0xFF	; 255
    23e8:	88 81       	ld	r24, Y
    23ea:	99 81       	ldd	r25, Y+1	; 0x01
    23ec:	c8 5f       	subi	r28, 0xF8	; 248
    23ee:	d0 40       	sbci	r29, 0x00	; 0
    23f0:	01 96       	adiw	r24, 0x01	; 1
    23f2:	c8 50       	subi	r28, 0x08	; 8
    23f4:	df 4f       	sbci	r29, 0xFF	; 255
    23f6:	99 83       	std	Y+1, r25	; 0x01
    23f8:	88 83       	st	Y, r24
    23fa:	c8 5f       	subi	r28, 0xF8	; 248
    23fc:	d0 40       	sbci	r29, 0x00	; 0
    23fe:	ca 50       	subi	r28, 0x0A	; 10
    2400:	df 4f       	sbci	r29, 0xFF	; 255
    2402:	e8 81       	ld	r30, Y
    2404:	f9 81       	ldd	r31, Y+1	; 0x01
    2406:	c6 5f       	subi	r28, 0xF6	; 246
    2408:	d0 40       	sbci	r29, 0x00	; 0
    240a:	00 82       	st	Z, r0
    240c:	ca 50       	subi	r28, 0x0A	; 10
    240e:	df 4f       	sbci	r29, 0xFF	; 255
    2410:	88 81       	ld	r24, Y
    2412:	99 81       	ldd	r25, Y+1	; 0x01
    2414:	c6 5f       	subi	r28, 0xF6	; 246
    2416:	d0 40       	sbci	r29, 0x00	; 0
    2418:	01 96       	adiw	r24, 0x01	; 1
    241a:	ca 50       	subi	r28, 0x0A	; 10
    241c:	df 4f       	sbci	r29, 0xFF	; 255
    241e:	99 83       	std	Y+1, r25	; 0x01
    2420:	88 83       	st	Y, r24
    2422:	c6 5f       	subi	r28, 0xF6	; 246
    2424:	d0 40       	sbci	r29, 0x00	; 0
    2426:	c6 50       	subi	r28, 0x06	; 6
    2428:	df 4f       	sbci	r29, 0xFF	; 255
    242a:	98 81       	ld	r25, Y
    242c:	ca 5f       	subi	r28, 0xFA	; 250
    242e:	d0 40       	sbci	r29, 0x00	; 0
    2430:	91 50       	subi	r25, 0x01	; 1
    2432:	c6 50       	subi	r28, 0x06	; 6
    2434:	df 4f       	sbci	r29, 0xFF	; 255
    2436:	98 83       	st	Y, r25
    2438:	ca 5f       	subi	r28, 0xFA	; 250
    243a:	d0 40       	sbci	r29, 0x00	; 0
    243c:	c6 50       	subi	r28, 0x06	; 6
    243e:	df 4f       	sbci	r29, 0xFF	; 255
    2440:	e8 81       	ld	r30, Y
    2442:	ca 5f       	subi	r28, 0xFA	; 250
    2444:	d0 40       	sbci	r29, 0x00	; 0
    2446:	ee 23       	and	r30, r30
    2448:	31 f6       	brne	.-116    	; 0x23d6 <main+0x372>
	LED_CONF LED6 = {LED_PORTA, LED_PIN6, ACTIVE_HIGH};
    244a:	ce 01       	movw	r24, r28
    244c:	89 52       	subi	r24, 0x29	; 41
    244e:	9f 4f       	sbci	r25, 0xFF	; 255
    2450:	c5 50       	subi	r28, 0x05	; 5
    2452:	df 4f       	sbci	r29, 0xFF	; 255
    2454:	99 83       	std	Y+1, r25	; 0x01
    2456:	88 83       	st	Y, r24
    2458:	cb 5f       	subi	r28, 0xFB	; 251
    245a:	d0 40       	sbci	r29, 0x00	; 0
    245c:	8b e6       	ldi	r24, 0x6B	; 107
    245e:	90 e0       	ldi	r25, 0x00	; 0
    2460:	c3 50       	subi	r28, 0x03	; 3
    2462:	df 4f       	sbci	r29, 0xFF	; 255
    2464:	99 83       	std	Y+1, r25	; 0x01
    2466:	88 83       	st	Y, r24
    2468:	cd 5f       	subi	r28, 0xFD	; 253
    246a:	d0 40       	sbci	r29, 0x00	; 0
    246c:	93 e0       	ldi	r25, 0x03	; 3
    246e:	c1 50       	subi	r28, 0x01	; 1
    2470:	df 4f       	sbci	r29, 0xFF	; 255
    2472:	98 83       	st	Y, r25
    2474:	cf 5f       	subi	r28, 0xFF	; 255
    2476:	d0 40       	sbci	r29, 0x00	; 0
    2478:	c3 50       	subi	r28, 0x03	; 3
    247a:	df 4f       	sbci	r29, 0xFF	; 255
    247c:	e8 81       	ld	r30, Y
    247e:	f9 81       	ldd	r31, Y+1	; 0x01
    2480:	cd 5f       	subi	r28, 0xFD	; 253
    2482:	d0 40       	sbci	r29, 0x00	; 0
    2484:	00 80       	ld	r0, Z
    2486:	c3 50       	subi	r28, 0x03	; 3
    2488:	df 4f       	sbci	r29, 0xFF	; 255
    248a:	88 81       	ld	r24, Y
    248c:	99 81       	ldd	r25, Y+1	; 0x01
    248e:	cd 5f       	subi	r28, 0xFD	; 253
    2490:	d0 40       	sbci	r29, 0x00	; 0
    2492:	01 96       	adiw	r24, 0x01	; 1
    2494:	c3 50       	subi	r28, 0x03	; 3
    2496:	df 4f       	sbci	r29, 0xFF	; 255
    2498:	99 83       	std	Y+1, r25	; 0x01
    249a:	88 83       	st	Y, r24
    249c:	cd 5f       	subi	r28, 0xFD	; 253
    249e:	d0 40       	sbci	r29, 0x00	; 0
    24a0:	c5 50       	subi	r28, 0x05	; 5
    24a2:	df 4f       	sbci	r29, 0xFF	; 255
    24a4:	e8 81       	ld	r30, Y
    24a6:	f9 81       	ldd	r31, Y+1	; 0x01
    24a8:	cb 5f       	subi	r28, 0xFB	; 251
    24aa:	d0 40       	sbci	r29, 0x00	; 0
    24ac:	00 82       	st	Z, r0
    24ae:	c5 50       	subi	r28, 0x05	; 5
    24b0:	df 4f       	sbci	r29, 0xFF	; 255
    24b2:	88 81       	ld	r24, Y
    24b4:	99 81       	ldd	r25, Y+1	; 0x01
    24b6:	cb 5f       	subi	r28, 0xFB	; 251
    24b8:	d0 40       	sbci	r29, 0x00	; 0
    24ba:	01 96       	adiw	r24, 0x01	; 1
    24bc:	c5 50       	subi	r28, 0x05	; 5
    24be:	df 4f       	sbci	r29, 0xFF	; 255
    24c0:	99 83       	std	Y+1, r25	; 0x01
    24c2:	88 83       	st	Y, r24
    24c4:	cb 5f       	subi	r28, 0xFB	; 251
    24c6:	d0 40       	sbci	r29, 0x00	; 0
    24c8:	c1 50       	subi	r28, 0x01	; 1
    24ca:	df 4f       	sbci	r29, 0xFF	; 255
    24cc:	98 81       	ld	r25, Y
    24ce:	cf 5f       	subi	r28, 0xFF	; 255
    24d0:	d0 40       	sbci	r29, 0x00	; 0
    24d2:	91 50       	subi	r25, 0x01	; 1
    24d4:	c1 50       	subi	r28, 0x01	; 1
    24d6:	df 4f       	sbci	r29, 0xFF	; 255
    24d8:	98 83       	st	Y, r25
    24da:	cf 5f       	subi	r28, 0xFF	; 255
    24dc:	d0 40       	sbci	r29, 0x00	; 0
    24de:	c1 50       	subi	r28, 0x01	; 1
    24e0:	df 4f       	sbci	r29, 0xFF	; 255
    24e2:	e8 81       	ld	r30, Y
    24e4:	cf 5f       	subi	r28, 0xFF	; 255
    24e6:	d0 40       	sbci	r29, 0x00	; 0
    24e8:	ee 23       	and	r30, r30
    24ea:	31 f6       	brne	.-116    	; 0x2478 <main+0x414>
	LED_CONF LED7 = {LED_PORTA, LED_PIN7, ACTIVE_HIGH};
    24ec:	ce 01       	movw	r24, r28
    24ee:	86 52       	subi	r24, 0x26	; 38
    24f0:	9f 4f       	sbci	r25, 0xFF	; 255
    24f2:	c0 50       	subi	r28, 0x00	; 0
    24f4:	df 4f       	sbci	r29, 0xFF	; 255
    24f6:	99 83       	std	Y+1, r25	; 0x01
    24f8:	88 83       	st	Y, r24
    24fa:	c0 50       	subi	r28, 0x00	; 0
    24fc:	d1 40       	sbci	r29, 0x01	; 1
    24fe:	88 e6       	ldi	r24, 0x68	; 104
    2500:	90 e0       	ldi	r25, 0x00	; 0
    2502:	ce 5f       	subi	r28, 0xFE	; 254
    2504:	de 4f       	sbci	r29, 0xFE	; 254
    2506:	99 83       	std	Y+1, r25	; 0x01
    2508:	88 83       	st	Y, r24
    250a:	c2 50       	subi	r28, 0x02	; 2
    250c:	d1 40       	sbci	r29, 0x01	; 1
    250e:	93 e0       	ldi	r25, 0x03	; 3
    2510:	cc 5f       	subi	r28, 0xFC	; 252
    2512:	de 4f       	sbci	r29, 0xFE	; 254
    2514:	98 83       	st	Y, r25
    2516:	c4 50       	subi	r28, 0x04	; 4
    2518:	d1 40       	sbci	r29, 0x01	; 1
    251a:	ce 5f       	subi	r28, 0xFE	; 254
    251c:	de 4f       	sbci	r29, 0xFE	; 254
    251e:	e8 81       	ld	r30, Y
    2520:	f9 81       	ldd	r31, Y+1	; 0x01
    2522:	c2 50       	subi	r28, 0x02	; 2
    2524:	d1 40       	sbci	r29, 0x01	; 1
    2526:	00 80       	ld	r0, Z
    2528:	ce 5f       	subi	r28, 0xFE	; 254
    252a:	de 4f       	sbci	r29, 0xFE	; 254
    252c:	88 81       	ld	r24, Y
    252e:	99 81       	ldd	r25, Y+1	; 0x01
    2530:	c2 50       	subi	r28, 0x02	; 2
    2532:	d1 40       	sbci	r29, 0x01	; 1
    2534:	01 96       	adiw	r24, 0x01	; 1
    2536:	ce 5f       	subi	r28, 0xFE	; 254
    2538:	de 4f       	sbci	r29, 0xFE	; 254
    253a:	99 83       	std	Y+1, r25	; 0x01
    253c:	88 83       	st	Y, r24
    253e:	c2 50       	subi	r28, 0x02	; 2
    2540:	d1 40       	sbci	r29, 0x01	; 1
    2542:	c0 50       	subi	r28, 0x00	; 0
    2544:	df 4f       	sbci	r29, 0xFF	; 255
    2546:	e8 81       	ld	r30, Y
    2548:	f9 81       	ldd	r31, Y+1	; 0x01
    254a:	c0 50       	subi	r28, 0x00	; 0
    254c:	d1 40       	sbci	r29, 0x01	; 1
    254e:	00 82       	st	Z, r0
    2550:	c0 50       	subi	r28, 0x00	; 0
    2552:	df 4f       	sbci	r29, 0xFF	; 255
    2554:	88 81       	ld	r24, Y
    2556:	99 81       	ldd	r25, Y+1	; 0x01
    2558:	c0 50       	subi	r28, 0x00	; 0
    255a:	d1 40       	sbci	r29, 0x01	; 1
    255c:	01 96       	adiw	r24, 0x01	; 1
    255e:	c0 50       	subi	r28, 0x00	; 0
    2560:	df 4f       	sbci	r29, 0xFF	; 255
    2562:	99 83       	std	Y+1, r25	; 0x01
    2564:	88 83       	st	Y, r24
    2566:	c0 50       	subi	r28, 0x00	; 0
    2568:	d1 40       	sbci	r29, 0x01	; 1
    256a:	cc 5f       	subi	r28, 0xFC	; 252
    256c:	de 4f       	sbci	r29, 0xFE	; 254
    256e:	98 81       	ld	r25, Y
    2570:	c4 50       	subi	r28, 0x04	; 4
    2572:	d1 40       	sbci	r29, 0x01	; 1
    2574:	91 50       	subi	r25, 0x01	; 1
    2576:	cc 5f       	subi	r28, 0xFC	; 252
    2578:	de 4f       	sbci	r29, 0xFE	; 254
    257a:	98 83       	st	Y, r25
    257c:	c4 50       	subi	r28, 0x04	; 4
    257e:	d1 40       	sbci	r29, 0x01	; 1
    2580:	cc 5f       	subi	r28, 0xFC	; 252
    2582:	de 4f       	sbci	r29, 0xFE	; 254
    2584:	e8 81       	ld	r30, Y
    2586:	c4 50       	subi	r28, 0x04	; 4
    2588:	d1 40       	sbci	r29, 0x01	; 1
    258a:	ee 23       	and	r30, r30
    258c:	31 f6       	brne	.-116    	; 0x251a <main+0x4b6>



	LED_voidInIt(LED0);
    258e:	fe 01       	movw	r30, r28
    2590:	eb 53       	subi	r30, 0x3B	; 59
    2592:	ff 4f       	sbci	r31, 0xFF	; 255
    2594:	60 81       	ld	r22, Z
    2596:	71 81       	ldd	r23, Z+1	; 0x01
    2598:	82 81       	ldd	r24, Z+2	; 0x02
    259a:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <LED_voidInIt>
	LED_voidInIt(LED1);
    259e:	fe 01       	movw	r30, r28
    25a0:	e8 53       	subi	r30, 0x38	; 56
    25a2:	ff 4f       	sbci	r31, 0xFF	; 255
    25a4:	60 81       	ld	r22, Z
    25a6:	71 81       	ldd	r23, Z+1	; 0x01
    25a8:	82 81       	ldd	r24, Z+2	; 0x02
    25aa:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <LED_voidInIt>
	LED_voidInIt(LED2);
    25ae:	fe 01       	movw	r30, r28
    25b0:	e5 53       	subi	r30, 0x35	; 53
    25b2:	ff 4f       	sbci	r31, 0xFF	; 255
    25b4:	60 81       	ld	r22, Z
    25b6:	71 81       	ldd	r23, Z+1	; 0x01
    25b8:	82 81       	ldd	r24, Z+2	; 0x02
    25ba:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <LED_voidInIt>
	LED_voidInIt(LED3);
    25be:	fe 01       	movw	r30, r28
    25c0:	e2 53       	subi	r30, 0x32	; 50
    25c2:	ff 4f       	sbci	r31, 0xFF	; 255
    25c4:	60 81       	ld	r22, Z
    25c6:	71 81       	ldd	r23, Z+1	; 0x01
    25c8:	82 81       	ldd	r24, Z+2	; 0x02
    25ca:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <LED_voidInIt>
	LED_voidInIt(LED4);
    25ce:	fe 01       	movw	r30, r28
    25d0:	ef 52       	subi	r30, 0x2F	; 47
    25d2:	ff 4f       	sbci	r31, 0xFF	; 255
    25d4:	60 81       	ld	r22, Z
    25d6:	71 81       	ldd	r23, Z+1	; 0x01
    25d8:	82 81       	ldd	r24, Z+2	; 0x02
    25da:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <LED_voidInIt>
	LED_voidInIt(LED5);
    25de:	fe 01       	movw	r30, r28
    25e0:	ec 52       	subi	r30, 0x2C	; 44
    25e2:	ff 4f       	sbci	r31, 0xFF	; 255
    25e4:	60 81       	ld	r22, Z
    25e6:	71 81       	ldd	r23, Z+1	; 0x01
    25e8:	82 81       	ldd	r24, Z+2	; 0x02
    25ea:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <LED_voidInIt>
	LED_voidInIt(LED6);
    25ee:	fe 01       	movw	r30, r28
    25f0:	e9 52       	subi	r30, 0x29	; 41
    25f2:	ff 4f       	sbci	r31, 0xFF	; 255
    25f4:	60 81       	ld	r22, Z
    25f6:	71 81       	ldd	r23, Z+1	; 0x01
    25f8:	82 81       	ldd	r24, Z+2	; 0x02
    25fa:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <LED_voidInIt>
	LED_voidInIt(LED7);
    25fe:	fe 01       	movw	r30, r28
    2600:	e6 52       	subi	r30, 0x26	; 38
    2602:	ff 4f       	sbci	r31, 0xFF	; 255
    2604:	60 81       	ld	r22, Z
    2606:	71 81       	ldd	r23, Z+1	; 0x01
    2608:	82 81       	ldd	r24, Z+2	; 0x02
    260a:	0e 94 c5 0f 	call	0x1f8a	; 0x1f8a <LED_voidInIt>



	while(1)
			{
				LED_voidON(LED0);
    260e:	fe 01       	movw	r30, r28
    2610:	eb 53       	subi	r30, 0x3B	; 59
    2612:	ff 4f       	sbci	r31, 0xFF	; 255
    2614:	60 81       	ld	r22, Z
    2616:	71 81       	ldd	r23, Z+1	; 0x01
    2618:	82 81       	ldd	r24, Z+2	; 0x02
    261a:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED1);
    261e:	fe 01       	movw	r30, r28
    2620:	e8 53       	subi	r30, 0x38	; 56
    2622:	ff 4f       	sbci	r31, 0xFF	; 255
    2624:	60 81       	ld	r22, Z
    2626:	71 81       	ldd	r23, Z+1	; 0x01
    2628:	82 81       	ldd	r24, Z+2	; 0x02
    262a:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    262e:	fe 01       	movw	r30, r28
    2630:	ef 53       	subi	r30, 0x3F	; 63
    2632:	ff 4f       	sbci	r31, 0xFF	; 255
    2634:	80 e0       	ldi	r24, 0x00	; 0
    2636:	90 e0       	ldi	r25, 0x00	; 0
    2638:	aa e7       	ldi	r26, 0x7A	; 122
    263a:	b3 e4       	ldi	r27, 0x43	; 67
    263c:	80 83       	st	Z, r24
    263e:	91 83       	std	Z+1, r25	; 0x01
    2640:	a2 83       	std	Z+2, r26	; 0x02
    2642:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2644:	8e 01       	movw	r16, r28
    2646:	03 54       	subi	r16, 0x43	; 67
    2648:	1f 4f       	sbci	r17, 0xFF	; 255
    264a:	fe 01       	movw	r30, r28
    264c:	ef 53       	subi	r30, 0x3F	; 63
    264e:	ff 4f       	sbci	r31, 0xFF	; 255
    2650:	60 81       	ld	r22, Z
    2652:	71 81       	ldd	r23, Z+1	; 0x01
    2654:	82 81       	ldd	r24, Z+2	; 0x02
    2656:	93 81       	ldd	r25, Z+3	; 0x03
    2658:	20 e0       	ldi	r18, 0x00	; 0
    265a:	30 e0       	ldi	r19, 0x00	; 0
    265c:	4a ef       	ldi	r20, 0xFA	; 250
    265e:	54 e4       	ldi	r21, 0x44	; 68
    2660:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2664:	dc 01       	movw	r26, r24
    2666:	cb 01       	movw	r24, r22
    2668:	f8 01       	movw	r30, r16
    266a:	80 83       	st	Z, r24
    266c:	91 83       	std	Z+1, r25	; 0x01
    266e:	a2 83       	std	Z+2, r26	; 0x02
    2670:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2672:	fe 01       	movw	r30, r28
    2674:	e3 54       	subi	r30, 0x43	; 67
    2676:	ff 4f       	sbci	r31, 0xFF	; 255
    2678:	60 81       	ld	r22, Z
    267a:	71 81       	ldd	r23, Z+1	; 0x01
    267c:	82 81       	ldd	r24, Z+2	; 0x02
    267e:	93 81       	ldd	r25, Z+3	; 0x03
    2680:	20 e0       	ldi	r18, 0x00	; 0
    2682:	30 e0       	ldi	r19, 0x00	; 0
    2684:	40 e8       	ldi	r20, 0x80	; 128
    2686:	5f e3       	ldi	r21, 0x3F	; 63
    2688:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    268c:	88 23       	and	r24, r24
    268e:	44 f4       	brge	.+16     	; 0x26a0 <main+0x63c>
		__ticks = 1;
    2690:	fe 01       	movw	r30, r28
    2692:	e5 54       	subi	r30, 0x45	; 69
    2694:	ff 4f       	sbci	r31, 0xFF	; 255
    2696:	81 e0       	ldi	r24, 0x01	; 1
    2698:	90 e0       	ldi	r25, 0x00	; 0
    269a:	91 83       	std	Z+1, r25	; 0x01
    269c:	80 83       	st	Z, r24
    269e:	64 c0       	rjmp	.+200    	; 0x2768 <main+0x704>
	else if (__tmp > 65535)
    26a0:	fe 01       	movw	r30, r28
    26a2:	e3 54       	subi	r30, 0x43	; 67
    26a4:	ff 4f       	sbci	r31, 0xFF	; 255
    26a6:	60 81       	ld	r22, Z
    26a8:	71 81       	ldd	r23, Z+1	; 0x01
    26aa:	82 81       	ldd	r24, Z+2	; 0x02
    26ac:	93 81       	ldd	r25, Z+3	; 0x03
    26ae:	20 e0       	ldi	r18, 0x00	; 0
    26b0:	3f ef       	ldi	r19, 0xFF	; 255
    26b2:	4f e7       	ldi	r20, 0x7F	; 127
    26b4:	57 e4       	ldi	r21, 0x47	; 71
    26b6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    26ba:	18 16       	cp	r1, r24
    26bc:	0c f0       	brlt	.+2      	; 0x26c0 <main+0x65c>
    26be:	43 c0       	rjmp	.+134    	; 0x2746 <main+0x6e2>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    26c0:	fe 01       	movw	r30, r28
    26c2:	ef 53       	subi	r30, 0x3F	; 63
    26c4:	ff 4f       	sbci	r31, 0xFF	; 255
    26c6:	60 81       	ld	r22, Z
    26c8:	71 81       	ldd	r23, Z+1	; 0x01
    26ca:	82 81       	ldd	r24, Z+2	; 0x02
    26cc:	93 81       	ldd	r25, Z+3	; 0x03
    26ce:	20 e0       	ldi	r18, 0x00	; 0
    26d0:	30 e0       	ldi	r19, 0x00	; 0
    26d2:	40 e2       	ldi	r20, 0x20	; 32
    26d4:	51 e4       	ldi	r21, 0x41	; 65
    26d6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26da:	dc 01       	movw	r26, r24
    26dc:	cb 01       	movw	r24, r22
    26de:	8e 01       	movw	r16, r28
    26e0:	05 54       	subi	r16, 0x45	; 69
    26e2:	1f 4f       	sbci	r17, 0xFF	; 255
    26e4:	bc 01       	movw	r22, r24
    26e6:	cd 01       	movw	r24, r26
    26e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    26ec:	dc 01       	movw	r26, r24
    26ee:	cb 01       	movw	r24, r22
    26f0:	f8 01       	movw	r30, r16
    26f2:	91 83       	std	Z+1, r25	; 0x01
    26f4:	80 83       	st	Z, r24
    26f6:	1f c0       	rjmp	.+62     	; 0x2736 <main+0x6d2>
    26f8:	fe 01       	movw	r30, r28
    26fa:	e7 54       	subi	r30, 0x47	; 71
    26fc:	ff 4f       	sbci	r31, 0xFF	; 255
    26fe:	88 ec       	ldi	r24, 0xC8	; 200
    2700:	90 e0       	ldi	r25, 0x00	; 0
    2702:	91 83       	std	Z+1, r25	; 0x01
    2704:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    2706:	fe 01       	movw	r30, r28
    2708:	e7 54       	subi	r30, 0x47	; 71
    270a:	ff 4f       	sbci	r31, 0xFF	; 255
    270c:	80 81       	ld	r24, Z
    270e:	91 81       	ldd	r25, Z+1	; 0x01
    2710:	01 97       	sbiw	r24, 0x01	; 1
    2712:	f1 f7       	brne	.-4      	; 0x2710 <main+0x6ac>
    2714:	fe 01       	movw	r30, r28
    2716:	e7 54       	subi	r30, 0x47	; 71
    2718:	ff 4f       	sbci	r31, 0xFF	; 255
    271a:	91 83       	std	Z+1, r25	; 0x01
    271c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    271e:	de 01       	movw	r26, r28
    2720:	a5 54       	subi	r26, 0x45	; 69
    2722:	bf 4f       	sbci	r27, 0xFF	; 255
    2724:	fe 01       	movw	r30, r28
    2726:	e5 54       	subi	r30, 0x45	; 69
    2728:	ff 4f       	sbci	r31, 0xFF	; 255
    272a:	80 81       	ld	r24, Z
    272c:	91 81       	ldd	r25, Z+1	; 0x01
    272e:	01 97       	sbiw	r24, 0x01	; 1
    2730:	11 96       	adiw	r26, 0x01	; 1
    2732:	9c 93       	st	X, r25
    2734:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2736:	fe 01       	movw	r30, r28
    2738:	e5 54       	subi	r30, 0x45	; 69
    273a:	ff 4f       	sbci	r31, 0xFF	; 255
    273c:	80 81       	ld	r24, Z
    273e:	91 81       	ldd	r25, Z+1	; 0x01
    2740:	00 97       	sbiw	r24, 0x00	; 0
    2742:	d1 f6       	brne	.-76     	; 0x26f8 <main+0x694>
    2744:	27 c0       	rjmp	.+78     	; 0x2794 <main+0x730>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2746:	8e 01       	movw	r16, r28
    2748:	05 54       	subi	r16, 0x45	; 69
    274a:	1f 4f       	sbci	r17, 0xFF	; 255
    274c:	fe 01       	movw	r30, r28
    274e:	e3 54       	subi	r30, 0x43	; 67
    2750:	ff 4f       	sbci	r31, 0xFF	; 255
    2752:	60 81       	ld	r22, Z
    2754:	71 81       	ldd	r23, Z+1	; 0x01
    2756:	82 81       	ldd	r24, Z+2	; 0x02
    2758:	93 81       	ldd	r25, Z+3	; 0x03
    275a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    275e:	dc 01       	movw	r26, r24
    2760:	cb 01       	movw	r24, r22
    2762:	f8 01       	movw	r30, r16
    2764:	91 83       	std	Z+1, r25	; 0x01
    2766:	80 83       	st	Z, r24
    2768:	de 01       	movw	r26, r28
    276a:	a9 54       	subi	r26, 0x49	; 73
    276c:	bf 4f       	sbci	r27, 0xFF	; 255
    276e:	fe 01       	movw	r30, r28
    2770:	e5 54       	subi	r30, 0x45	; 69
    2772:	ff 4f       	sbci	r31, 0xFF	; 255
    2774:	80 81       	ld	r24, Z
    2776:	91 81       	ldd	r25, Z+1	; 0x01
    2778:	8d 93       	st	X+, r24
    277a:	9c 93       	st	X, r25
    277c:	fe 01       	movw	r30, r28
    277e:	e9 54       	subi	r30, 0x49	; 73
    2780:	ff 4f       	sbci	r31, 0xFF	; 255
    2782:	80 81       	ld	r24, Z
    2784:	91 81       	ldd	r25, Z+1	; 0x01
    2786:	01 97       	sbiw	r24, 0x01	; 1
    2788:	f1 f7       	brne	.-4      	; 0x2786 <main+0x722>
    278a:	fe 01       	movw	r30, r28
    278c:	e9 54       	subi	r30, 0x49	; 73
    278e:	ff 4f       	sbci	r31, 0xFF	; 255
    2790:	91 83       	std	Z+1, r25	; 0x01
    2792:	80 83       	st	Z, r24
				_delay_ms(250);
				LED_voidON(LED1);
    2794:	fe 01       	movw	r30, r28
    2796:	e8 53       	subi	r30, 0x38	; 56
    2798:	ff 4f       	sbci	r31, 0xFF	; 255
    279a:	60 81       	ld	r22, Z
    279c:	71 81       	ldd	r23, Z+1	; 0x01
    279e:	82 81       	ldd	r24, Z+2	; 0x02
    27a0:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED0);
    27a4:	fe 01       	movw	r30, r28
    27a6:	eb 53       	subi	r30, 0x3B	; 59
    27a8:	ff 4f       	sbci	r31, 0xFF	; 255
    27aa:	60 81       	ld	r22, Z
    27ac:	71 81       	ldd	r23, Z+1	; 0x01
    27ae:	82 81       	ldd	r24, Z+2	; 0x02
    27b0:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    27b4:	fe 01       	movw	r30, r28
    27b6:	ed 54       	subi	r30, 0x4D	; 77
    27b8:	ff 4f       	sbci	r31, 0xFF	; 255
    27ba:	80 e0       	ldi	r24, 0x00	; 0
    27bc:	90 e0       	ldi	r25, 0x00	; 0
    27be:	aa e7       	ldi	r26, 0x7A	; 122
    27c0:	b3 e4       	ldi	r27, 0x43	; 67
    27c2:	80 83       	st	Z, r24
    27c4:	91 83       	std	Z+1, r25	; 0x01
    27c6:	a2 83       	std	Z+2, r26	; 0x02
    27c8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    27ca:	8e 01       	movw	r16, r28
    27cc:	01 55       	subi	r16, 0x51	; 81
    27ce:	1f 4f       	sbci	r17, 0xFF	; 255
    27d0:	fe 01       	movw	r30, r28
    27d2:	ed 54       	subi	r30, 0x4D	; 77
    27d4:	ff 4f       	sbci	r31, 0xFF	; 255
    27d6:	60 81       	ld	r22, Z
    27d8:	71 81       	ldd	r23, Z+1	; 0x01
    27da:	82 81       	ldd	r24, Z+2	; 0x02
    27dc:	93 81       	ldd	r25, Z+3	; 0x03
    27de:	20 e0       	ldi	r18, 0x00	; 0
    27e0:	30 e0       	ldi	r19, 0x00	; 0
    27e2:	4a ef       	ldi	r20, 0xFA	; 250
    27e4:	54 e4       	ldi	r21, 0x44	; 68
    27e6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    27ea:	dc 01       	movw	r26, r24
    27ec:	cb 01       	movw	r24, r22
    27ee:	f8 01       	movw	r30, r16
    27f0:	80 83       	st	Z, r24
    27f2:	91 83       	std	Z+1, r25	; 0x01
    27f4:	a2 83       	std	Z+2, r26	; 0x02
    27f6:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    27f8:	fe 01       	movw	r30, r28
    27fa:	e1 55       	subi	r30, 0x51	; 81
    27fc:	ff 4f       	sbci	r31, 0xFF	; 255
    27fe:	60 81       	ld	r22, Z
    2800:	71 81       	ldd	r23, Z+1	; 0x01
    2802:	82 81       	ldd	r24, Z+2	; 0x02
    2804:	93 81       	ldd	r25, Z+3	; 0x03
    2806:	20 e0       	ldi	r18, 0x00	; 0
    2808:	30 e0       	ldi	r19, 0x00	; 0
    280a:	40 e8       	ldi	r20, 0x80	; 128
    280c:	5f e3       	ldi	r21, 0x3F	; 63
    280e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2812:	88 23       	and	r24, r24
    2814:	44 f4       	brge	.+16     	; 0x2826 <main+0x7c2>
		__ticks = 1;
    2816:	fe 01       	movw	r30, r28
    2818:	e3 55       	subi	r30, 0x53	; 83
    281a:	ff 4f       	sbci	r31, 0xFF	; 255
    281c:	81 e0       	ldi	r24, 0x01	; 1
    281e:	90 e0       	ldi	r25, 0x00	; 0
    2820:	91 83       	std	Z+1, r25	; 0x01
    2822:	80 83       	st	Z, r24
    2824:	64 c0       	rjmp	.+200    	; 0x28ee <main+0x88a>
	else if (__tmp > 65535)
    2826:	fe 01       	movw	r30, r28
    2828:	e1 55       	subi	r30, 0x51	; 81
    282a:	ff 4f       	sbci	r31, 0xFF	; 255
    282c:	60 81       	ld	r22, Z
    282e:	71 81       	ldd	r23, Z+1	; 0x01
    2830:	82 81       	ldd	r24, Z+2	; 0x02
    2832:	93 81       	ldd	r25, Z+3	; 0x03
    2834:	20 e0       	ldi	r18, 0x00	; 0
    2836:	3f ef       	ldi	r19, 0xFF	; 255
    2838:	4f e7       	ldi	r20, 0x7F	; 127
    283a:	57 e4       	ldi	r21, 0x47	; 71
    283c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2840:	18 16       	cp	r1, r24
    2842:	0c f0       	brlt	.+2      	; 0x2846 <main+0x7e2>
    2844:	43 c0       	rjmp	.+134    	; 0x28cc <main+0x868>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2846:	fe 01       	movw	r30, r28
    2848:	ed 54       	subi	r30, 0x4D	; 77
    284a:	ff 4f       	sbci	r31, 0xFF	; 255
    284c:	60 81       	ld	r22, Z
    284e:	71 81       	ldd	r23, Z+1	; 0x01
    2850:	82 81       	ldd	r24, Z+2	; 0x02
    2852:	93 81       	ldd	r25, Z+3	; 0x03
    2854:	20 e0       	ldi	r18, 0x00	; 0
    2856:	30 e0       	ldi	r19, 0x00	; 0
    2858:	40 e2       	ldi	r20, 0x20	; 32
    285a:	51 e4       	ldi	r21, 0x41	; 65
    285c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2860:	dc 01       	movw	r26, r24
    2862:	cb 01       	movw	r24, r22
    2864:	8e 01       	movw	r16, r28
    2866:	03 55       	subi	r16, 0x53	; 83
    2868:	1f 4f       	sbci	r17, 0xFF	; 255
    286a:	bc 01       	movw	r22, r24
    286c:	cd 01       	movw	r24, r26
    286e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2872:	dc 01       	movw	r26, r24
    2874:	cb 01       	movw	r24, r22
    2876:	f8 01       	movw	r30, r16
    2878:	91 83       	std	Z+1, r25	; 0x01
    287a:	80 83       	st	Z, r24
    287c:	1f c0       	rjmp	.+62     	; 0x28bc <main+0x858>
    287e:	fe 01       	movw	r30, r28
    2880:	e5 55       	subi	r30, 0x55	; 85
    2882:	ff 4f       	sbci	r31, 0xFF	; 255
    2884:	88 ec       	ldi	r24, 0xC8	; 200
    2886:	90 e0       	ldi	r25, 0x00	; 0
    2888:	91 83       	std	Z+1, r25	; 0x01
    288a:	80 83       	st	Z, r24
    288c:	fe 01       	movw	r30, r28
    288e:	e5 55       	subi	r30, 0x55	; 85
    2890:	ff 4f       	sbci	r31, 0xFF	; 255
    2892:	80 81       	ld	r24, Z
    2894:	91 81       	ldd	r25, Z+1	; 0x01
    2896:	01 97       	sbiw	r24, 0x01	; 1
    2898:	f1 f7       	brne	.-4      	; 0x2896 <main+0x832>
    289a:	fe 01       	movw	r30, r28
    289c:	e5 55       	subi	r30, 0x55	; 85
    289e:	ff 4f       	sbci	r31, 0xFF	; 255
    28a0:	91 83       	std	Z+1, r25	; 0x01
    28a2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    28a4:	de 01       	movw	r26, r28
    28a6:	a3 55       	subi	r26, 0x53	; 83
    28a8:	bf 4f       	sbci	r27, 0xFF	; 255
    28aa:	fe 01       	movw	r30, r28
    28ac:	e3 55       	subi	r30, 0x53	; 83
    28ae:	ff 4f       	sbci	r31, 0xFF	; 255
    28b0:	80 81       	ld	r24, Z
    28b2:	91 81       	ldd	r25, Z+1	; 0x01
    28b4:	01 97       	sbiw	r24, 0x01	; 1
    28b6:	11 96       	adiw	r26, 0x01	; 1
    28b8:	9c 93       	st	X, r25
    28ba:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    28bc:	fe 01       	movw	r30, r28
    28be:	e3 55       	subi	r30, 0x53	; 83
    28c0:	ff 4f       	sbci	r31, 0xFF	; 255
    28c2:	80 81       	ld	r24, Z
    28c4:	91 81       	ldd	r25, Z+1	; 0x01
    28c6:	00 97       	sbiw	r24, 0x00	; 0
    28c8:	d1 f6       	brne	.-76     	; 0x287e <main+0x81a>
    28ca:	27 c0       	rjmp	.+78     	; 0x291a <main+0x8b6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    28cc:	8e 01       	movw	r16, r28
    28ce:	03 55       	subi	r16, 0x53	; 83
    28d0:	1f 4f       	sbci	r17, 0xFF	; 255
    28d2:	fe 01       	movw	r30, r28
    28d4:	e1 55       	subi	r30, 0x51	; 81
    28d6:	ff 4f       	sbci	r31, 0xFF	; 255
    28d8:	60 81       	ld	r22, Z
    28da:	71 81       	ldd	r23, Z+1	; 0x01
    28dc:	82 81       	ldd	r24, Z+2	; 0x02
    28de:	93 81       	ldd	r25, Z+3	; 0x03
    28e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28e4:	dc 01       	movw	r26, r24
    28e6:	cb 01       	movw	r24, r22
    28e8:	f8 01       	movw	r30, r16
    28ea:	91 83       	std	Z+1, r25	; 0x01
    28ec:	80 83       	st	Z, r24
    28ee:	de 01       	movw	r26, r28
    28f0:	a7 55       	subi	r26, 0x57	; 87
    28f2:	bf 4f       	sbci	r27, 0xFF	; 255
    28f4:	fe 01       	movw	r30, r28
    28f6:	e3 55       	subi	r30, 0x53	; 83
    28f8:	ff 4f       	sbci	r31, 0xFF	; 255
    28fa:	80 81       	ld	r24, Z
    28fc:	91 81       	ldd	r25, Z+1	; 0x01
    28fe:	8d 93       	st	X+, r24
    2900:	9c 93       	st	X, r25
    2902:	fe 01       	movw	r30, r28
    2904:	e7 55       	subi	r30, 0x57	; 87
    2906:	ff 4f       	sbci	r31, 0xFF	; 255
    2908:	80 81       	ld	r24, Z
    290a:	91 81       	ldd	r25, Z+1	; 0x01
    290c:	01 97       	sbiw	r24, 0x01	; 1
    290e:	f1 f7       	brne	.-4      	; 0x290c <main+0x8a8>
    2910:	fe 01       	movw	r30, r28
    2912:	e7 55       	subi	r30, 0x57	; 87
    2914:	ff 4f       	sbci	r31, 0xFF	; 255
    2916:	91 83       	std	Z+1, r25	; 0x01
    2918:	80 83       	st	Z, r24
				_delay_ms(250);
				LED_voidON(LED2);
    291a:	fe 01       	movw	r30, r28
    291c:	e5 53       	subi	r30, 0x35	; 53
    291e:	ff 4f       	sbci	r31, 0xFF	; 255
    2920:	60 81       	ld	r22, Z
    2922:	71 81       	ldd	r23, Z+1	; 0x01
    2924:	82 81       	ldd	r24, Z+2	; 0x02
    2926:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED1);
    292a:	fe 01       	movw	r30, r28
    292c:	e8 53       	subi	r30, 0x38	; 56
    292e:	ff 4f       	sbci	r31, 0xFF	; 255
    2930:	60 81       	ld	r22, Z
    2932:	71 81       	ldd	r23, Z+1	; 0x01
    2934:	82 81       	ldd	r24, Z+2	; 0x02
    2936:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    293a:	fe 01       	movw	r30, r28
    293c:	eb 55       	subi	r30, 0x5B	; 91
    293e:	ff 4f       	sbci	r31, 0xFF	; 255
    2940:	80 e0       	ldi	r24, 0x00	; 0
    2942:	90 e0       	ldi	r25, 0x00	; 0
    2944:	aa e7       	ldi	r26, 0x7A	; 122
    2946:	b3 e4       	ldi	r27, 0x43	; 67
    2948:	80 83       	st	Z, r24
    294a:	91 83       	std	Z+1, r25	; 0x01
    294c:	a2 83       	std	Z+2, r26	; 0x02
    294e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2950:	8e 01       	movw	r16, r28
    2952:	0f 55       	subi	r16, 0x5F	; 95
    2954:	1f 4f       	sbci	r17, 0xFF	; 255
    2956:	fe 01       	movw	r30, r28
    2958:	eb 55       	subi	r30, 0x5B	; 91
    295a:	ff 4f       	sbci	r31, 0xFF	; 255
    295c:	60 81       	ld	r22, Z
    295e:	71 81       	ldd	r23, Z+1	; 0x01
    2960:	82 81       	ldd	r24, Z+2	; 0x02
    2962:	93 81       	ldd	r25, Z+3	; 0x03
    2964:	20 e0       	ldi	r18, 0x00	; 0
    2966:	30 e0       	ldi	r19, 0x00	; 0
    2968:	4a ef       	ldi	r20, 0xFA	; 250
    296a:	54 e4       	ldi	r21, 0x44	; 68
    296c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2970:	dc 01       	movw	r26, r24
    2972:	cb 01       	movw	r24, r22
    2974:	f8 01       	movw	r30, r16
    2976:	80 83       	st	Z, r24
    2978:	91 83       	std	Z+1, r25	; 0x01
    297a:	a2 83       	std	Z+2, r26	; 0x02
    297c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    297e:	fe 01       	movw	r30, r28
    2980:	ef 55       	subi	r30, 0x5F	; 95
    2982:	ff 4f       	sbci	r31, 0xFF	; 255
    2984:	60 81       	ld	r22, Z
    2986:	71 81       	ldd	r23, Z+1	; 0x01
    2988:	82 81       	ldd	r24, Z+2	; 0x02
    298a:	93 81       	ldd	r25, Z+3	; 0x03
    298c:	20 e0       	ldi	r18, 0x00	; 0
    298e:	30 e0       	ldi	r19, 0x00	; 0
    2990:	40 e8       	ldi	r20, 0x80	; 128
    2992:	5f e3       	ldi	r21, 0x3F	; 63
    2994:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2998:	88 23       	and	r24, r24
    299a:	44 f4       	brge	.+16     	; 0x29ac <main+0x948>
		__ticks = 1;
    299c:	fe 01       	movw	r30, r28
    299e:	e1 56       	subi	r30, 0x61	; 97
    29a0:	ff 4f       	sbci	r31, 0xFF	; 255
    29a2:	81 e0       	ldi	r24, 0x01	; 1
    29a4:	90 e0       	ldi	r25, 0x00	; 0
    29a6:	91 83       	std	Z+1, r25	; 0x01
    29a8:	80 83       	st	Z, r24
    29aa:	64 c0       	rjmp	.+200    	; 0x2a74 <main+0xa10>
	else if (__tmp > 65535)
    29ac:	fe 01       	movw	r30, r28
    29ae:	ef 55       	subi	r30, 0x5F	; 95
    29b0:	ff 4f       	sbci	r31, 0xFF	; 255
    29b2:	60 81       	ld	r22, Z
    29b4:	71 81       	ldd	r23, Z+1	; 0x01
    29b6:	82 81       	ldd	r24, Z+2	; 0x02
    29b8:	93 81       	ldd	r25, Z+3	; 0x03
    29ba:	20 e0       	ldi	r18, 0x00	; 0
    29bc:	3f ef       	ldi	r19, 0xFF	; 255
    29be:	4f e7       	ldi	r20, 0x7F	; 127
    29c0:	57 e4       	ldi	r21, 0x47	; 71
    29c2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    29c6:	18 16       	cp	r1, r24
    29c8:	0c f0       	brlt	.+2      	; 0x29cc <main+0x968>
    29ca:	43 c0       	rjmp	.+134    	; 0x2a52 <main+0x9ee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    29cc:	fe 01       	movw	r30, r28
    29ce:	eb 55       	subi	r30, 0x5B	; 91
    29d0:	ff 4f       	sbci	r31, 0xFF	; 255
    29d2:	60 81       	ld	r22, Z
    29d4:	71 81       	ldd	r23, Z+1	; 0x01
    29d6:	82 81       	ldd	r24, Z+2	; 0x02
    29d8:	93 81       	ldd	r25, Z+3	; 0x03
    29da:	20 e0       	ldi	r18, 0x00	; 0
    29dc:	30 e0       	ldi	r19, 0x00	; 0
    29de:	40 e2       	ldi	r20, 0x20	; 32
    29e0:	51 e4       	ldi	r21, 0x41	; 65
    29e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29e6:	dc 01       	movw	r26, r24
    29e8:	cb 01       	movw	r24, r22
    29ea:	8e 01       	movw	r16, r28
    29ec:	01 56       	subi	r16, 0x61	; 97
    29ee:	1f 4f       	sbci	r17, 0xFF	; 255
    29f0:	bc 01       	movw	r22, r24
    29f2:	cd 01       	movw	r24, r26
    29f4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    29f8:	dc 01       	movw	r26, r24
    29fa:	cb 01       	movw	r24, r22
    29fc:	f8 01       	movw	r30, r16
    29fe:	91 83       	std	Z+1, r25	; 0x01
    2a00:	80 83       	st	Z, r24
    2a02:	1f c0       	rjmp	.+62     	; 0x2a42 <main+0x9de>
    2a04:	fe 01       	movw	r30, r28
    2a06:	e3 56       	subi	r30, 0x63	; 99
    2a08:	ff 4f       	sbci	r31, 0xFF	; 255
    2a0a:	88 ec       	ldi	r24, 0xC8	; 200
    2a0c:	90 e0       	ldi	r25, 0x00	; 0
    2a0e:	91 83       	std	Z+1, r25	; 0x01
    2a10:	80 83       	st	Z, r24
    2a12:	fe 01       	movw	r30, r28
    2a14:	e3 56       	subi	r30, 0x63	; 99
    2a16:	ff 4f       	sbci	r31, 0xFF	; 255
    2a18:	80 81       	ld	r24, Z
    2a1a:	91 81       	ldd	r25, Z+1	; 0x01
    2a1c:	01 97       	sbiw	r24, 0x01	; 1
    2a1e:	f1 f7       	brne	.-4      	; 0x2a1c <main+0x9b8>
    2a20:	fe 01       	movw	r30, r28
    2a22:	e3 56       	subi	r30, 0x63	; 99
    2a24:	ff 4f       	sbci	r31, 0xFF	; 255
    2a26:	91 83       	std	Z+1, r25	; 0x01
    2a28:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a2a:	de 01       	movw	r26, r28
    2a2c:	a1 56       	subi	r26, 0x61	; 97
    2a2e:	bf 4f       	sbci	r27, 0xFF	; 255
    2a30:	fe 01       	movw	r30, r28
    2a32:	e1 56       	subi	r30, 0x61	; 97
    2a34:	ff 4f       	sbci	r31, 0xFF	; 255
    2a36:	80 81       	ld	r24, Z
    2a38:	91 81       	ldd	r25, Z+1	; 0x01
    2a3a:	01 97       	sbiw	r24, 0x01	; 1
    2a3c:	11 96       	adiw	r26, 0x01	; 1
    2a3e:	9c 93       	st	X, r25
    2a40:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2a42:	fe 01       	movw	r30, r28
    2a44:	e1 56       	subi	r30, 0x61	; 97
    2a46:	ff 4f       	sbci	r31, 0xFF	; 255
    2a48:	80 81       	ld	r24, Z
    2a4a:	91 81       	ldd	r25, Z+1	; 0x01
    2a4c:	00 97       	sbiw	r24, 0x00	; 0
    2a4e:	d1 f6       	brne	.-76     	; 0x2a04 <main+0x9a0>
    2a50:	27 c0       	rjmp	.+78     	; 0x2aa0 <main+0xa3c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2a52:	8e 01       	movw	r16, r28
    2a54:	01 56       	subi	r16, 0x61	; 97
    2a56:	1f 4f       	sbci	r17, 0xFF	; 255
    2a58:	fe 01       	movw	r30, r28
    2a5a:	ef 55       	subi	r30, 0x5F	; 95
    2a5c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a5e:	60 81       	ld	r22, Z
    2a60:	71 81       	ldd	r23, Z+1	; 0x01
    2a62:	82 81       	ldd	r24, Z+2	; 0x02
    2a64:	93 81       	ldd	r25, Z+3	; 0x03
    2a66:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a6a:	dc 01       	movw	r26, r24
    2a6c:	cb 01       	movw	r24, r22
    2a6e:	f8 01       	movw	r30, r16
    2a70:	91 83       	std	Z+1, r25	; 0x01
    2a72:	80 83       	st	Z, r24
    2a74:	de 01       	movw	r26, r28
    2a76:	a5 56       	subi	r26, 0x65	; 101
    2a78:	bf 4f       	sbci	r27, 0xFF	; 255
    2a7a:	fe 01       	movw	r30, r28
    2a7c:	e1 56       	subi	r30, 0x61	; 97
    2a7e:	ff 4f       	sbci	r31, 0xFF	; 255
    2a80:	80 81       	ld	r24, Z
    2a82:	91 81       	ldd	r25, Z+1	; 0x01
    2a84:	8d 93       	st	X+, r24
    2a86:	9c 93       	st	X, r25
    2a88:	fe 01       	movw	r30, r28
    2a8a:	e5 56       	subi	r30, 0x65	; 101
    2a8c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a8e:	80 81       	ld	r24, Z
    2a90:	91 81       	ldd	r25, Z+1	; 0x01
    2a92:	01 97       	sbiw	r24, 0x01	; 1
    2a94:	f1 f7       	brne	.-4      	; 0x2a92 <main+0xa2e>
    2a96:	fe 01       	movw	r30, r28
    2a98:	e5 56       	subi	r30, 0x65	; 101
    2a9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a9c:	91 83       	std	Z+1, r25	; 0x01
    2a9e:	80 83       	st	Z, r24
				_delay_ms(250);
				LED_voidON(LED3);
    2aa0:	fe 01       	movw	r30, r28
    2aa2:	e2 53       	subi	r30, 0x32	; 50
    2aa4:	ff 4f       	sbci	r31, 0xFF	; 255
    2aa6:	60 81       	ld	r22, Z
    2aa8:	71 81       	ldd	r23, Z+1	; 0x01
    2aaa:	82 81       	ldd	r24, Z+2	; 0x02
    2aac:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED2);
    2ab0:	fe 01       	movw	r30, r28
    2ab2:	e5 53       	subi	r30, 0x35	; 53
    2ab4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ab6:	60 81       	ld	r22, Z
    2ab8:	71 81       	ldd	r23, Z+1	; 0x01
    2aba:	82 81       	ldd	r24, Z+2	; 0x02
    2abc:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    2ac0:	fe 01       	movw	r30, r28
    2ac2:	e9 56       	subi	r30, 0x69	; 105
    2ac4:	ff 4f       	sbci	r31, 0xFF	; 255
    2ac6:	80 e0       	ldi	r24, 0x00	; 0
    2ac8:	90 e0       	ldi	r25, 0x00	; 0
    2aca:	aa e7       	ldi	r26, 0x7A	; 122
    2acc:	b3 e4       	ldi	r27, 0x43	; 67
    2ace:	80 83       	st	Z, r24
    2ad0:	91 83       	std	Z+1, r25	; 0x01
    2ad2:	a2 83       	std	Z+2, r26	; 0x02
    2ad4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2ad6:	8e 01       	movw	r16, r28
    2ad8:	0d 56       	subi	r16, 0x6D	; 109
    2ada:	1f 4f       	sbci	r17, 0xFF	; 255
    2adc:	fe 01       	movw	r30, r28
    2ade:	e9 56       	subi	r30, 0x69	; 105
    2ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ae2:	60 81       	ld	r22, Z
    2ae4:	71 81       	ldd	r23, Z+1	; 0x01
    2ae6:	82 81       	ldd	r24, Z+2	; 0x02
    2ae8:	93 81       	ldd	r25, Z+3	; 0x03
    2aea:	20 e0       	ldi	r18, 0x00	; 0
    2aec:	30 e0       	ldi	r19, 0x00	; 0
    2aee:	4a ef       	ldi	r20, 0xFA	; 250
    2af0:	54 e4       	ldi	r21, 0x44	; 68
    2af2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2af6:	dc 01       	movw	r26, r24
    2af8:	cb 01       	movw	r24, r22
    2afa:	f8 01       	movw	r30, r16
    2afc:	80 83       	st	Z, r24
    2afe:	91 83       	std	Z+1, r25	; 0x01
    2b00:	a2 83       	std	Z+2, r26	; 0x02
    2b02:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b04:	fe 01       	movw	r30, r28
    2b06:	ed 56       	subi	r30, 0x6D	; 109
    2b08:	ff 4f       	sbci	r31, 0xFF	; 255
    2b0a:	60 81       	ld	r22, Z
    2b0c:	71 81       	ldd	r23, Z+1	; 0x01
    2b0e:	82 81       	ldd	r24, Z+2	; 0x02
    2b10:	93 81       	ldd	r25, Z+3	; 0x03
    2b12:	20 e0       	ldi	r18, 0x00	; 0
    2b14:	30 e0       	ldi	r19, 0x00	; 0
    2b16:	40 e8       	ldi	r20, 0x80	; 128
    2b18:	5f e3       	ldi	r21, 0x3F	; 63
    2b1a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b1e:	88 23       	and	r24, r24
    2b20:	44 f4       	brge	.+16     	; 0x2b32 <main+0xace>
		__ticks = 1;
    2b22:	fe 01       	movw	r30, r28
    2b24:	ef 56       	subi	r30, 0x6F	; 111
    2b26:	ff 4f       	sbci	r31, 0xFF	; 255
    2b28:	81 e0       	ldi	r24, 0x01	; 1
    2b2a:	90 e0       	ldi	r25, 0x00	; 0
    2b2c:	91 83       	std	Z+1, r25	; 0x01
    2b2e:	80 83       	st	Z, r24
    2b30:	64 c0       	rjmp	.+200    	; 0x2bfa <main+0xb96>
	else if (__tmp > 65535)
    2b32:	fe 01       	movw	r30, r28
    2b34:	ed 56       	subi	r30, 0x6D	; 109
    2b36:	ff 4f       	sbci	r31, 0xFF	; 255
    2b38:	60 81       	ld	r22, Z
    2b3a:	71 81       	ldd	r23, Z+1	; 0x01
    2b3c:	82 81       	ldd	r24, Z+2	; 0x02
    2b3e:	93 81       	ldd	r25, Z+3	; 0x03
    2b40:	20 e0       	ldi	r18, 0x00	; 0
    2b42:	3f ef       	ldi	r19, 0xFF	; 255
    2b44:	4f e7       	ldi	r20, 0x7F	; 127
    2b46:	57 e4       	ldi	r21, 0x47	; 71
    2b48:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2b4c:	18 16       	cp	r1, r24
    2b4e:	0c f0       	brlt	.+2      	; 0x2b52 <main+0xaee>
    2b50:	43 c0       	rjmp	.+134    	; 0x2bd8 <main+0xb74>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2b52:	fe 01       	movw	r30, r28
    2b54:	e9 56       	subi	r30, 0x69	; 105
    2b56:	ff 4f       	sbci	r31, 0xFF	; 255
    2b58:	60 81       	ld	r22, Z
    2b5a:	71 81       	ldd	r23, Z+1	; 0x01
    2b5c:	82 81       	ldd	r24, Z+2	; 0x02
    2b5e:	93 81       	ldd	r25, Z+3	; 0x03
    2b60:	20 e0       	ldi	r18, 0x00	; 0
    2b62:	30 e0       	ldi	r19, 0x00	; 0
    2b64:	40 e2       	ldi	r20, 0x20	; 32
    2b66:	51 e4       	ldi	r21, 0x41	; 65
    2b68:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b6c:	dc 01       	movw	r26, r24
    2b6e:	cb 01       	movw	r24, r22
    2b70:	8e 01       	movw	r16, r28
    2b72:	0f 56       	subi	r16, 0x6F	; 111
    2b74:	1f 4f       	sbci	r17, 0xFF	; 255
    2b76:	bc 01       	movw	r22, r24
    2b78:	cd 01       	movw	r24, r26
    2b7a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2b7e:	dc 01       	movw	r26, r24
    2b80:	cb 01       	movw	r24, r22
    2b82:	f8 01       	movw	r30, r16
    2b84:	91 83       	std	Z+1, r25	; 0x01
    2b86:	80 83       	st	Z, r24
    2b88:	1f c0       	rjmp	.+62     	; 0x2bc8 <main+0xb64>
    2b8a:	fe 01       	movw	r30, r28
    2b8c:	e1 57       	subi	r30, 0x71	; 113
    2b8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b90:	88 ec       	ldi	r24, 0xC8	; 200
    2b92:	90 e0       	ldi	r25, 0x00	; 0
    2b94:	91 83       	std	Z+1, r25	; 0x01
    2b96:	80 83       	st	Z, r24
    2b98:	fe 01       	movw	r30, r28
    2b9a:	e1 57       	subi	r30, 0x71	; 113
    2b9c:	ff 4f       	sbci	r31, 0xFF	; 255
    2b9e:	80 81       	ld	r24, Z
    2ba0:	91 81       	ldd	r25, Z+1	; 0x01
    2ba2:	01 97       	sbiw	r24, 0x01	; 1
    2ba4:	f1 f7       	brne	.-4      	; 0x2ba2 <main+0xb3e>
    2ba6:	fe 01       	movw	r30, r28
    2ba8:	e1 57       	subi	r30, 0x71	; 113
    2baa:	ff 4f       	sbci	r31, 0xFF	; 255
    2bac:	91 83       	std	Z+1, r25	; 0x01
    2bae:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bb0:	de 01       	movw	r26, r28
    2bb2:	af 56       	subi	r26, 0x6F	; 111
    2bb4:	bf 4f       	sbci	r27, 0xFF	; 255
    2bb6:	fe 01       	movw	r30, r28
    2bb8:	ef 56       	subi	r30, 0x6F	; 111
    2bba:	ff 4f       	sbci	r31, 0xFF	; 255
    2bbc:	80 81       	ld	r24, Z
    2bbe:	91 81       	ldd	r25, Z+1	; 0x01
    2bc0:	01 97       	sbiw	r24, 0x01	; 1
    2bc2:	11 96       	adiw	r26, 0x01	; 1
    2bc4:	9c 93       	st	X, r25
    2bc6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2bc8:	fe 01       	movw	r30, r28
    2bca:	ef 56       	subi	r30, 0x6F	; 111
    2bcc:	ff 4f       	sbci	r31, 0xFF	; 255
    2bce:	80 81       	ld	r24, Z
    2bd0:	91 81       	ldd	r25, Z+1	; 0x01
    2bd2:	00 97       	sbiw	r24, 0x00	; 0
    2bd4:	d1 f6       	brne	.-76     	; 0x2b8a <main+0xb26>
    2bd6:	27 c0       	rjmp	.+78     	; 0x2c26 <main+0xbc2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2bd8:	8e 01       	movw	r16, r28
    2bda:	0f 56       	subi	r16, 0x6F	; 111
    2bdc:	1f 4f       	sbci	r17, 0xFF	; 255
    2bde:	fe 01       	movw	r30, r28
    2be0:	ed 56       	subi	r30, 0x6D	; 109
    2be2:	ff 4f       	sbci	r31, 0xFF	; 255
    2be4:	60 81       	ld	r22, Z
    2be6:	71 81       	ldd	r23, Z+1	; 0x01
    2be8:	82 81       	ldd	r24, Z+2	; 0x02
    2bea:	93 81       	ldd	r25, Z+3	; 0x03
    2bec:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bf0:	dc 01       	movw	r26, r24
    2bf2:	cb 01       	movw	r24, r22
    2bf4:	f8 01       	movw	r30, r16
    2bf6:	91 83       	std	Z+1, r25	; 0x01
    2bf8:	80 83       	st	Z, r24
    2bfa:	de 01       	movw	r26, r28
    2bfc:	a3 57       	subi	r26, 0x73	; 115
    2bfe:	bf 4f       	sbci	r27, 0xFF	; 255
    2c00:	fe 01       	movw	r30, r28
    2c02:	ef 56       	subi	r30, 0x6F	; 111
    2c04:	ff 4f       	sbci	r31, 0xFF	; 255
    2c06:	80 81       	ld	r24, Z
    2c08:	91 81       	ldd	r25, Z+1	; 0x01
    2c0a:	8d 93       	st	X+, r24
    2c0c:	9c 93       	st	X, r25
    2c0e:	fe 01       	movw	r30, r28
    2c10:	e3 57       	subi	r30, 0x73	; 115
    2c12:	ff 4f       	sbci	r31, 0xFF	; 255
    2c14:	80 81       	ld	r24, Z
    2c16:	91 81       	ldd	r25, Z+1	; 0x01
    2c18:	01 97       	sbiw	r24, 0x01	; 1
    2c1a:	f1 f7       	brne	.-4      	; 0x2c18 <main+0xbb4>
    2c1c:	fe 01       	movw	r30, r28
    2c1e:	e3 57       	subi	r30, 0x73	; 115
    2c20:	ff 4f       	sbci	r31, 0xFF	; 255
    2c22:	91 83       	std	Z+1, r25	; 0x01
    2c24:	80 83       	st	Z, r24
				_delay_ms(250);
				LED_voidON(LED4);
    2c26:	fe 01       	movw	r30, r28
    2c28:	ef 52       	subi	r30, 0x2F	; 47
    2c2a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c2c:	60 81       	ld	r22, Z
    2c2e:	71 81       	ldd	r23, Z+1	; 0x01
    2c30:	82 81       	ldd	r24, Z+2	; 0x02
    2c32:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED3);
    2c36:	fe 01       	movw	r30, r28
    2c38:	e2 53       	subi	r30, 0x32	; 50
    2c3a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c3c:	60 81       	ld	r22, Z
    2c3e:	71 81       	ldd	r23, Z+1	; 0x01
    2c40:	82 81       	ldd	r24, Z+2	; 0x02
    2c42:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    2c46:	fe 01       	movw	r30, r28
    2c48:	e7 57       	subi	r30, 0x77	; 119
    2c4a:	ff 4f       	sbci	r31, 0xFF	; 255
    2c4c:	80 e0       	ldi	r24, 0x00	; 0
    2c4e:	90 e0       	ldi	r25, 0x00	; 0
    2c50:	aa e7       	ldi	r26, 0x7A	; 122
    2c52:	b3 e4       	ldi	r27, 0x43	; 67
    2c54:	80 83       	st	Z, r24
    2c56:	91 83       	std	Z+1, r25	; 0x01
    2c58:	a2 83       	std	Z+2, r26	; 0x02
    2c5a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c5c:	8e 01       	movw	r16, r28
    2c5e:	0b 57       	subi	r16, 0x7B	; 123
    2c60:	1f 4f       	sbci	r17, 0xFF	; 255
    2c62:	fe 01       	movw	r30, r28
    2c64:	e7 57       	subi	r30, 0x77	; 119
    2c66:	ff 4f       	sbci	r31, 0xFF	; 255
    2c68:	60 81       	ld	r22, Z
    2c6a:	71 81       	ldd	r23, Z+1	; 0x01
    2c6c:	82 81       	ldd	r24, Z+2	; 0x02
    2c6e:	93 81       	ldd	r25, Z+3	; 0x03
    2c70:	20 e0       	ldi	r18, 0x00	; 0
    2c72:	30 e0       	ldi	r19, 0x00	; 0
    2c74:	4a ef       	ldi	r20, 0xFA	; 250
    2c76:	54 e4       	ldi	r21, 0x44	; 68
    2c78:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2c7c:	dc 01       	movw	r26, r24
    2c7e:	cb 01       	movw	r24, r22
    2c80:	f8 01       	movw	r30, r16
    2c82:	80 83       	st	Z, r24
    2c84:	91 83       	std	Z+1, r25	; 0x01
    2c86:	a2 83       	std	Z+2, r26	; 0x02
    2c88:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2c8a:	fe 01       	movw	r30, r28
    2c8c:	eb 57       	subi	r30, 0x7B	; 123
    2c8e:	ff 4f       	sbci	r31, 0xFF	; 255
    2c90:	60 81       	ld	r22, Z
    2c92:	71 81       	ldd	r23, Z+1	; 0x01
    2c94:	82 81       	ldd	r24, Z+2	; 0x02
    2c96:	93 81       	ldd	r25, Z+3	; 0x03
    2c98:	20 e0       	ldi	r18, 0x00	; 0
    2c9a:	30 e0       	ldi	r19, 0x00	; 0
    2c9c:	40 e8       	ldi	r20, 0x80	; 128
    2c9e:	5f e3       	ldi	r21, 0x3F	; 63
    2ca0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ca4:	88 23       	and	r24, r24
    2ca6:	44 f4       	brge	.+16     	; 0x2cb8 <main+0xc54>
		__ticks = 1;
    2ca8:	fe 01       	movw	r30, r28
    2caa:	ed 57       	subi	r30, 0x7D	; 125
    2cac:	ff 4f       	sbci	r31, 0xFF	; 255
    2cae:	81 e0       	ldi	r24, 0x01	; 1
    2cb0:	90 e0       	ldi	r25, 0x00	; 0
    2cb2:	91 83       	std	Z+1, r25	; 0x01
    2cb4:	80 83       	st	Z, r24
    2cb6:	64 c0       	rjmp	.+200    	; 0x2d80 <main+0xd1c>
	else if (__tmp > 65535)
    2cb8:	fe 01       	movw	r30, r28
    2cba:	eb 57       	subi	r30, 0x7B	; 123
    2cbc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cbe:	60 81       	ld	r22, Z
    2cc0:	71 81       	ldd	r23, Z+1	; 0x01
    2cc2:	82 81       	ldd	r24, Z+2	; 0x02
    2cc4:	93 81       	ldd	r25, Z+3	; 0x03
    2cc6:	20 e0       	ldi	r18, 0x00	; 0
    2cc8:	3f ef       	ldi	r19, 0xFF	; 255
    2cca:	4f e7       	ldi	r20, 0x7F	; 127
    2ccc:	57 e4       	ldi	r21, 0x47	; 71
    2cce:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2cd2:	18 16       	cp	r1, r24
    2cd4:	0c f0       	brlt	.+2      	; 0x2cd8 <main+0xc74>
    2cd6:	43 c0       	rjmp	.+134    	; 0x2d5e <main+0xcfa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cd8:	fe 01       	movw	r30, r28
    2cda:	e7 57       	subi	r30, 0x77	; 119
    2cdc:	ff 4f       	sbci	r31, 0xFF	; 255
    2cde:	60 81       	ld	r22, Z
    2ce0:	71 81       	ldd	r23, Z+1	; 0x01
    2ce2:	82 81       	ldd	r24, Z+2	; 0x02
    2ce4:	93 81       	ldd	r25, Z+3	; 0x03
    2ce6:	20 e0       	ldi	r18, 0x00	; 0
    2ce8:	30 e0       	ldi	r19, 0x00	; 0
    2cea:	40 e2       	ldi	r20, 0x20	; 32
    2cec:	51 e4       	ldi	r21, 0x41	; 65
    2cee:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cf2:	dc 01       	movw	r26, r24
    2cf4:	cb 01       	movw	r24, r22
    2cf6:	8e 01       	movw	r16, r28
    2cf8:	0d 57       	subi	r16, 0x7D	; 125
    2cfa:	1f 4f       	sbci	r17, 0xFF	; 255
    2cfc:	bc 01       	movw	r22, r24
    2cfe:	cd 01       	movw	r24, r26
    2d00:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d04:	dc 01       	movw	r26, r24
    2d06:	cb 01       	movw	r24, r22
    2d08:	f8 01       	movw	r30, r16
    2d0a:	91 83       	std	Z+1, r25	; 0x01
    2d0c:	80 83       	st	Z, r24
    2d0e:	1f c0       	rjmp	.+62     	; 0x2d4e <main+0xcea>
    2d10:	fe 01       	movw	r30, r28
    2d12:	ef 57       	subi	r30, 0x7F	; 127
    2d14:	ff 4f       	sbci	r31, 0xFF	; 255
    2d16:	88 ec       	ldi	r24, 0xC8	; 200
    2d18:	90 e0       	ldi	r25, 0x00	; 0
    2d1a:	91 83       	std	Z+1, r25	; 0x01
    2d1c:	80 83       	st	Z, r24
    2d1e:	fe 01       	movw	r30, r28
    2d20:	ef 57       	subi	r30, 0x7F	; 127
    2d22:	ff 4f       	sbci	r31, 0xFF	; 255
    2d24:	80 81       	ld	r24, Z
    2d26:	91 81       	ldd	r25, Z+1	; 0x01
    2d28:	01 97       	sbiw	r24, 0x01	; 1
    2d2a:	f1 f7       	brne	.-4      	; 0x2d28 <main+0xcc4>
    2d2c:	fe 01       	movw	r30, r28
    2d2e:	ef 57       	subi	r30, 0x7F	; 127
    2d30:	ff 4f       	sbci	r31, 0xFF	; 255
    2d32:	91 83       	std	Z+1, r25	; 0x01
    2d34:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d36:	de 01       	movw	r26, r28
    2d38:	ad 57       	subi	r26, 0x7D	; 125
    2d3a:	bf 4f       	sbci	r27, 0xFF	; 255
    2d3c:	fe 01       	movw	r30, r28
    2d3e:	ed 57       	subi	r30, 0x7D	; 125
    2d40:	ff 4f       	sbci	r31, 0xFF	; 255
    2d42:	80 81       	ld	r24, Z
    2d44:	91 81       	ldd	r25, Z+1	; 0x01
    2d46:	01 97       	sbiw	r24, 0x01	; 1
    2d48:	11 96       	adiw	r26, 0x01	; 1
    2d4a:	9c 93       	st	X, r25
    2d4c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d4e:	fe 01       	movw	r30, r28
    2d50:	ed 57       	subi	r30, 0x7D	; 125
    2d52:	ff 4f       	sbci	r31, 0xFF	; 255
    2d54:	80 81       	ld	r24, Z
    2d56:	91 81       	ldd	r25, Z+1	; 0x01
    2d58:	00 97       	sbiw	r24, 0x00	; 0
    2d5a:	d1 f6       	brne	.-76     	; 0x2d10 <main+0xcac>
    2d5c:	27 c0       	rjmp	.+78     	; 0x2dac <main+0xd48>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d5e:	8e 01       	movw	r16, r28
    2d60:	0d 57       	subi	r16, 0x7D	; 125
    2d62:	1f 4f       	sbci	r17, 0xFF	; 255
    2d64:	fe 01       	movw	r30, r28
    2d66:	eb 57       	subi	r30, 0x7B	; 123
    2d68:	ff 4f       	sbci	r31, 0xFF	; 255
    2d6a:	60 81       	ld	r22, Z
    2d6c:	71 81       	ldd	r23, Z+1	; 0x01
    2d6e:	82 81       	ldd	r24, Z+2	; 0x02
    2d70:	93 81       	ldd	r25, Z+3	; 0x03
    2d72:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d76:	dc 01       	movw	r26, r24
    2d78:	cb 01       	movw	r24, r22
    2d7a:	f8 01       	movw	r30, r16
    2d7c:	91 83       	std	Z+1, r25	; 0x01
    2d7e:	80 83       	st	Z, r24
    2d80:	de 01       	movw	r26, r28
    2d82:	a1 58       	subi	r26, 0x81	; 129
    2d84:	bf 4f       	sbci	r27, 0xFF	; 255
    2d86:	fe 01       	movw	r30, r28
    2d88:	ed 57       	subi	r30, 0x7D	; 125
    2d8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2d8c:	80 81       	ld	r24, Z
    2d8e:	91 81       	ldd	r25, Z+1	; 0x01
    2d90:	8d 93       	st	X+, r24
    2d92:	9c 93       	st	X, r25
    2d94:	fe 01       	movw	r30, r28
    2d96:	e1 58       	subi	r30, 0x81	; 129
    2d98:	ff 4f       	sbci	r31, 0xFF	; 255
    2d9a:	80 81       	ld	r24, Z
    2d9c:	91 81       	ldd	r25, Z+1	; 0x01
    2d9e:	01 97       	sbiw	r24, 0x01	; 1
    2da0:	f1 f7       	brne	.-4      	; 0x2d9e <main+0xd3a>
    2da2:	fe 01       	movw	r30, r28
    2da4:	e1 58       	subi	r30, 0x81	; 129
    2da6:	ff 4f       	sbci	r31, 0xFF	; 255
    2da8:	91 83       	std	Z+1, r25	; 0x01
    2daa:	80 83       	st	Z, r24
				_delay_ms(250);
				LED_voidON(LED5);
    2dac:	fe 01       	movw	r30, r28
    2dae:	ec 52       	subi	r30, 0x2C	; 44
    2db0:	ff 4f       	sbci	r31, 0xFF	; 255
    2db2:	60 81       	ld	r22, Z
    2db4:	71 81       	ldd	r23, Z+1	; 0x01
    2db6:	82 81       	ldd	r24, Z+2	; 0x02
    2db8:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED4);
    2dbc:	fe 01       	movw	r30, r28
    2dbe:	ef 52       	subi	r30, 0x2F	; 47
    2dc0:	ff 4f       	sbci	r31, 0xFF	; 255
    2dc2:	60 81       	ld	r22, Z
    2dc4:	71 81       	ldd	r23, Z+1	; 0x01
    2dc6:	82 81       	ldd	r24, Z+2	; 0x02
    2dc8:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    2dcc:	fe 01       	movw	r30, r28
    2dce:	e5 58       	subi	r30, 0x85	; 133
    2dd0:	ff 4f       	sbci	r31, 0xFF	; 255
    2dd2:	80 e0       	ldi	r24, 0x00	; 0
    2dd4:	90 e0       	ldi	r25, 0x00	; 0
    2dd6:	aa e7       	ldi	r26, 0x7A	; 122
    2dd8:	b3 e4       	ldi	r27, 0x43	; 67
    2dda:	80 83       	st	Z, r24
    2ddc:	91 83       	std	Z+1, r25	; 0x01
    2dde:	a2 83       	std	Z+2, r26	; 0x02
    2de0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2de2:	8e 01       	movw	r16, r28
    2de4:	09 58       	subi	r16, 0x89	; 137
    2de6:	1f 4f       	sbci	r17, 0xFF	; 255
    2de8:	fe 01       	movw	r30, r28
    2dea:	e5 58       	subi	r30, 0x85	; 133
    2dec:	ff 4f       	sbci	r31, 0xFF	; 255
    2dee:	60 81       	ld	r22, Z
    2df0:	71 81       	ldd	r23, Z+1	; 0x01
    2df2:	82 81       	ldd	r24, Z+2	; 0x02
    2df4:	93 81       	ldd	r25, Z+3	; 0x03
    2df6:	20 e0       	ldi	r18, 0x00	; 0
    2df8:	30 e0       	ldi	r19, 0x00	; 0
    2dfa:	4a ef       	ldi	r20, 0xFA	; 250
    2dfc:	54 e4       	ldi	r21, 0x44	; 68
    2dfe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e02:	dc 01       	movw	r26, r24
    2e04:	cb 01       	movw	r24, r22
    2e06:	f8 01       	movw	r30, r16
    2e08:	80 83       	st	Z, r24
    2e0a:	91 83       	std	Z+1, r25	; 0x01
    2e0c:	a2 83       	std	Z+2, r26	; 0x02
    2e0e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2e10:	fe 01       	movw	r30, r28
    2e12:	e9 58       	subi	r30, 0x89	; 137
    2e14:	ff 4f       	sbci	r31, 0xFF	; 255
    2e16:	60 81       	ld	r22, Z
    2e18:	71 81       	ldd	r23, Z+1	; 0x01
    2e1a:	82 81       	ldd	r24, Z+2	; 0x02
    2e1c:	93 81       	ldd	r25, Z+3	; 0x03
    2e1e:	20 e0       	ldi	r18, 0x00	; 0
    2e20:	30 e0       	ldi	r19, 0x00	; 0
    2e22:	40 e8       	ldi	r20, 0x80	; 128
    2e24:	5f e3       	ldi	r21, 0x3F	; 63
    2e26:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2e2a:	88 23       	and	r24, r24
    2e2c:	44 f4       	brge	.+16     	; 0x2e3e <main+0xdda>
		__ticks = 1;
    2e2e:	fe 01       	movw	r30, r28
    2e30:	eb 58       	subi	r30, 0x8B	; 139
    2e32:	ff 4f       	sbci	r31, 0xFF	; 255
    2e34:	81 e0       	ldi	r24, 0x01	; 1
    2e36:	90 e0       	ldi	r25, 0x00	; 0
    2e38:	91 83       	std	Z+1, r25	; 0x01
    2e3a:	80 83       	st	Z, r24
    2e3c:	64 c0       	rjmp	.+200    	; 0x2f06 <main+0xea2>
	else if (__tmp > 65535)
    2e3e:	fe 01       	movw	r30, r28
    2e40:	e9 58       	subi	r30, 0x89	; 137
    2e42:	ff 4f       	sbci	r31, 0xFF	; 255
    2e44:	60 81       	ld	r22, Z
    2e46:	71 81       	ldd	r23, Z+1	; 0x01
    2e48:	82 81       	ldd	r24, Z+2	; 0x02
    2e4a:	93 81       	ldd	r25, Z+3	; 0x03
    2e4c:	20 e0       	ldi	r18, 0x00	; 0
    2e4e:	3f ef       	ldi	r19, 0xFF	; 255
    2e50:	4f e7       	ldi	r20, 0x7F	; 127
    2e52:	57 e4       	ldi	r21, 0x47	; 71
    2e54:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2e58:	18 16       	cp	r1, r24
    2e5a:	0c f0       	brlt	.+2      	; 0x2e5e <main+0xdfa>
    2e5c:	43 c0       	rjmp	.+134    	; 0x2ee4 <main+0xe80>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e5e:	fe 01       	movw	r30, r28
    2e60:	e5 58       	subi	r30, 0x85	; 133
    2e62:	ff 4f       	sbci	r31, 0xFF	; 255
    2e64:	60 81       	ld	r22, Z
    2e66:	71 81       	ldd	r23, Z+1	; 0x01
    2e68:	82 81       	ldd	r24, Z+2	; 0x02
    2e6a:	93 81       	ldd	r25, Z+3	; 0x03
    2e6c:	20 e0       	ldi	r18, 0x00	; 0
    2e6e:	30 e0       	ldi	r19, 0x00	; 0
    2e70:	40 e2       	ldi	r20, 0x20	; 32
    2e72:	51 e4       	ldi	r21, 0x41	; 65
    2e74:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e78:	dc 01       	movw	r26, r24
    2e7a:	cb 01       	movw	r24, r22
    2e7c:	8e 01       	movw	r16, r28
    2e7e:	0b 58       	subi	r16, 0x8B	; 139
    2e80:	1f 4f       	sbci	r17, 0xFF	; 255
    2e82:	bc 01       	movw	r22, r24
    2e84:	cd 01       	movw	r24, r26
    2e86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e8a:	dc 01       	movw	r26, r24
    2e8c:	cb 01       	movw	r24, r22
    2e8e:	f8 01       	movw	r30, r16
    2e90:	91 83       	std	Z+1, r25	; 0x01
    2e92:	80 83       	st	Z, r24
    2e94:	1f c0       	rjmp	.+62     	; 0x2ed4 <main+0xe70>
    2e96:	fe 01       	movw	r30, r28
    2e98:	ed 58       	subi	r30, 0x8D	; 141
    2e9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2e9c:	88 ec       	ldi	r24, 0xC8	; 200
    2e9e:	90 e0       	ldi	r25, 0x00	; 0
    2ea0:	91 83       	std	Z+1, r25	; 0x01
    2ea2:	80 83       	st	Z, r24
    2ea4:	fe 01       	movw	r30, r28
    2ea6:	ed 58       	subi	r30, 0x8D	; 141
    2ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    2eaa:	80 81       	ld	r24, Z
    2eac:	91 81       	ldd	r25, Z+1	; 0x01
    2eae:	01 97       	sbiw	r24, 0x01	; 1
    2eb0:	f1 f7       	brne	.-4      	; 0x2eae <main+0xe4a>
    2eb2:	fe 01       	movw	r30, r28
    2eb4:	ed 58       	subi	r30, 0x8D	; 141
    2eb6:	ff 4f       	sbci	r31, 0xFF	; 255
    2eb8:	91 83       	std	Z+1, r25	; 0x01
    2eba:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2ebc:	de 01       	movw	r26, r28
    2ebe:	ab 58       	subi	r26, 0x8B	; 139
    2ec0:	bf 4f       	sbci	r27, 0xFF	; 255
    2ec2:	fe 01       	movw	r30, r28
    2ec4:	eb 58       	subi	r30, 0x8B	; 139
    2ec6:	ff 4f       	sbci	r31, 0xFF	; 255
    2ec8:	80 81       	ld	r24, Z
    2eca:	91 81       	ldd	r25, Z+1	; 0x01
    2ecc:	01 97       	sbiw	r24, 0x01	; 1
    2ece:	11 96       	adiw	r26, 0x01	; 1
    2ed0:	9c 93       	st	X, r25
    2ed2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ed4:	fe 01       	movw	r30, r28
    2ed6:	eb 58       	subi	r30, 0x8B	; 139
    2ed8:	ff 4f       	sbci	r31, 0xFF	; 255
    2eda:	80 81       	ld	r24, Z
    2edc:	91 81       	ldd	r25, Z+1	; 0x01
    2ede:	00 97       	sbiw	r24, 0x00	; 0
    2ee0:	d1 f6       	brne	.-76     	; 0x2e96 <main+0xe32>
    2ee2:	27 c0       	rjmp	.+78     	; 0x2f32 <main+0xece>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ee4:	8e 01       	movw	r16, r28
    2ee6:	0b 58       	subi	r16, 0x8B	; 139
    2ee8:	1f 4f       	sbci	r17, 0xFF	; 255
    2eea:	fe 01       	movw	r30, r28
    2eec:	e9 58       	subi	r30, 0x89	; 137
    2eee:	ff 4f       	sbci	r31, 0xFF	; 255
    2ef0:	60 81       	ld	r22, Z
    2ef2:	71 81       	ldd	r23, Z+1	; 0x01
    2ef4:	82 81       	ldd	r24, Z+2	; 0x02
    2ef6:	93 81       	ldd	r25, Z+3	; 0x03
    2ef8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2efc:	dc 01       	movw	r26, r24
    2efe:	cb 01       	movw	r24, r22
    2f00:	f8 01       	movw	r30, r16
    2f02:	91 83       	std	Z+1, r25	; 0x01
    2f04:	80 83       	st	Z, r24
    2f06:	de 01       	movw	r26, r28
    2f08:	af 58       	subi	r26, 0x8F	; 143
    2f0a:	bf 4f       	sbci	r27, 0xFF	; 255
    2f0c:	fe 01       	movw	r30, r28
    2f0e:	eb 58       	subi	r30, 0x8B	; 139
    2f10:	ff 4f       	sbci	r31, 0xFF	; 255
    2f12:	80 81       	ld	r24, Z
    2f14:	91 81       	ldd	r25, Z+1	; 0x01
    2f16:	8d 93       	st	X+, r24
    2f18:	9c 93       	st	X, r25
    2f1a:	fe 01       	movw	r30, r28
    2f1c:	ef 58       	subi	r30, 0x8F	; 143
    2f1e:	ff 4f       	sbci	r31, 0xFF	; 255
    2f20:	80 81       	ld	r24, Z
    2f22:	91 81       	ldd	r25, Z+1	; 0x01
    2f24:	01 97       	sbiw	r24, 0x01	; 1
    2f26:	f1 f7       	brne	.-4      	; 0x2f24 <main+0xec0>
    2f28:	fe 01       	movw	r30, r28
    2f2a:	ef 58       	subi	r30, 0x8F	; 143
    2f2c:	ff 4f       	sbci	r31, 0xFF	; 255
    2f2e:	91 83       	std	Z+1, r25	; 0x01
    2f30:	80 83       	st	Z, r24
				_delay_ms(250);
				LED_voidON(LED6);
    2f32:	fe 01       	movw	r30, r28
    2f34:	e9 52       	subi	r30, 0x29	; 41
    2f36:	ff 4f       	sbci	r31, 0xFF	; 255
    2f38:	60 81       	ld	r22, Z
    2f3a:	71 81       	ldd	r23, Z+1	; 0x01
    2f3c:	82 81       	ldd	r24, Z+2	; 0x02
    2f3e:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED5);
    2f42:	fe 01       	movw	r30, r28
    2f44:	ec 52       	subi	r30, 0x2C	; 44
    2f46:	ff 4f       	sbci	r31, 0xFF	; 255
    2f48:	60 81       	ld	r22, Z
    2f4a:	71 81       	ldd	r23, Z+1	; 0x01
    2f4c:	82 81       	ldd	r24, Z+2	; 0x02
    2f4e:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    2f52:	fe 01       	movw	r30, r28
    2f54:	e3 59       	subi	r30, 0x93	; 147
    2f56:	ff 4f       	sbci	r31, 0xFF	; 255
    2f58:	80 e0       	ldi	r24, 0x00	; 0
    2f5a:	90 e0       	ldi	r25, 0x00	; 0
    2f5c:	aa e7       	ldi	r26, 0x7A	; 122
    2f5e:	b3 e4       	ldi	r27, 0x43	; 67
    2f60:	80 83       	st	Z, r24
    2f62:	91 83       	std	Z+1, r25	; 0x01
    2f64:	a2 83       	std	Z+2, r26	; 0x02
    2f66:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2f68:	8e 01       	movw	r16, r28
    2f6a:	07 59       	subi	r16, 0x97	; 151
    2f6c:	1f 4f       	sbci	r17, 0xFF	; 255
    2f6e:	fe 01       	movw	r30, r28
    2f70:	e3 59       	subi	r30, 0x93	; 147
    2f72:	ff 4f       	sbci	r31, 0xFF	; 255
    2f74:	60 81       	ld	r22, Z
    2f76:	71 81       	ldd	r23, Z+1	; 0x01
    2f78:	82 81       	ldd	r24, Z+2	; 0x02
    2f7a:	93 81       	ldd	r25, Z+3	; 0x03
    2f7c:	20 e0       	ldi	r18, 0x00	; 0
    2f7e:	30 e0       	ldi	r19, 0x00	; 0
    2f80:	4a ef       	ldi	r20, 0xFA	; 250
    2f82:	54 e4       	ldi	r21, 0x44	; 68
    2f84:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f88:	dc 01       	movw	r26, r24
    2f8a:	cb 01       	movw	r24, r22
    2f8c:	f8 01       	movw	r30, r16
    2f8e:	80 83       	st	Z, r24
    2f90:	91 83       	std	Z+1, r25	; 0x01
    2f92:	a2 83       	std	Z+2, r26	; 0x02
    2f94:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2f96:	fe 01       	movw	r30, r28
    2f98:	e7 59       	subi	r30, 0x97	; 151
    2f9a:	ff 4f       	sbci	r31, 0xFF	; 255
    2f9c:	60 81       	ld	r22, Z
    2f9e:	71 81       	ldd	r23, Z+1	; 0x01
    2fa0:	82 81       	ldd	r24, Z+2	; 0x02
    2fa2:	93 81       	ldd	r25, Z+3	; 0x03
    2fa4:	20 e0       	ldi	r18, 0x00	; 0
    2fa6:	30 e0       	ldi	r19, 0x00	; 0
    2fa8:	40 e8       	ldi	r20, 0x80	; 128
    2faa:	5f e3       	ldi	r21, 0x3F	; 63
    2fac:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2fb0:	88 23       	and	r24, r24
    2fb2:	44 f4       	brge	.+16     	; 0x2fc4 <main+0xf60>
		__ticks = 1;
    2fb4:	fe 01       	movw	r30, r28
    2fb6:	e9 59       	subi	r30, 0x99	; 153
    2fb8:	ff 4f       	sbci	r31, 0xFF	; 255
    2fba:	81 e0       	ldi	r24, 0x01	; 1
    2fbc:	90 e0       	ldi	r25, 0x00	; 0
    2fbe:	91 83       	std	Z+1, r25	; 0x01
    2fc0:	80 83       	st	Z, r24
    2fc2:	64 c0       	rjmp	.+200    	; 0x308c <main+0x1028>
	else if (__tmp > 65535)
    2fc4:	fe 01       	movw	r30, r28
    2fc6:	e7 59       	subi	r30, 0x97	; 151
    2fc8:	ff 4f       	sbci	r31, 0xFF	; 255
    2fca:	60 81       	ld	r22, Z
    2fcc:	71 81       	ldd	r23, Z+1	; 0x01
    2fce:	82 81       	ldd	r24, Z+2	; 0x02
    2fd0:	93 81       	ldd	r25, Z+3	; 0x03
    2fd2:	20 e0       	ldi	r18, 0x00	; 0
    2fd4:	3f ef       	ldi	r19, 0xFF	; 255
    2fd6:	4f e7       	ldi	r20, 0x7F	; 127
    2fd8:	57 e4       	ldi	r21, 0x47	; 71
    2fda:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2fde:	18 16       	cp	r1, r24
    2fe0:	0c f0       	brlt	.+2      	; 0x2fe4 <main+0xf80>
    2fe2:	43 c0       	rjmp	.+134    	; 0x306a <main+0x1006>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2fe4:	fe 01       	movw	r30, r28
    2fe6:	e3 59       	subi	r30, 0x93	; 147
    2fe8:	ff 4f       	sbci	r31, 0xFF	; 255
    2fea:	60 81       	ld	r22, Z
    2fec:	71 81       	ldd	r23, Z+1	; 0x01
    2fee:	82 81       	ldd	r24, Z+2	; 0x02
    2ff0:	93 81       	ldd	r25, Z+3	; 0x03
    2ff2:	20 e0       	ldi	r18, 0x00	; 0
    2ff4:	30 e0       	ldi	r19, 0x00	; 0
    2ff6:	40 e2       	ldi	r20, 0x20	; 32
    2ff8:	51 e4       	ldi	r21, 0x41	; 65
    2ffa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ffe:	dc 01       	movw	r26, r24
    3000:	cb 01       	movw	r24, r22
    3002:	8e 01       	movw	r16, r28
    3004:	09 59       	subi	r16, 0x99	; 153
    3006:	1f 4f       	sbci	r17, 0xFF	; 255
    3008:	bc 01       	movw	r22, r24
    300a:	cd 01       	movw	r24, r26
    300c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3010:	dc 01       	movw	r26, r24
    3012:	cb 01       	movw	r24, r22
    3014:	f8 01       	movw	r30, r16
    3016:	91 83       	std	Z+1, r25	; 0x01
    3018:	80 83       	st	Z, r24
    301a:	1f c0       	rjmp	.+62     	; 0x305a <main+0xff6>
    301c:	fe 01       	movw	r30, r28
    301e:	eb 59       	subi	r30, 0x9B	; 155
    3020:	ff 4f       	sbci	r31, 0xFF	; 255
    3022:	88 ec       	ldi	r24, 0xC8	; 200
    3024:	90 e0       	ldi	r25, 0x00	; 0
    3026:	91 83       	std	Z+1, r25	; 0x01
    3028:	80 83       	st	Z, r24
    302a:	fe 01       	movw	r30, r28
    302c:	eb 59       	subi	r30, 0x9B	; 155
    302e:	ff 4f       	sbci	r31, 0xFF	; 255
    3030:	80 81       	ld	r24, Z
    3032:	91 81       	ldd	r25, Z+1	; 0x01
    3034:	01 97       	sbiw	r24, 0x01	; 1
    3036:	f1 f7       	brne	.-4      	; 0x3034 <main+0xfd0>
    3038:	fe 01       	movw	r30, r28
    303a:	eb 59       	subi	r30, 0x9B	; 155
    303c:	ff 4f       	sbci	r31, 0xFF	; 255
    303e:	91 83       	std	Z+1, r25	; 0x01
    3040:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3042:	de 01       	movw	r26, r28
    3044:	a9 59       	subi	r26, 0x99	; 153
    3046:	bf 4f       	sbci	r27, 0xFF	; 255
    3048:	fe 01       	movw	r30, r28
    304a:	e9 59       	subi	r30, 0x99	; 153
    304c:	ff 4f       	sbci	r31, 0xFF	; 255
    304e:	80 81       	ld	r24, Z
    3050:	91 81       	ldd	r25, Z+1	; 0x01
    3052:	01 97       	sbiw	r24, 0x01	; 1
    3054:	11 96       	adiw	r26, 0x01	; 1
    3056:	9c 93       	st	X, r25
    3058:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    305a:	fe 01       	movw	r30, r28
    305c:	e9 59       	subi	r30, 0x99	; 153
    305e:	ff 4f       	sbci	r31, 0xFF	; 255
    3060:	80 81       	ld	r24, Z
    3062:	91 81       	ldd	r25, Z+1	; 0x01
    3064:	00 97       	sbiw	r24, 0x00	; 0
    3066:	d1 f6       	brne	.-76     	; 0x301c <main+0xfb8>
    3068:	27 c0       	rjmp	.+78     	; 0x30b8 <main+0x1054>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    306a:	8e 01       	movw	r16, r28
    306c:	09 59       	subi	r16, 0x99	; 153
    306e:	1f 4f       	sbci	r17, 0xFF	; 255
    3070:	fe 01       	movw	r30, r28
    3072:	e7 59       	subi	r30, 0x97	; 151
    3074:	ff 4f       	sbci	r31, 0xFF	; 255
    3076:	60 81       	ld	r22, Z
    3078:	71 81       	ldd	r23, Z+1	; 0x01
    307a:	82 81       	ldd	r24, Z+2	; 0x02
    307c:	93 81       	ldd	r25, Z+3	; 0x03
    307e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3082:	dc 01       	movw	r26, r24
    3084:	cb 01       	movw	r24, r22
    3086:	f8 01       	movw	r30, r16
    3088:	91 83       	std	Z+1, r25	; 0x01
    308a:	80 83       	st	Z, r24
    308c:	de 01       	movw	r26, r28
    308e:	ad 59       	subi	r26, 0x9D	; 157
    3090:	bf 4f       	sbci	r27, 0xFF	; 255
    3092:	fe 01       	movw	r30, r28
    3094:	e9 59       	subi	r30, 0x99	; 153
    3096:	ff 4f       	sbci	r31, 0xFF	; 255
    3098:	80 81       	ld	r24, Z
    309a:	91 81       	ldd	r25, Z+1	; 0x01
    309c:	8d 93       	st	X+, r24
    309e:	9c 93       	st	X, r25
    30a0:	fe 01       	movw	r30, r28
    30a2:	ed 59       	subi	r30, 0x9D	; 157
    30a4:	ff 4f       	sbci	r31, 0xFF	; 255
    30a6:	80 81       	ld	r24, Z
    30a8:	91 81       	ldd	r25, Z+1	; 0x01
    30aa:	01 97       	sbiw	r24, 0x01	; 1
    30ac:	f1 f7       	brne	.-4      	; 0x30aa <main+0x1046>
    30ae:	fe 01       	movw	r30, r28
    30b0:	ed 59       	subi	r30, 0x9D	; 157
    30b2:	ff 4f       	sbci	r31, 0xFF	; 255
    30b4:	91 83       	std	Z+1, r25	; 0x01
    30b6:	80 83       	st	Z, r24
				_delay_ms(250);
				LED_voidON(LED7);
    30b8:	fe 01       	movw	r30, r28
    30ba:	e6 52       	subi	r30, 0x26	; 38
    30bc:	ff 4f       	sbci	r31, 0xFF	; 255
    30be:	60 81       	ld	r22, Z
    30c0:	71 81       	ldd	r23, Z+1	; 0x01
    30c2:	82 81       	ldd	r24, Z+2	; 0x02
    30c4:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED6);
    30c8:	fe 01       	movw	r30, r28
    30ca:	e9 52       	subi	r30, 0x29	; 41
    30cc:	ff 4f       	sbci	r31, 0xFF	; 255
    30ce:	60 81       	ld	r22, Z
    30d0:	71 81       	ldd	r23, Z+1	; 0x01
    30d2:	82 81       	ldd	r24, Z+2	; 0x02
    30d4:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    30d8:	fe 01       	movw	r30, r28
    30da:	e1 5a       	subi	r30, 0xA1	; 161
    30dc:	ff 4f       	sbci	r31, 0xFF	; 255
    30de:	80 e0       	ldi	r24, 0x00	; 0
    30e0:	90 e0       	ldi	r25, 0x00	; 0
    30e2:	aa e7       	ldi	r26, 0x7A	; 122
    30e4:	b3 e4       	ldi	r27, 0x43	; 67
    30e6:	80 83       	st	Z, r24
    30e8:	91 83       	std	Z+1, r25	; 0x01
    30ea:	a2 83       	std	Z+2, r26	; 0x02
    30ec:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30ee:	8e 01       	movw	r16, r28
    30f0:	05 5a       	subi	r16, 0xA5	; 165
    30f2:	1f 4f       	sbci	r17, 0xFF	; 255
    30f4:	fe 01       	movw	r30, r28
    30f6:	e1 5a       	subi	r30, 0xA1	; 161
    30f8:	ff 4f       	sbci	r31, 0xFF	; 255
    30fa:	60 81       	ld	r22, Z
    30fc:	71 81       	ldd	r23, Z+1	; 0x01
    30fe:	82 81       	ldd	r24, Z+2	; 0x02
    3100:	93 81       	ldd	r25, Z+3	; 0x03
    3102:	20 e0       	ldi	r18, 0x00	; 0
    3104:	30 e0       	ldi	r19, 0x00	; 0
    3106:	4a ef       	ldi	r20, 0xFA	; 250
    3108:	54 e4       	ldi	r21, 0x44	; 68
    310a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    310e:	dc 01       	movw	r26, r24
    3110:	cb 01       	movw	r24, r22
    3112:	f8 01       	movw	r30, r16
    3114:	80 83       	st	Z, r24
    3116:	91 83       	std	Z+1, r25	; 0x01
    3118:	a2 83       	std	Z+2, r26	; 0x02
    311a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    311c:	fe 01       	movw	r30, r28
    311e:	e5 5a       	subi	r30, 0xA5	; 165
    3120:	ff 4f       	sbci	r31, 0xFF	; 255
    3122:	60 81       	ld	r22, Z
    3124:	71 81       	ldd	r23, Z+1	; 0x01
    3126:	82 81       	ldd	r24, Z+2	; 0x02
    3128:	93 81       	ldd	r25, Z+3	; 0x03
    312a:	20 e0       	ldi	r18, 0x00	; 0
    312c:	30 e0       	ldi	r19, 0x00	; 0
    312e:	40 e8       	ldi	r20, 0x80	; 128
    3130:	5f e3       	ldi	r21, 0x3F	; 63
    3132:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3136:	88 23       	and	r24, r24
    3138:	44 f4       	brge	.+16     	; 0x314a <main+0x10e6>
		__ticks = 1;
    313a:	fe 01       	movw	r30, r28
    313c:	e7 5a       	subi	r30, 0xA7	; 167
    313e:	ff 4f       	sbci	r31, 0xFF	; 255
    3140:	81 e0       	ldi	r24, 0x01	; 1
    3142:	90 e0       	ldi	r25, 0x00	; 0
    3144:	91 83       	std	Z+1, r25	; 0x01
    3146:	80 83       	st	Z, r24
    3148:	64 c0       	rjmp	.+200    	; 0x3212 <main+0x11ae>
	else if (__tmp > 65535)
    314a:	fe 01       	movw	r30, r28
    314c:	e5 5a       	subi	r30, 0xA5	; 165
    314e:	ff 4f       	sbci	r31, 0xFF	; 255
    3150:	60 81       	ld	r22, Z
    3152:	71 81       	ldd	r23, Z+1	; 0x01
    3154:	82 81       	ldd	r24, Z+2	; 0x02
    3156:	93 81       	ldd	r25, Z+3	; 0x03
    3158:	20 e0       	ldi	r18, 0x00	; 0
    315a:	3f ef       	ldi	r19, 0xFF	; 255
    315c:	4f e7       	ldi	r20, 0x7F	; 127
    315e:	57 e4       	ldi	r21, 0x47	; 71
    3160:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3164:	18 16       	cp	r1, r24
    3166:	0c f0       	brlt	.+2      	; 0x316a <main+0x1106>
    3168:	43 c0       	rjmp	.+134    	; 0x31f0 <main+0x118c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    316a:	fe 01       	movw	r30, r28
    316c:	e1 5a       	subi	r30, 0xA1	; 161
    316e:	ff 4f       	sbci	r31, 0xFF	; 255
    3170:	60 81       	ld	r22, Z
    3172:	71 81       	ldd	r23, Z+1	; 0x01
    3174:	82 81       	ldd	r24, Z+2	; 0x02
    3176:	93 81       	ldd	r25, Z+3	; 0x03
    3178:	20 e0       	ldi	r18, 0x00	; 0
    317a:	30 e0       	ldi	r19, 0x00	; 0
    317c:	40 e2       	ldi	r20, 0x20	; 32
    317e:	51 e4       	ldi	r21, 0x41	; 65
    3180:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3184:	dc 01       	movw	r26, r24
    3186:	cb 01       	movw	r24, r22
    3188:	8e 01       	movw	r16, r28
    318a:	07 5a       	subi	r16, 0xA7	; 167
    318c:	1f 4f       	sbci	r17, 0xFF	; 255
    318e:	bc 01       	movw	r22, r24
    3190:	cd 01       	movw	r24, r26
    3192:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3196:	dc 01       	movw	r26, r24
    3198:	cb 01       	movw	r24, r22
    319a:	f8 01       	movw	r30, r16
    319c:	91 83       	std	Z+1, r25	; 0x01
    319e:	80 83       	st	Z, r24
    31a0:	1f c0       	rjmp	.+62     	; 0x31e0 <main+0x117c>
    31a2:	fe 01       	movw	r30, r28
    31a4:	e9 5a       	subi	r30, 0xA9	; 169
    31a6:	ff 4f       	sbci	r31, 0xFF	; 255
    31a8:	88 ec       	ldi	r24, 0xC8	; 200
    31aa:	90 e0       	ldi	r25, 0x00	; 0
    31ac:	91 83       	std	Z+1, r25	; 0x01
    31ae:	80 83       	st	Z, r24
    31b0:	fe 01       	movw	r30, r28
    31b2:	e9 5a       	subi	r30, 0xA9	; 169
    31b4:	ff 4f       	sbci	r31, 0xFF	; 255
    31b6:	80 81       	ld	r24, Z
    31b8:	91 81       	ldd	r25, Z+1	; 0x01
    31ba:	01 97       	sbiw	r24, 0x01	; 1
    31bc:	f1 f7       	brne	.-4      	; 0x31ba <main+0x1156>
    31be:	fe 01       	movw	r30, r28
    31c0:	e9 5a       	subi	r30, 0xA9	; 169
    31c2:	ff 4f       	sbci	r31, 0xFF	; 255
    31c4:	91 83       	std	Z+1, r25	; 0x01
    31c6:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31c8:	de 01       	movw	r26, r28
    31ca:	a7 5a       	subi	r26, 0xA7	; 167
    31cc:	bf 4f       	sbci	r27, 0xFF	; 255
    31ce:	fe 01       	movw	r30, r28
    31d0:	e7 5a       	subi	r30, 0xA7	; 167
    31d2:	ff 4f       	sbci	r31, 0xFF	; 255
    31d4:	80 81       	ld	r24, Z
    31d6:	91 81       	ldd	r25, Z+1	; 0x01
    31d8:	01 97       	sbiw	r24, 0x01	; 1
    31da:	11 96       	adiw	r26, 0x01	; 1
    31dc:	9c 93       	st	X, r25
    31de:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31e0:	fe 01       	movw	r30, r28
    31e2:	e7 5a       	subi	r30, 0xA7	; 167
    31e4:	ff 4f       	sbci	r31, 0xFF	; 255
    31e6:	80 81       	ld	r24, Z
    31e8:	91 81       	ldd	r25, Z+1	; 0x01
    31ea:	00 97       	sbiw	r24, 0x00	; 0
    31ec:	d1 f6       	brne	.-76     	; 0x31a2 <main+0x113e>
    31ee:	27 c0       	rjmp	.+78     	; 0x323e <main+0x11da>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31f0:	8e 01       	movw	r16, r28
    31f2:	07 5a       	subi	r16, 0xA7	; 167
    31f4:	1f 4f       	sbci	r17, 0xFF	; 255
    31f6:	fe 01       	movw	r30, r28
    31f8:	e5 5a       	subi	r30, 0xA5	; 165
    31fa:	ff 4f       	sbci	r31, 0xFF	; 255
    31fc:	60 81       	ld	r22, Z
    31fe:	71 81       	ldd	r23, Z+1	; 0x01
    3200:	82 81       	ldd	r24, Z+2	; 0x02
    3202:	93 81       	ldd	r25, Z+3	; 0x03
    3204:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3208:	dc 01       	movw	r26, r24
    320a:	cb 01       	movw	r24, r22
    320c:	f8 01       	movw	r30, r16
    320e:	91 83       	std	Z+1, r25	; 0x01
    3210:	80 83       	st	Z, r24
    3212:	de 01       	movw	r26, r28
    3214:	ab 5a       	subi	r26, 0xAB	; 171
    3216:	bf 4f       	sbci	r27, 0xFF	; 255
    3218:	fe 01       	movw	r30, r28
    321a:	e7 5a       	subi	r30, 0xA7	; 167
    321c:	ff 4f       	sbci	r31, 0xFF	; 255
    321e:	80 81       	ld	r24, Z
    3220:	91 81       	ldd	r25, Z+1	; 0x01
    3222:	8d 93       	st	X+, r24
    3224:	9c 93       	st	X, r25
    3226:	fe 01       	movw	r30, r28
    3228:	eb 5a       	subi	r30, 0xAB	; 171
    322a:	ff 4f       	sbci	r31, 0xFF	; 255
    322c:	80 81       	ld	r24, Z
    322e:	91 81       	ldd	r25, Z+1	; 0x01
    3230:	01 97       	sbiw	r24, 0x01	; 1
    3232:	f1 f7       	brne	.-4      	; 0x3230 <main+0x11cc>
    3234:	fe 01       	movw	r30, r28
    3236:	eb 5a       	subi	r30, 0xAB	; 171
    3238:	ff 4f       	sbci	r31, 0xFF	; 255
    323a:	91 83       	std	Z+1, r25	; 0x01
    323c:	80 83       	st	Z, r24
				_delay_ms(250);
				LED_voidON(LED6);
    323e:	fe 01       	movw	r30, r28
    3240:	e9 52       	subi	r30, 0x29	; 41
    3242:	ff 4f       	sbci	r31, 0xFF	; 255
    3244:	60 81       	ld	r22, Z
    3246:	71 81       	ldd	r23, Z+1	; 0x01
    3248:	82 81       	ldd	r24, Z+2	; 0x02
    324a:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED7);
    324e:	fe 01       	movw	r30, r28
    3250:	e6 52       	subi	r30, 0x26	; 38
    3252:	ff 4f       	sbci	r31, 0xFF	; 255
    3254:	60 81       	ld	r22, Z
    3256:	71 81       	ldd	r23, Z+1	; 0x01
    3258:	82 81       	ldd	r24, Z+2	; 0x02
    325a:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    325e:	fe 01       	movw	r30, r28
    3260:	ef 5a       	subi	r30, 0xAF	; 175
    3262:	ff 4f       	sbci	r31, 0xFF	; 255
    3264:	80 e0       	ldi	r24, 0x00	; 0
    3266:	90 e0       	ldi	r25, 0x00	; 0
    3268:	aa e7       	ldi	r26, 0x7A	; 122
    326a:	b3 e4       	ldi	r27, 0x43	; 67
    326c:	80 83       	st	Z, r24
    326e:	91 83       	std	Z+1, r25	; 0x01
    3270:	a2 83       	std	Z+2, r26	; 0x02
    3272:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3274:	8e 01       	movw	r16, r28
    3276:	03 5b       	subi	r16, 0xB3	; 179
    3278:	1f 4f       	sbci	r17, 0xFF	; 255
    327a:	fe 01       	movw	r30, r28
    327c:	ef 5a       	subi	r30, 0xAF	; 175
    327e:	ff 4f       	sbci	r31, 0xFF	; 255
    3280:	60 81       	ld	r22, Z
    3282:	71 81       	ldd	r23, Z+1	; 0x01
    3284:	82 81       	ldd	r24, Z+2	; 0x02
    3286:	93 81       	ldd	r25, Z+3	; 0x03
    3288:	20 e0       	ldi	r18, 0x00	; 0
    328a:	30 e0       	ldi	r19, 0x00	; 0
    328c:	4a ef       	ldi	r20, 0xFA	; 250
    328e:	54 e4       	ldi	r21, 0x44	; 68
    3290:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3294:	dc 01       	movw	r26, r24
    3296:	cb 01       	movw	r24, r22
    3298:	f8 01       	movw	r30, r16
    329a:	80 83       	st	Z, r24
    329c:	91 83       	std	Z+1, r25	; 0x01
    329e:	a2 83       	std	Z+2, r26	; 0x02
    32a0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    32a2:	fe 01       	movw	r30, r28
    32a4:	e3 5b       	subi	r30, 0xB3	; 179
    32a6:	ff 4f       	sbci	r31, 0xFF	; 255
    32a8:	60 81       	ld	r22, Z
    32aa:	71 81       	ldd	r23, Z+1	; 0x01
    32ac:	82 81       	ldd	r24, Z+2	; 0x02
    32ae:	93 81       	ldd	r25, Z+3	; 0x03
    32b0:	20 e0       	ldi	r18, 0x00	; 0
    32b2:	30 e0       	ldi	r19, 0x00	; 0
    32b4:	40 e8       	ldi	r20, 0x80	; 128
    32b6:	5f e3       	ldi	r21, 0x3F	; 63
    32b8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    32bc:	88 23       	and	r24, r24
    32be:	44 f4       	brge	.+16     	; 0x32d0 <main+0x126c>
		__ticks = 1;
    32c0:	fe 01       	movw	r30, r28
    32c2:	e5 5b       	subi	r30, 0xB5	; 181
    32c4:	ff 4f       	sbci	r31, 0xFF	; 255
    32c6:	81 e0       	ldi	r24, 0x01	; 1
    32c8:	90 e0       	ldi	r25, 0x00	; 0
    32ca:	91 83       	std	Z+1, r25	; 0x01
    32cc:	80 83       	st	Z, r24
    32ce:	64 c0       	rjmp	.+200    	; 0x3398 <main+0x1334>
	else if (__tmp > 65535)
    32d0:	fe 01       	movw	r30, r28
    32d2:	e3 5b       	subi	r30, 0xB3	; 179
    32d4:	ff 4f       	sbci	r31, 0xFF	; 255
    32d6:	60 81       	ld	r22, Z
    32d8:	71 81       	ldd	r23, Z+1	; 0x01
    32da:	82 81       	ldd	r24, Z+2	; 0x02
    32dc:	93 81       	ldd	r25, Z+3	; 0x03
    32de:	20 e0       	ldi	r18, 0x00	; 0
    32e0:	3f ef       	ldi	r19, 0xFF	; 255
    32e2:	4f e7       	ldi	r20, 0x7F	; 127
    32e4:	57 e4       	ldi	r21, 0x47	; 71
    32e6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    32ea:	18 16       	cp	r1, r24
    32ec:	0c f0       	brlt	.+2      	; 0x32f0 <main+0x128c>
    32ee:	43 c0       	rjmp	.+134    	; 0x3376 <main+0x1312>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32f0:	fe 01       	movw	r30, r28
    32f2:	ef 5a       	subi	r30, 0xAF	; 175
    32f4:	ff 4f       	sbci	r31, 0xFF	; 255
    32f6:	60 81       	ld	r22, Z
    32f8:	71 81       	ldd	r23, Z+1	; 0x01
    32fa:	82 81       	ldd	r24, Z+2	; 0x02
    32fc:	93 81       	ldd	r25, Z+3	; 0x03
    32fe:	20 e0       	ldi	r18, 0x00	; 0
    3300:	30 e0       	ldi	r19, 0x00	; 0
    3302:	40 e2       	ldi	r20, 0x20	; 32
    3304:	51 e4       	ldi	r21, 0x41	; 65
    3306:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    330a:	dc 01       	movw	r26, r24
    330c:	cb 01       	movw	r24, r22
    330e:	8e 01       	movw	r16, r28
    3310:	05 5b       	subi	r16, 0xB5	; 181
    3312:	1f 4f       	sbci	r17, 0xFF	; 255
    3314:	bc 01       	movw	r22, r24
    3316:	cd 01       	movw	r24, r26
    3318:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    331c:	dc 01       	movw	r26, r24
    331e:	cb 01       	movw	r24, r22
    3320:	f8 01       	movw	r30, r16
    3322:	91 83       	std	Z+1, r25	; 0x01
    3324:	80 83       	st	Z, r24
    3326:	1f c0       	rjmp	.+62     	; 0x3366 <main+0x1302>
    3328:	fe 01       	movw	r30, r28
    332a:	e7 5b       	subi	r30, 0xB7	; 183
    332c:	ff 4f       	sbci	r31, 0xFF	; 255
    332e:	88 ec       	ldi	r24, 0xC8	; 200
    3330:	90 e0       	ldi	r25, 0x00	; 0
    3332:	91 83       	std	Z+1, r25	; 0x01
    3334:	80 83       	st	Z, r24
    3336:	fe 01       	movw	r30, r28
    3338:	e7 5b       	subi	r30, 0xB7	; 183
    333a:	ff 4f       	sbci	r31, 0xFF	; 255
    333c:	80 81       	ld	r24, Z
    333e:	91 81       	ldd	r25, Z+1	; 0x01
    3340:	01 97       	sbiw	r24, 0x01	; 1
    3342:	f1 f7       	brne	.-4      	; 0x3340 <main+0x12dc>
    3344:	fe 01       	movw	r30, r28
    3346:	e7 5b       	subi	r30, 0xB7	; 183
    3348:	ff 4f       	sbci	r31, 0xFF	; 255
    334a:	91 83       	std	Z+1, r25	; 0x01
    334c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    334e:	de 01       	movw	r26, r28
    3350:	a5 5b       	subi	r26, 0xB5	; 181
    3352:	bf 4f       	sbci	r27, 0xFF	; 255
    3354:	fe 01       	movw	r30, r28
    3356:	e5 5b       	subi	r30, 0xB5	; 181
    3358:	ff 4f       	sbci	r31, 0xFF	; 255
    335a:	80 81       	ld	r24, Z
    335c:	91 81       	ldd	r25, Z+1	; 0x01
    335e:	01 97       	sbiw	r24, 0x01	; 1
    3360:	11 96       	adiw	r26, 0x01	; 1
    3362:	9c 93       	st	X, r25
    3364:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3366:	fe 01       	movw	r30, r28
    3368:	e5 5b       	subi	r30, 0xB5	; 181
    336a:	ff 4f       	sbci	r31, 0xFF	; 255
    336c:	80 81       	ld	r24, Z
    336e:	91 81       	ldd	r25, Z+1	; 0x01
    3370:	00 97       	sbiw	r24, 0x00	; 0
    3372:	d1 f6       	brne	.-76     	; 0x3328 <main+0x12c4>
    3374:	27 c0       	rjmp	.+78     	; 0x33c4 <main+0x1360>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3376:	8e 01       	movw	r16, r28
    3378:	05 5b       	subi	r16, 0xB5	; 181
    337a:	1f 4f       	sbci	r17, 0xFF	; 255
    337c:	fe 01       	movw	r30, r28
    337e:	e3 5b       	subi	r30, 0xB3	; 179
    3380:	ff 4f       	sbci	r31, 0xFF	; 255
    3382:	60 81       	ld	r22, Z
    3384:	71 81       	ldd	r23, Z+1	; 0x01
    3386:	82 81       	ldd	r24, Z+2	; 0x02
    3388:	93 81       	ldd	r25, Z+3	; 0x03
    338a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    338e:	dc 01       	movw	r26, r24
    3390:	cb 01       	movw	r24, r22
    3392:	f8 01       	movw	r30, r16
    3394:	91 83       	std	Z+1, r25	; 0x01
    3396:	80 83       	st	Z, r24
    3398:	de 01       	movw	r26, r28
    339a:	a9 5b       	subi	r26, 0xB9	; 185
    339c:	bf 4f       	sbci	r27, 0xFF	; 255
    339e:	fe 01       	movw	r30, r28
    33a0:	e5 5b       	subi	r30, 0xB5	; 181
    33a2:	ff 4f       	sbci	r31, 0xFF	; 255
    33a4:	80 81       	ld	r24, Z
    33a6:	91 81       	ldd	r25, Z+1	; 0x01
    33a8:	8d 93       	st	X+, r24
    33aa:	9c 93       	st	X, r25
    33ac:	fe 01       	movw	r30, r28
    33ae:	e9 5b       	subi	r30, 0xB9	; 185
    33b0:	ff 4f       	sbci	r31, 0xFF	; 255
    33b2:	80 81       	ld	r24, Z
    33b4:	91 81       	ldd	r25, Z+1	; 0x01
    33b6:	01 97       	sbiw	r24, 0x01	; 1
    33b8:	f1 f7       	brne	.-4      	; 0x33b6 <main+0x1352>
    33ba:	fe 01       	movw	r30, r28
    33bc:	e9 5b       	subi	r30, 0xB9	; 185
    33be:	ff 4f       	sbci	r31, 0xFF	; 255
    33c0:	91 83       	std	Z+1, r25	; 0x01
    33c2:	80 83       	st	Z, r24
				_delay_ms(250);
				LED_voidON(LED5);
    33c4:	fe 01       	movw	r30, r28
    33c6:	ec 52       	subi	r30, 0x2C	; 44
    33c8:	ff 4f       	sbci	r31, 0xFF	; 255
    33ca:	60 81       	ld	r22, Z
    33cc:	71 81       	ldd	r23, Z+1	; 0x01
    33ce:	82 81       	ldd	r24, Z+2	; 0x02
    33d0:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED6);
    33d4:	fe 01       	movw	r30, r28
    33d6:	e9 52       	subi	r30, 0x29	; 41
    33d8:	ff 4f       	sbci	r31, 0xFF	; 255
    33da:	60 81       	ld	r22, Z
    33dc:	71 81       	ldd	r23, Z+1	; 0x01
    33de:	82 81       	ldd	r24, Z+2	; 0x02
    33e0:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    33e4:	fe 01       	movw	r30, r28
    33e6:	ed 5b       	subi	r30, 0xBD	; 189
    33e8:	ff 4f       	sbci	r31, 0xFF	; 255
    33ea:	80 e0       	ldi	r24, 0x00	; 0
    33ec:	90 e0       	ldi	r25, 0x00	; 0
    33ee:	aa e7       	ldi	r26, 0x7A	; 122
    33f0:	b3 e4       	ldi	r27, 0x43	; 67
    33f2:	80 83       	st	Z, r24
    33f4:	91 83       	std	Z+1, r25	; 0x01
    33f6:	a2 83       	std	Z+2, r26	; 0x02
    33f8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33fa:	8e 01       	movw	r16, r28
    33fc:	01 5c       	subi	r16, 0xC1	; 193
    33fe:	1f 4f       	sbci	r17, 0xFF	; 255
    3400:	fe 01       	movw	r30, r28
    3402:	ed 5b       	subi	r30, 0xBD	; 189
    3404:	ff 4f       	sbci	r31, 0xFF	; 255
    3406:	60 81       	ld	r22, Z
    3408:	71 81       	ldd	r23, Z+1	; 0x01
    340a:	82 81       	ldd	r24, Z+2	; 0x02
    340c:	93 81       	ldd	r25, Z+3	; 0x03
    340e:	20 e0       	ldi	r18, 0x00	; 0
    3410:	30 e0       	ldi	r19, 0x00	; 0
    3412:	4a ef       	ldi	r20, 0xFA	; 250
    3414:	54 e4       	ldi	r21, 0x44	; 68
    3416:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    341a:	dc 01       	movw	r26, r24
    341c:	cb 01       	movw	r24, r22
    341e:	f8 01       	movw	r30, r16
    3420:	80 83       	st	Z, r24
    3422:	91 83       	std	Z+1, r25	; 0x01
    3424:	a2 83       	std	Z+2, r26	; 0x02
    3426:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3428:	fe 01       	movw	r30, r28
    342a:	ff 96       	adiw	r30, 0x3f	; 63
    342c:	60 81       	ld	r22, Z
    342e:	71 81       	ldd	r23, Z+1	; 0x01
    3430:	82 81       	ldd	r24, Z+2	; 0x02
    3432:	93 81       	ldd	r25, Z+3	; 0x03
    3434:	20 e0       	ldi	r18, 0x00	; 0
    3436:	30 e0       	ldi	r19, 0x00	; 0
    3438:	40 e8       	ldi	r20, 0x80	; 128
    343a:	5f e3       	ldi	r21, 0x3F	; 63
    343c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3440:	88 23       	and	r24, r24
    3442:	2c f4       	brge	.+10     	; 0x344e <main+0x13ea>
		__ticks = 1;
    3444:	81 e0       	ldi	r24, 0x01	; 1
    3446:	90 e0       	ldi	r25, 0x00	; 0
    3448:	9e af       	std	Y+62, r25	; 0x3e
    344a:	8d af       	std	Y+61, r24	; 0x3d
    344c:	46 c0       	rjmp	.+140    	; 0x34da <main+0x1476>
	else if (__tmp > 65535)
    344e:	fe 01       	movw	r30, r28
    3450:	ff 96       	adiw	r30, 0x3f	; 63
    3452:	60 81       	ld	r22, Z
    3454:	71 81       	ldd	r23, Z+1	; 0x01
    3456:	82 81       	ldd	r24, Z+2	; 0x02
    3458:	93 81       	ldd	r25, Z+3	; 0x03
    345a:	20 e0       	ldi	r18, 0x00	; 0
    345c:	3f ef       	ldi	r19, 0xFF	; 255
    345e:	4f e7       	ldi	r20, 0x7F	; 127
    3460:	57 e4       	ldi	r21, 0x47	; 71
    3462:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3466:	18 16       	cp	r1, r24
    3468:	64 f5       	brge	.+88     	; 0x34c2 <main+0x145e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    346a:	fe 01       	movw	r30, r28
    346c:	ed 5b       	subi	r30, 0xBD	; 189
    346e:	ff 4f       	sbci	r31, 0xFF	; 255
    3470:	60 81       	ld	r22, Z
    3472:	71 81       	ldd	r23, Z+1	; 0x01
    3474:	82 81       	ldd	r24, Z+2	; 0x02
    3476:	93 81       	ldd	r25, Z+3	; 0x03
    3478:	20 e0       	ldi	r18, 0x00	; 0
    347a:	30 e0       	ldi	r19, 0x00	; 0
    347c:	40 e2       	ldi	r20, 0x20	; 32
    347e:	51 e4       	ldi	r21, 0x41	; 65
    3480:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3484:	dc 01       	movw	r26, r24
    3486:	cb 01       	movw	r24, r22
    3488:	bc 01       	movw	r22, r24
    348a:	cd 01       	movw	r24, r26
    348c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3490:	dc 01       	movw	r26, r24
    3492:	cb 01       	movw	r24, r22
    3494:	9e af       	std	Y+62, r25	; 0x3e
    3496:	8d af       	std	Y+61, r24	; 0x3d
    3498:	0f c0       	rjmp	.+30     	; 0x34b8 <main+0x1454>
    349a:	88 ec       	ldi	r24, 0xC8	; 200
    349c:	90 e0       	ldi	r25, 0x00	; 0
    349e:	9c af       	std	Y+60, r25	; 0x3c
    34a0:	8b af       	std	Y+59, r24	; 0x3b
    34a2:	8b ad       	ldd	r24, Y+59	; 0x3b
    34a4:	9c ad       	ldd	r25, Y+60	; 0x3c
    34a6:	01 97       	sbiw	r24, 0x01	; 1
    34a8:	f1 f7       	brne	.-4      	; 0x34a6 <main+0x1442>
    34aa:	9c af       	std	Y+60, r25	; 0x3c
    34ac:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    34ae:	8d ad       	ldd	r24, Y+61	; 0x3d
    34b0:	9e ad       	ldd	r25, Y+62	; 0x3e
    34b2:	01 97       	sbiw	r24, 0x01	; 1
    34b4:	9e af       	std	Y+62, r25	; 0x3e
    34b6:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34b8:	8d ad       	ldd	r24, Y+61	; 0x3d
    34ba:	9e ad       	ldd	r25, Y+62	; 0x3e
    34bc:	00 97       	sbiw	r24, 0x00	; 0
    34be:	69 f7       	brne	.-38     	; 0x349a <main+0x1436>
    34c0:	16 c0       	rjmp	.+44     	; 0x34ee <main+0x148a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34c2:	fe 01       	movw	r30, r28
    34c4:	ff 96       	adiw	r30, 0x3f	; 63
    34c6:	60 81       	ld	r22, Z
    34c8:	71 81       	ldd	r23, Z+1	; 0x01
    34ca:	82 81       	ldd	r24, Z+2	; 0x02
    34cc:	93 81       	ldd	r25, Z+3	; 0x03
    34ce:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34d2:	dc 01       	movw	r26, r24
    34d4:	cb 01       	movw	r24, r22
    34d6:	9e af       	std	Y+62, r25	; 0x3e
    34d8:	8d af       	std	Y+61, r24	; 0x3d
    34da:	8d ad       	ldd	r24, Y+61	; 0x3d
    34dc:	9e ad       	ldd	r25, Y+62	; 0x3e
    34de:	9a af       	std	Y+58, r25	; 0x3a
    34e0:	89 af       	std	Y+57, r24	; 0x39
    34e2:	89 ad       	ldd	r24, Y+57	; 0x39
    34e4:	9a ad       	ldd	r25, Y+58	; 0x3a
    34e6:	01 97       	sbiw	r24, 0x01	; 1
    34e8:	f1 f7       	brne	.-4      	; 0x34e6 <main+0x1482>
    34ea:	9a af       	std	Y+58, r25	; 0x3a
    34ec:	89 af       	std	Y+57, r24	; 0x39
				_delay_ms(250);
				LED_voidON(LED4);
    34ee:	fe 01       	movw	r30, r28
    34f0:	ef 52       	subi	r30, 0x2F	; 47
    34f2:	ff 4f       	sbci	r31, 0xFF	; 255
    34f4:	60 81       	ld	r22, Z
    34f6:	71 81       	ldd	r23, Z+1	; 0x01
    34f8:	82 81       	ldd	r24, Z+2	; 0x02
    34fa:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED5);
    34fe:	fe 01       	movw	r30, r28
    3500:	ec 52       	subi	r30, 0x2C	; 44
    3502:	ff 4f       	sbci	r31, 0xFF	; 255
    3504:	60 81       	ld	r22, Z
    3506:	71 81       	ldd	r23, Z+1	; 0x01
    3508:	82 81       	ldd	r24, Z+2	; 0x02
    350a:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    350e:	80 e0       	ldi	r24, 0x00	; 0
    3510:	90 e0       	ldi	r25, 0x00	; 0
    3512:	aa e7       	ldi	r26, 0x7A	; 122
    3514:	b3 e4       	ldi	r27, 0x43	; 67
    3516:	8d ab       	std	Y+53, r24	; 0x35
    3518:	9e ab       	std	Y+54, r25	; 0x36
    351a:	af ab       	std	Y+55, r26	; 0x37
    351c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    351e:	6d a9       	ldd	r22, Y+53	; 0x35
    3520:	7e a9       	ldd	r23, Y+54	; 0x36
    3522:	8f a9       	ldd	r24, Y+55	; 0x37
    3524:	98 ad       	ldd	r25, Y+56	; 0x38
    3526:	20 e0       	ldi	r18, 0x00	; 0
    3528:	30 e0       	ldi	r19, 0x00	; 0
    352a:	4a ef       	ldi	r20, 0xFA	; 250
    352c:	54 e4       	ldi	r21, 0x44	; 68
    352e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3532:	dc 01       	movw	r26, r24
    3534:	cb 01       	movw	r24, r22
    3536:	89 ab       	std	Y+49, r24	; 0x31
    3538:	9a ab       	std	Y+50, r25	; 0x32
    353a:	ab ab       	std	Y+51, r26	; 0x33
    353c:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    353e:	69 a9       	ldd	r22, Y+49	; 0x31
    3540:	7a a9       	ldd	r23, Y+50	; 0x32
    3542:	8b a9       	ldd	r24, Y+51	; 0x33
    3544:	9c a9       	ldd	r25, Y+52	; 0x34
    3546:	20 e0       	ldi	r18, 0x00	; 0
    3548:	30 e0       	ldi	r19, 0x00	; 0
    354a:	40 e8       	ldi	r20, 0x80	; 128
    354c:	5f e3       	ldi	r21, 0x3F	; 63
    354e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3552:	88 23       	and	r24, r24
    3554:	2c f4       	brge	.+10     	; 0x3560 <main+0x14fc>
		__ticks = 1;
    3556:	81 e0       	ldi	r24, 0x01	; 1
    3558:	90 e0       	ldi	r25, 0x00	; 0
    355a:	98 ab       	std	Y+48, r25	; 0x30
    355c:	8f a7       	std	Y+47, r24	; 0x2f
    355e:	3f c0       	rjmp	.+126    	; 0x35de <main+0x157a>
	else if (__tmp > 65535)
    3560:	69 a9       	ldd	r22, Y+49	; 0x31
    3562:	7a a9       	ldd	r23, Y+50	; 0x32
    3564:	8b a9       	ldd	r24, Y+51	; 0x33
    3566:	9c a9       	ldd	r25, Y+52	; 0x34
    3568:	20 e0       	ldi	r18, 0x00	; 0
    356a:	3f ef       	ldi	r19, 0xFF	; 255
    356c:	4f e7       	ldi	r20, 0x7F	; 127
    356e:	57 e4       	ldi	r21, 0x47	; 71
    3570:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3574:	18 16       	cp	r1, r24
    3576:	4c f5       	brge	.+82     	; 0x35ca <main+0x1566>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3578:	6d a9       	ldd	r22, Y+53	; 0x35
    357a:	7e a9       	ldd	r23, Y+54	; 0x36
    357c:	8f a9       	ldd	r24, Y+55	; 0x37
    357e:	98 ad       	ldd	r25, Y+56	; 0x38
    3580:	20 e0       	ldi	r18, 0x00	; 0
    3582:	30 e0       	ldi	r19, 0x00	; 0
    3584:	40 e2       	ldi	r20, 0x20	; 32
    3586:	51 e4       	ldi	r21, 0x41	; 65
    3588:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    358c:	dc 01       	movw	r26, r24
    358e:	cb 01       	movw	r24, r22
    3590:	bc 01       	movw	r22, r24
    3592:	cd 01       	movw	r24, r26
    3594:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3598:	dc 01       	movw	r26, r24
    359a:	cb 01       	movw	r24, r22
    359c:	98 ab       	std	Y+48, r25	; 0x30
    359e:	8f a7       	std	Y+47, r24	; 0x2f
    35a0:	0f c0       	rjmp	.+30     	; 0x35c0 <main+0x155c>
    35a2:	88 ec       	ldi	r24, 0xC8	; 200
    35a4:	90 e0       	ldi	r25, 0x00	; 0
    35a6:	9e a7       	std	Y+46, r25	; 0x2e
    35a8:	8d a7       	std	Y+45, r24	; 0x2d
    35aa:	8d a5       	ldd	r24, Y+45	; 0x2d
    35ac:	9e a5       	ldd	r25, Y+46	; 0x2e
    35ae:	01 97       	sbiw	r24, 0x01	; 1
    35b0:	f1 f7       	brne	.-4      	; 0x35ae <main+0x154a>
    35b2:	9e a7       	std	Y+46, r25	; 0x2e
    35b4:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    35b6:	8f a5       	ldd	r24, Y+47	; 0x2f
    35b8:	98 a9       	ldd	r25, Y+48	; 0x30
    35ba:	01 97       	sbiw	r24, 0x01	; 1
    35bc:	98 ab       	std	Y+48, r25	; 0x30
    35be:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    35c0:	8f a5       	ldd	r24, Y+47	; 0x2f
    35c2:	98 a9       	ldd	r25, Y+48	; 0x30
    35c4:	00 97       	sbiw	r24, 0x00	; 0
    35c6:	69 f7       	brne	.-38     	; 0x35a2 <main+0x153e>
    35c8:	14 c0       	rjmp	.+40     	; 0x35f2 <main+0x158e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    35ca:	69 a9       	ldd	r22, Y+49	; 0x31
    35cc:	7a a9       	ldd	r23, Y+50	; 0x32
    35ce:	8b a9       	ldd	r24, Y+51	; 0x33
    35d0:	9c a9       	ldd	r25, Y+52	; 0x34
    35d2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35d6:	dc 01       	movw	r26, r24
    35d8:	cb 01       	movw	r24, r22
    35da:	98 ab       	std	Y+48, r25	; 0x30
    35dc:	8f a7       	std	Y+47, r24	; 0x2f
    35de:	8f a5       	ldd	r24, Y+47	; 0x2f
    35e0:	98 a9       	ldd	r25, Y+48	; 0x30
    35e2:	9c a7       	std	Y+44, r25	; 0x2c
    35e4:	8b a7       	std	Y+43, r24	; 0x2b
    35e6:	8b a5       	ldd	r24, Y+43	; 0x2b
    35e8:	9c a5       	ldd	r25, Y+44	; 0x2c
    35ea:	01 97       	sbiw	r24, 0x01	; 1
    35ec:	f1 f7       	brne	.-4      	; 0x35ea <main+0x1586>
    35ee:	9c a7       	std	Y+44, r25	; 0x2c
    35f0:	8b a7       	std	Y+43, r24	; 0x2b
				_delay_ms(250);
				LED_voidON(LED3);
    35f2:	fe 01       	movw	r30, r28
    35f4:	e2 53       	subi	r30, 0x32	; 50
    35f6:	ff 4f       	sbci	r31, 0xFF	; 255
    35f8:	60 81       	ld	r22, Z
    35fa:	71 81       	ldd	r23, Z+1	; 0x01
    35fc:	82 81       	ldd	r24, Z+2	; 0x02
    35fe:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED4);
    3602:	fe 01       	movw	r30, r28
    3604:	ef 52       	subi	r30, 0x2F	; 47
    3606:	ff 4f       	sbci	r31, 0xFF	; 255
    3608:	60 81       	ld	r22, Z
    360a:	71 81       	ldd	r23, Z+1	; 0x01
    360c:	82 81       	ldd	r24, Z+2	; 0x02
    360e:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    3612:	80 e0       	ldi	r24, 0x00	; 0
    3614:	90 e0       	ldi	r25, 0x00	; 0
    3616:	aa e7       	ldi	r26, 0x7A	; 122
    3618:	b3 e4       	ldi	r27, 0x43	; 67
    361a:	8f a3       	std	Y+39, r24	; 0x27
    361c:	98 a7       	std	Y+40, r25	; 0x28
    361e:	a9 a7       	std	Y+41, r26	; 0x29
    3620:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3622:	6f a1       	ldd	r22, Y+39	; 0x27
    3624:	78 a5       	ldd	r23, Y+40	; 0x28
    3626:	89 a5       	ldd	r24, Y+41	; 0x29
    3628:	9a a5       	ldd	r25, Y+42	; 0x2a
    362a:	20 e0       	ldi	r18, 0x00	; 0
    362c:	30 e0       	ldi	r19, 0x00	; 0
    362e:	4a ef       	ldi	r20, 0xFA	; 250
    3630:	54 e4       	ldi	r21, 0x44	; 68
    3632:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3636:	dc 01       	movw	r26, r24
    3638:	cb 01       	movw	r24, r22
    363a:	8b a3       	std	Y+35, r24	; 0x23
    363c:	9c a3       	std	Y+36, r25	; 0x24
    363e:	ad a3       	std	Y+37, r26	; 0x25
    3640:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3642:	6b a1       	ldd	r22, Y+35	; 0x23
    3644:	7c a1       	ldd	r23, Y+36	; 0x24
    3646:	8d a1       	ldd	r24, Y+37	; 0x25
    3648:	9e a1       	ldd	r25, Y+38	; 0x26
    364a:	20 e0       	ldi	r18, 0x00	; 0
    364c:	30 e0       	ldi	r19, 0x00	; 0
    364e:	40 e8       	ldi	r20, 0x80	; 128
    3650:	5f e3       	ldi	r21, 0x3F	; 63
    3652:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3656:	88 23       	and	r24, r24
    3658:	2c f4       	brge	.+10     	; 0x3664 <main+0x1600>
		__ticks = 1;
    365a:	81 e0       	ldi	r24, 0x01	; 1
    365c:	90 e0       	ldi	r25, 0x00	; 0
    365e:	9a a3       	std	Y+34, r25	; 0x22
    3660:	89 a3       	std	Y+33, r24	; 0x21
    3662:	3f c0       	rjmp	.+126    	; 0x36e2 <main+0x167e>
	else if (__tmp > 65535)
    3664:	6b a1       	ldd	r22, Y+35	; 0x23
    3666:	7c a1       	ldd	r23, Y+36	; 0x24
    3668:	8d a1       	ldd	r24, Y+37	; 0x25
    366a:	9e a1       	ldd	r25, Y+38	; 0x26
    366c:	20 e0       	ldi	r18, 0x00	; 0
    366e:	3f ef       	ldi	r19, 0xFF	; 255
    3670:	4f e7       	ldi	r20, 0x7F	; 127
    3672:	57 e4       	ldi	r21, 0x47	; 71
    3674:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3678:	18 16       	cp	r1, r24
    367a:	4c f5       	brge	.+82     	; 0x36ce <main+0x166a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    367c:	6f a1       	ldd	r22, Y+39	; 0x27
    367e:	78 a5       	ldd	r23, Y+40	; 0x28
    3680:	89 a5       	ldd	r24, Y+41	; 0x29
    3682:	9a a5       	ldd	r25, Y+42	; 0x2a
    3684:	20 e0       	ldi	r18, 0x00	; 0
    3686:	30 e0       	ldi	r19, 0x00	; 0
    3688:	40 e2       	ldi	r20, 0x20	; 32
    368a:	51 e4       	ldi	r21, 0x41	; 65
    368c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3690:	dc 01       	movw	r26, r24
    3692:	cb 01       	movw	r24, r22
    3694:	bc 01       	movw	r22, r24
    3696:	cd 01       	movw	r24, r26
    3698:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    369c:	dc 01       	movw	r26, r24
    369e:	cb 01       	movw	r24, r22
    36a0:	9a a3       	std	Y+34, r25	; 0x22
    36a2:	89 a3       	std	Y+33, r24	; 0x21
    36a4:	0f c0       	rjmp	.+30     	; 0x36c4 <main+0x1660>
    36a6:	88 ec       	ldi	r24, 0xC8	; 200
    36a8:	90 e0       	ldi	r25, 0x00	; 0
    36aa:	98 a3       	std	Y+32, r25	; 0x20
    36ac:	8f 8f       	std	Y+31, r24	; 0x1f
    36ae:	8f 8d       	ldd	r24, Y+31	; 0x1f
    36b0:	98 a1       	ldd	r25, Y+32	; 0x20
    36b2:	01 97       	sbiw	r24, 0x01	; 1
    36b4:	f1 f7       	brne	.-4      	; 0x36b2 <main+0x164e>
    36b6:	98 a3       	std	Y+32, r25	; 0x20
    36b8:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    36ba:	89 a1       	ldd	r24, Y+33	; 0x21
    36bc:	9a a1       	ldd	r25, Y+34	; 0x22
    36be:	01 97       	sbiw	r24, 0x01	; 1
    36c0:	9a a3       	std	Y+34, r25	; 0x22
    36c2:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    36c4:	89 a1       	ldd	r24, Y+33	; 0x21
    36c6:	9a a1       	ldd	r25, Y+34	; 0x22
    36c8:	00 97       	sbiw	r24, 0x00	; 0
    36ca:	69 f7       	brne	.-38     	; 0x36a6 <main+0x1642>
    36cc:	14 c0       	rjmp	.+40     	; 0x36f6 <main+0x1692>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    36ce:	6b a1       	ldd	r22, Y+35	; 0x23
    36d0:	7c a1       	ldd	r23, Y+36	; 0x24
    36d2:	8d a1       	ldd	r24, Y+37	; 0x25
    36d4:	9e a1       	ldd	r25, Y+38	; 0x26
    36d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    36da:	dc 01       	movw	r26, r24
    36dc:	cb 01       	movw	r24, r22
    36de:	9a a3       	std	Y+34, r25	; 0x22
    36e0:	89 a3       	std	Y+33, r24	; 0x21
    36e2:	89 a1       	ldd	r24, Y+33	; 0x21
    36e4:	9a a1       	ldd	r25, Y+34	; 0x22
    36e6:	9e 8f       	std	Y+30, r25	; 0x1e
    36e8:	8d 8f       	std	Y+29, r24	; 0x1d
    36ea:	8d 8d       	ldd	r24, Y+29	; 0x1d
    36ec:	9e 8d       	ldd	r25, Y+30	; 0x1e
    36ee:	01 97       	sbiw	r24, 0x01	; 1
    36f0:	f1 f7       	brne	.-4      	; 0x36ee <main+0x168a>
    36f2:	9e 8f       	std	Y+30, r25	; 0x1e
    36f4:	8d 8f       	std	Y+29, r24	; 0x1d
				_delay_ms(250);
				LED_voidON(LED2);
    36f6:	fe 01       	movw	r30, r28
    36f8:	e5 53       	subi	r30, 0x35	; 53
    36fa:	ff 4f       	sbci	r31, 0xFF	; 255
    36fc:	60 81       	ld	r22, Z
    36fe:	71 81       	ldd	r23, Z+1	; 0x01
    3700:	82 81       	ldd	r24, Z+2	; 0x02
    3702:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED3);
    3706:	fe 01       	movw	r30, r28
    3708:	e2 53       	subi	r30, 0x32	; 50
    370a:	ff 4f       	sbci	r31, 0xFF	; 255
    370c:	60 81       	ld	r22, Z
    370e:	71 81       	ldd	r23, Z+1	; 0x01
    3710:	82 81       	ldd	r24, Z+2	; 0x02
    3712:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    3716:	80 e0       	ldi	r24, 0x00	; 0
    3718:	90 e0       	ldi	r25, 0x00	; 0
    371a:	aa e7       	ldi	r26, 0x7A	; 122
    371c:	b3 e4       	ldi	r27, 0x43	; 67
    371e:	89 8f       	std	Y+25, r24	; 0x19
    3720:	9a 8f       	std	Y+26, r25	; 0x1a
    3722:	ab 8f       	std	Y+27, r26	; 0x1b
    3724:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3726:	69 8d       	ldd	r22, Y+25	; 0x19
    3728:	7a 8d       	ldd	r23, Y+26	; 0x1a
    372a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    372c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    372e:	20 e0       	ldi	r18, 0x00	; 0
    3730:	30 e0       	ldi	r19, 0x00	; 0
    3732:	4a ef       	ldi	r20, 0xFA	; 250
    3734:	54 e4       	ldi	r21, 0x44	; 68
    3736:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    373a:	dc 01       	movw	r26, r24
    373c:	cb 01       	movw	r24, r22
    373e:	8d 8b       	std	Y+21, r24	; 0x15
    3740:	9e 8b       	std	Y+22, r25	; 0x16
    3742:	af 8b       	std	Y+23, r26	; 0x17
    3744:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3746:	6d 89       	ldd	r22, Y+21	; 0x15
    3748:	7e 89       	ldd	r23, Y+22	; 0x16
    374a:	8f 89       	ldd	r24, Y+23	; 0x17
    374c:	98 8d       	ldd	r25, Y+24	; 0x18
    374e:	20 e0       	ldi	r18, 0x00	; 0
    3750:	30 e0       	ldi	r19, 0x00	; 0
    3752:	40 e8       	ldi	r20, 0x80	; 128
    3754:	5f e3       	ldi	r21, 0x3F	; 63
    3756:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    375a:	88 23       	and	r24, r24
    375c:	2c f4       	brge	.+10     	; 0x3768 <main+0x1704>
		__ticks = 1;
    375e:	81 e0       	ldi	r24, 0x01	; 1
    3760:	90 e0       	ldi	r25, 0x00	; 0
    3762:	9c 8b       	std	Y+20, r25	; 0x14
    3764:	8b 8b       	std	Y+19, r24	; 0x13
    3766:	3f c0       	rjmp	.+126    	; 0x37e6 <main+0x1782>
	else if (__tmp > 65535)
    3768:	6d 89       	ldd	r22, Y+21	; 0x15
    376a:	7e 89       	ldd	r23, Y+22	; 0x16
    376c:	8f 89       	ldd	r24, Y+23	; 0x17
    376e:	98 8d       	ldd	r25, Y+24	; 0x18
    3770:	20 e0       	ldi	r18, 0x00	; 0
    3772:	3f ef       	ldi	r19, 0xFF	; 255
    3774:	4f e7       	ldi	r20, 0x7F	; 127
    3776:	57 e4       	ldi	r21, 0x47	; 71
    3778:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    377c:	18 16       	cp	r1, r24
    377e:	4c f5       	brge	.+82     	; 0x37d2 <main+0x176e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3780:	69 8d       	ldd	r22, Y+25	; 0x19
    3782:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3784:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3786:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3788:	20 e0       	ldi	r18, 0x00	; 0
    378a:	30 e0       	ldi	r19, 0x00	; 0
    378c:	40 e2       	ldi	r20, 0x20	; 32
    378e:	51 e4       	ldi	r21, 0x41	; 65
    3790:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3794:	dc 01       	movw	r26, r24
    3796:	cb 01       	movw	r24, r22
    3798:	bc 01       	movw	r22, r24
    379a:	cd 01       	movw	r24, r26
    379c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37a0:	dc 01       	movw	r26, r24
    37a2:	cb 01       	movw	r24, r22
    37a4:	9c 8b       	std	Y+20, r25	; 0x14
    37a6:	8b 8b       	std	Y+19, r24	; 0x13
    37a8:	0f c0       	rjmp	.+30     	; 0x37c8 <main+0x1764>
    37aa:	88 ec       	ldi	r24, 0xC8	; 200
    37ac:	90 e0       	ldi	r25, 0x00	; 0
    37ae:	9a 8b       	std	Y+18, r25	; 0x12
    37b0:	89 8b       	std	Y+17, r24	; 0x11
    37b2:	89 89       	ldd	r24, Y+17	; 0x11
    37b4:	9a 89       	ldd	r25, Y+18	; 0x12
    37b6:	01 97       	sbiw	r24, 0x01	; 1
    37b8:	f1 f7       	brne	.-4      	; 0x37b6 <main+0x1752>
    37ba:	9a 8b       	std	Y+18, r25	; 0x12
    37bc:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    37be:	8b 89       	ldd	r24, Y+19	; 0x13
    37c0:	9c 89       	ldd	r25, Y+20	; 0x14
    37c2:	01 97       	sbiw	r24, 0x01	; 1
    37c4:	9c 8b       	std	Y+20, r25	; 0x14
    37c6:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    37c8:	8b 89       	ldd	r24, Y+19	; 0x13
    37ca:	9c 89       	ldd	r25, Y+20	; 0x14
    37cc:	00 97       	sbiw	r24, 0x00	; 0
    37ce:	69 f7       	brne	.-38     	; 0x37aa <main+0x1746>
    37d0:	14 c0       	rjmp	.+40     	; 0x37fa <main+0x1796>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37d2:	6d 89       	ldd	r22, Y+21	; 0x15
    37d4:	7e 89       	ldd	r23, Y+22	; 0x16
    37d6:	8f 89       	ldd	r24, Y+23	; 0x17
    37d8:	98 8d       	ldd	r25, Y+24	; 0x18
    37da:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37de:	dc 01       	movw	r26, r24
    37e0:	cb 01       	movw	r24, r22
    37e2:	9c 8b       	std	Y+20, r25	; 0x14
    37e4:	8b 8b       	std	Y+19, r24	; 0x13
    37e6:	8b 89       	ldd	r24, Y+19	; 0x13
    37e8:	9c 89       	ldd	r25, Y+20	; 0x14
    37ea:	98 8b       	std	Y+16, r25	; 0x10
    37ec:	8f 87       	std	Y+15, r24	; 0x0f
    37ee:	8f 85       	ldd	r24, Y+15	; 0x0f
    37f0:	98 89       	ldd	r25, Y+16	; 0x10
    37f2:	01 97       	sbiw	r24, 0x01	; 1
    37f4:	f1 f7       	brne	.-4      	; 0x37f2 <main+0x178e>
    37f6:	98 8b       	std	Y+16, r25	; 0x10
    37f8:	8f 87       	std	Y+15, r24	; 0x0f
				_delay_ms(250);
				LED_voidON(LED1);
    37fa:	fe 01       	movw	r30, r28
    37fc:	e8 53       	subi	r30, 0x38	; 56
    37fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3800:	60 81       	ld	r22, Z
    3802:	71 81       	ldd	r23, Z+1	; 0x01
    3804:	82 81       	ldd	r24, Z+2	; 0x02
    3806:	0e 94 da 0f 	call	0x1fb4	; 0x1fb4 <LED_voidON>
				LED_voidOFF(LED2);
    380a:	fe 01       	movw	r30, r28
    380c:	e5 53       	subi	r30, 0x35	; 53
    380e:	ff 4f       	sbci	r31, 0xFF	; 255
    3810:	60 81       	ld	r22, Z
    3812:	71 81       	ldd	r23, Z+1	; 0x01
    3814:	82 81       	ldd	r24, Z+2	; 0x02
    3816:	0e 94 fc 0f 	call	0x1ff8	; 0x1ff8 <LED_voidOFF>
    381a:	80 e0       	ldi	r24, 0x00	; 0
    381c:	90 e0       	ldi	r25, 0x00	; 0
    381e:	aa e7       	ldi	r26, 0x7A	; 122
    3820:	b3 e4       	ldi	r27, 0x43	; 67
    3822:	8b 87       	std	Y+11, r24	; 0x0b
    3824:	9c 87       	std	Y+12, r25	; 0x0c
    3826:	ad 87       	std	Y+13, r26	; 0x0d
    3828:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    382a:	6b 85       	ldd	r22, Y+11	; 0x0b
    382c:	7c 85       	ldd	r23, Y+12	; 0x0c
    382e:	8d 85       	ldd	r24, Y+13	; 0x0d
    3830:	9e 85       	ldd	r25, Y+14	; 0x0e
    3832:	20 e0       	ldi	r18, 0x00	; 0
    3834:	30 e0       	ldi	r19, 0x00	; 0
    3836:	4a ef       	ldi	r20, 0xFA	; 250
    3838:	54 e4       	ldi	r21, 0x44	; 68
    383a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    383e:	dc 01       	movw	r26, r24
    3840:	cb 01       	movw	r24, r22
    3842:	8f 83       	std	Y+7, r24	; 0x07
    3844:	98 87       	std	Y+8, r25	; 0x08
    3846:	a9 87       	std	Y+9, r26	; 0x09
    3848:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    384a:	6f 81       	ldd	r22, Y+7	; 0x07
    384c:	78 85       	ldd	r23, Y+8	; 0x08
    384e:	89 85       	ldd	r24, Y+9	; 0x09
    3850:	9a 85       	ldd	r25, Y+10	; 0x0a
    3852:	20 e0       	ldi	r18, 0x00	; 0
    3854:	30 e0       	ldi	r19, 0x00	; 0
    3856:	40 e8       	ldi	r20, 0x80	; 128
    3858:	5f e3       	ldi	r21, 0x3F	; 63
    385a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    385e:	88 23       	and	r24, r24
    3860:	2c f4       	brge	.+10     	; 0x386c <main+0x1808>
		__ticks = 1;
    3862:	81 e0       	ldi	r24, 0x01	; 1
    3864:	90 e0       	ldi	r25, 0x00	; 0
    3866:	9e 83       	std	Y+6, r25	; 0x06
    3868:	8d 83       	std	Y+5, r24	; 0x05
    386a:	40 c0       	rjmp	.+128    	; 0x38ec <main+0x1888>
	else if (__tmp > 65535)
    386c:	6f 81       	ldd	r22, Y+7	; 0x07
    386e:	78 85       	ldd	r23, Y+8	; 0x08
    3870:	89 85       	ldd	r24, Y+9	; 0x09
    3872:	9a 85       	ldd	r25, Y+10	; 0x0a
    3874:	20 e0       	ldi	r18, 0x00	; 0
    3876:	3f ef       	ldi	r19, 0xFF	; 255
    3878:	4f e7       	ldi	r20, 0x7F	; 127
    387a:	57 e4       	ldi	r21, 0x47	; 71
    387c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3880:	18 16       	cp	r1, r24
    3882:	54 f5       	brge	.+84     	; 0x38d8 <main+0x1874>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3884:	6b 85       	ldd	r22, Y+11	; 0x0b
    3886:	7c 85       	ldd	r23, Y+12	; 0x0c
    3888:	8d 85       	ldd	r24, Y+13	; 0x0d
    388a:	9e 85       	ldd	r25, Y+14	; 0x0e
    388c:	20 e0       	ldi	r18, 0x00	; 0
    388e:	30 e0       	ldi	r19, 0x00	; 0
    3890:	40 e2       	ldi	r20, 0x20	; 32
    3892:	51 e4       	ldi	r21, 0x41	; 65
    3894:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3898:	dc 01       	movw	r26, r24
    389a:	cb 01       	movw	r24, r22
    389c:	bc 01       	movw	r22, r24
    389e:	cd 01       	movw	r24, r26
    38a0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38a4:	dc 01       	movw	r26, r24
    38a6:	cb 01       	movw	r24, r22
    38a8:	9e 83       	std	Y+6, r25	; 0x06
    38aa:	8d 83       	std	Y+5, r24	; 0x05
    38ac:	0f c0       	rjmp	.+30     	; 0x38cc <main+0x1868>
    38ae:	88 ec       	ldi	r24, 0xC8	; 200
    38b0:	90 e0       	ldi	r25, 0x00	; 0
    38b2:	9c 83       	std	Y+4, r25	; 0x04
    38b4:	8b 83       	std	Y+3, r24	; 0x03
    38b6:	8b 81       	ldd	r24, Y+3	; 0x03
    38b8:	9c 81       	ldd	r25, Y+4	; 0x04
    38ba:	01 97       	sbiw	r24, 0x01	; 1
    38bc:	f1 f7       	brne	.-4      	; 0x38ba <main+0x1856>
    38be:	9c 83       	std	Y+4, r25	; 0x04
    38c0:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    38c2:	8d 81       	ldd	r24, Y+5	; 0x05
    38c4:	9e 81       	ldd	r25, Y+6	; 0x06
    38c6:	01 97       	sbiw	r24, 0x01	; 1
    38c8:	9e 83       	std	Y+6, r25	; 0x06
    38ca:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    38cc:	8d 81       	ldd	r24, Y+5	; 0x05
    38ce:	9e 81       	ldd	r25, Y+6	; 0x06
    38d0:	00 97       	sbiw	r24, 0x00	; 0
    38d2:	69 f7       	brne	.-38     	; 0x38ae <main+0x184a>
    38d4:	0c 94 07 13 	jmp	0x260e	; 0x260e <main+0x5aa>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38d8:	6f 81       	ldd	r22, Y+7	; 0x07
    38da:	78 85       	ldd	r23, Y+8	; 0x08
    38dc:	89 85       	ldd	r24, Y+9	; 0x09
    38de:	9a 85       	ldd	r25, Y+10	; 0x0a
    38e0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    38e4:	dc 01       	movw	r26, r24
    38e6:	cb 01       	movw	r24, r22
    38e8:	9e 83       	std	Y+6, r25	; 0x06
    38ea:	8d 83       	std	Y+5, r24	; 0x05
    38ec:	8d 81       	ldd	r24, Y+5	; 0x05
    38ee:	9e 81       	ldd	r25, Y+6	; 0x06
    38f0:	9a 83       	std	Y+2, r25	; 0x02
    38f2:	89 83       	std	Y+1, r24	; 0x01
    38f4:	89 81       	ldd	r24, Y+1	; 0x01
    38f6:	9a 81       	ldd	r25, Y+2	; 0x02
    38f8:	01 97       	sbiw	r24, 0x01	; 1
    38fa:	f1 f7       	brne	.-4      	; 0x38f8 <main+0x1894>
    38fc:	9a 83       	std	Y+2, r25	; 0x02
    38fe:	89 83       	std	Y+1, r24	; 0x01
    3900:	0c 94 07 13 	jmp	0x260e	; 0x260e <main+0x5aa>

00003904 <__prologue_saves__>:
    3904:	2f 92       	push	r2
    3906:	3f 92       	push	r3
    3908:	4f 92       	push	r4
    390a:	5f 92       	push	r5
    390c:	6f 92       	push	r6
    390e:	7f 92       	push	r7
    3910:	8f 92       	push	r8
    3912:	9f 92       	push	r9
    3914:	af 92       	push	r10
    3916:	bf 92       	push	r11
    3918:	cf 92       	push	r12
    391a:	df 92       	push	r13
    391c:	ef 92       	push	r14
    391e:	ff 92       	push	r15
    3920:	0f 93       	push	r16
    3922:	1f 93       	push	r17
    3924:	cf 93       	push	r28
    3926:	df 93       	push	r29
    3928:	cd b7       	in	r28, 0x3d	; 61
    392a:	de b7       	in	r29, 0x3e	; 62
    392c:	ca 1b       	sub	r28, r26
    392e:	db 0b       	sbc	r29, r27
    3930:	0f b6       	in	r0, 0x3f	; 63
    3932:	f8 94       	cli
    3934:	de bf       	out	0x3e, r29	; 62
    3936:	0f be       	out	0x3f, r0	; 63
    3938:	cd bf       	out	0x3d, r28	; 61
    393a:	09 94       	ijmp

0000393c <__epilogue_restores__>:
    393c:	2a 88       	ldd	r2, Y+18	; 0x12
    393e:	39 88       	ldd	r3, Y+17	; 0x11
    3940:	48 88       	ldd	r4, Y+16	; 0x10
    3942:	5f 84       	ldd	r5, Y+15	; 0x0f
    3944:	6e 84       	ldd	r6, Y+14	; 0x0e
    3946:	7d 84       	ldd	r7, Y+13	; 0x0d
    3948:	8c 84       	ldd	r8, Y+12	; 0x0c
    394a:	9b 84       	ldd	r9, Y+11	; 0x0b
    394c:	aa 84       	ldd	r10, Y+10	; 0x0a
    394e:	b9 84       	ldd	r11, Y+9	; 0x09
    3950:	c8 84       	ldd	r12, Y+8	; 0x08
    3952:	df 80       	ldd	r13, Y+7	; 0x07
    3954:	ee 80       	ldd	r14, Y+6	; 0x06
    3956:	fd 80       	ldd	r15, Y+5	; 0x05
    3958:	0c 81       	ldd	r16, Y+4	; 0x04
    395a:	1b 81       	ldd	r17, Y+3	; 0x03
    395c:	aa 81       	ldd	r26, Y+2	; 0x02
    395e:	b9 81       	ldd	r27, Y+1	; 0x01
    3960:	ce 0f       	add	r28, r30
    3962:	d1 1d       	adc	r29, r1
    3964:	0f b6       	in	r0, 0x3f	; 63
    3966:	f8 94       	cli
    3968:	de bf       	out	0x3e, r29	; 62
    396a:	0f be       	out	0x3f, r0	; 63
    396c:	cd bf       	out	0x3d, r28	; 61
    396e:	ed 01       	movw	r28, r26
    3970:	08 95       	ret

00003972 <_exit>:
    3972:	f8 94       	cli

00003974 <__stop_program>:
    3974:	ff cf       	rjmp	.-2      	; 0x3974 <__stop_program>
